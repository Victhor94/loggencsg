//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5446
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Google.Apis.Books.v1.Data {
    using System;
    using System.Collections;
    using System.Collections.Generic;
    
    
    public class Bookshelf : Google.Apis.Requests.IDirectResponseSchema {
        
        private string access;
        
        private string created;
        
        private string description;
        
        private long id;
        
        private string kind;
        
        private string selfLink;
        
        private string title;
        
        private string updated;
        
        private long volumeCount;
        
        private string volumesLastUpdated;
        
        private Google.Apis.Requests.RequestError error;
        
        private string eTag;
        
        /// <summary>Whether this bookshelf is PUBLIC or PRIVATE.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("access")]
        public virtual string Access {
            get {
                return this.access;
            }
            set {
                this.access = value;
            }
        }
        
        /// <summary>Created time for this bookshelf (formatted UTC timestamp with millisecond resolution).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("created")]
        public virtual string Created {
            get {
                return this.created;
            }
            set {
                this.created = value;
            }
        }
        
        /// <summary>Description of this bookshelf.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description {
            get {
                return this.description;
            }
            set {
                this.description = value;
            }
        }
        
        /// <summary>Id of this bookshelf, only unique by user.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual long Id {
            get {
                return this.id;
            }
            set {
                this.id = value;
            }
        }
        
        /// <summary>Resource type for bookshelf metadata.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this.kind;
            }
            set {
                this.kind = value;
            }
        }
        
        /// <summary>URL to this resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("selfLink")]
        public virtual string SelfLink {
            get {
                return this.selfLink;
            }
            set {
                this.selfLink = value;
            }
        }
        
        /// <summary>Title of this bookshelf.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("title")]
        public virtual string Title {
            get {
                return this.title;
            }
            set {
                this.title = value;
            }
        }
        
        /// <summary>Last modified time of this bookshelf (formatted UTC timestamp with millisecond resolution).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("updated")]
        public virtual string Updated {
            get {
                return this.updated;
            }
            set {
                this.updated = value;
            }
        }
        
        /// <summary>Number of volumes in this bookshelf.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("volumeCount")]
        public virtual long VolumeCount {
            get {
                return this.volumeCount;
            }
            set {
                this.volumeCount = value;
            }
        }
        
        /// <summary>Last time a volume was added or removed from this bookshelf (formatted UTC timestamp with millisecond resolution).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("volumesLastUpdated")]
        public virtual string VolumesLastUpdated {
            get {
                return this.volumesLastUpdated;
            }
            set {
                this.volumesLastUpdated = value;
            }
        }
        
        [Newtonsoft.Json.JsonPropertyAttribute("error")]
        public virtual Google.Apis.Requests.RequestError Error {
            get {
                return this.error;
            }
            set {
                this.error = value;
            }
        }
        
        public virtual string ETag {
            get {
                return this.eTag;
            }
            set {
                this.eTag = value;
            }
        }
    }
    
    public class Bookshelves : Google.Apis.Requests.IDirectResponseSchema {
        
        private IList<Bookshelf> items;
        
        private string kind;
        
        private Google.Apis.Requests.RequestError error;
        
        private string eTag;
        
        /// <summary>A list of bookshelves.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual IList<Bookshelf> Items {
            get {
                return this.items;
            }
            set {
                this.items = value;
            }
        }
        
        /// <summary>Resource type.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this.kind;
            }
            set {
                this.kind = value;
            }
        }
        
        [Newtonsoft.Json.JsonPropertyAttribute("error")]
        public virtual Google.Apis.Requests.RequestError Error {
            get {
                return this.error;
            }
            set {
                this.error = value;
            }
        }
        
        public virtual string ETag {
            get {
                return this.eTag;
            }
            set {
                this.eTag = value;
            }
        }
    }
    
    public class DownloadAccessRestriction {
        
        private bool deviceAllowed;
        
        private long downloadsAcquired;
        
        private bool justAcquired;
        
        private string kind;
        
        private long maxDownloadDevices;
        
        private string message;
        
        private string nonce;
        
        private string reasonCode;
        
        private bool restricted;
        
        private string signature;
        
        private string source;
        
        private string volumeId;
        
        /// <summary>If restricted, whether access is granted for this (user, device, volume).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("deviceAllowed")]
        public virtual bool DeviceAllowed {
            get {
                return this.deviceAllowed;
            }
            set {
                this.deviceAllowed = value;
            }
        }
        
        /// <summary>If restricted, the number of content download licenses already acquired (including the requesting client, if licensed).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("downloadsAcquired")]
        public virtual long DownloadsAcquired {
            get {
                return this.downloadsAcquired;
            }
            set {
                this.downloadsAcquired = value;
            }
        }
        
        /// <summary>If deviceAllowed, whether access was just acquired with this request.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("justAcquired")]
        public virtual bool JustAcquired {
            get {
                return this.justAcquired;
            }
            set {
                this.justAcquired = value;
            }
        }
        
        /// <summary>Resource type.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this.kind;
            }
            set {
                this.kind = value;
            }
        }
        
        /// <summary>If restricted, the maximum number of content download licenses for this volume.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("maxDownloadDevices")]
        public virtual long MaxDownloadDevices {
            get {
                return this.maxDownloadDevices;
            }
            set {
                this.maxDownloadDevices = value;
            }
        }
        
        /// <summary>Error/warning message.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("message")]
        public virtual string Message {
            get {
                return this.message;
            }
            set {
                this.message = value;
            }
        }
        
        /// <summary>Client nonce for verification. Download access and client-validation only.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nonce")]
        public virtual string Nonce {
            get {
                return this.nonce;
            }
            set {
                this.nonce = value;
            }
        }
        
        /// <summary>Error/warning reason code. Additional codes may be added in the future. 0 OK 100 ACCESS_DENIED_PUBLISHER_LIMIT 101 ACCESS_DENIED_LIMIT 200 WARNING_USED_LAST_ACCESS</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("reasonCode")]
        public virtual string ReasonCode {
            get {
                return this.reasonCode;
            }
            set {
                this.reasonCode = value;
            }
        }
        
        /// <summary>Whether this volume has any download access restrictions.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("restricted")]
        public virtual bool Restricted {
            get {
                return this.restricted;
            }
            set {
                this.restricted = value;
            }
        }
        
        /// <summary>Response signature.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("signature")]
        public virtual string Signature {
            get {
                return this.signature;
            }
            set {
                this.signature = value;
            }
        }
        
        /// <summary>Client app identifier for verification. Download access and client-validation only.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("source")]
        public virtual string Source {
            get {
                return this.source;
            }
            set {
                this.source = value;
            }
        }
        
        /// <summary>Identifies the volume for which this entry applies.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("volumeId")]
        public virtual string VolumeId {
            get {
                return this.volumeId;
            }
            set {
                this.volumeId = value;
            }
        }
    }
    
    public class ReadingPosition {
        
        private string epubCfiPosition;
        
        private string gbImagePosition;
        
        private string gbTextPosition;
        
        private string kind;
        
        private string pdfPosition;
        
        private string updated;
        
        private string volumeId;
        
        /// <summary>Position in an EPUB as a CFI.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("epubCfiPosition")]
        public virtual string EpubCfiPosition {
            get {
                return this.epubCfiPosition;
            }
            set {
                this.epubCfiPosition = value;
            }
        }
        
        /// <summary>Position in a volume for image-based content.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("gbImagePosition")]
        public virtual string GbImagePosition {
            get {
                return this.gbImagePosition;
            }
            set {
                this.gbImagePosition = value;
            }
        }
        
        /// <summary>Position in a volume for text-based content.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("gbTextPosition")]
        public virtual string GbTextPosition {
            get {
                return this.gbTextPosition;
            }
            set {
                this.gbTextPosition = value;
            }
        }
        
        /// <summary>Resource type for a reading position.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this.kind;
            }
            set {
                this.kind = value;
            }
        }
        
        /// <summary>Position in a PDF file.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("pdfPosition")]
        public virtual string PdfPosition {
            get {
                return this.pdfPosition;
            }
            set {
                this.pdfPosition = value;
            }
        }
        
        /// <summary>Timestamp when this reading position was last updated (formatted UTC timestamp with millisecond resolution).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("updated")]
        public virtual string Updated {
            get {
                return this.updated;
            }
            set {
                this.updated = value;
            }
        }
        
        /// <summary>Volume id associated with this reading position.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("volumeId")]
        public virtual string VolumeId {
            get {
                return this.volumeId;
            }
            set {
                this.volumeId = value;
            }
        }
    }
    
    public class Review {
        
        private Review.AuthorData author;
        
        private string content;
        
        private string date;
        
        private string fullTextUrl;
        
        private string kind;
        
        private string rating;
        
        private Review.SourceData source;
        
        private string title;
        
        private string type;
        
        private string volumeId;
        
        /// <summary>Author of this review.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("author")]
        public virtual Review.AuthorData Author {
            get {
                return this.author;
            }
            set {
                this.author = value;
            }
        }
        
        /// <summary>Review text.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("content")]
        public virtual string Content {
            get {
                return this.content;
            }
            set {
                this.content = value;
            }
        }
        
        /// <summary>Date of this review.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("date")]
        public virtual string Date {
            get {
                return this.date;
            }
            set {
                this.date = value;
            }
        }
        
        /// <summary>URL for the full review text, for reviews gathered from the web.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("fullTextUrl")]
        public virtual string FullTextUrl {
            get {
                return this.fullTextUrl;
            }
            set {
                this.fullTextUrl = value;
            }
        }
        
        /// <summary>Resource type for a review.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this.kind;
            }
            set {
                this.kind = value;
            }
        }
        
        /// <summary>Star rating for this review. Possible values are ONE, TWO, THREE, FOUR, FIVE or NOT_RATED.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("rating")]
        public virtual string Rating {
            get {
                return this.rating;
            }
            set {
                this.rating = value;
            }
        }
        
        /// <summary>Information regarding the source of this review, when the review is not from a Google Books user.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("source")]
        public virtual Review.SourceData Source {
            get {
                return this.source;
            }
            set {
                this.source = value;
            }
        }
        
        /// <summary>Title for this review.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("title")]
        public virtual string Title {
            get {
                return this.title;
            }
            set {
                this.title = value;
            }
        }
        
        /// <summary>Source type for this review. Possible values are EDITORIAL, WEB_USER or GOOGLE_USER.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("type")]
        public virtual string Type {
            get {
                return this.type;
            }
            set {
                this.type = value;
            }
        }
        
        /// <summary>Volume that this review is for.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("volumeId")]
        public virtual string VolumeId {
            get {
                return this.volumeId;
            }
            set {
                this.volumeId = value;
            }
        }
        
        /// <summary>Author of this review.</summary>
        public class AuthorData {
            
            private string displayName;
            
            /// <summary>Name of this person.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("displayName")]
            public virtual string DisplayName {
                get {
                    return this.displayName;
                }
                set {
                    this.displayName = value;
                }
            }
        }
        
        /// <summary>Information regarding the source of this review, when the review is not from a Google Books user.</summary>
        public class SourceData {
            
            private string description;
            
            private string extraDescription;
            
            private string url;
            
            /// <summary>Name of the source.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("description")]
            public virtual string Description {
                get {
                    return this.description;
                }
                set {
                    this.description = value;
                }
            }
            
            /// <summary>Extra text about the source of the review.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("extraDescription")]
            public virtual string ExtraDescription {
                get {
                    return this.extraDescription;
                }
                set {
                    this.extraDescription = value;
                }
            }
            
            /// <summary>URL of the source of the review.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("url")]
            public virtual string Url {
                get {
                    return this.url;
                }
                set {
                    this.url = value;
                }
            }
        }
    }
    
    public class Volume : Google.Apis.Requests.IDirectResponseSchema {
        
        private Volume.AccessInfoData accessInfo;
        
        private string etag;
        
        private string id;
        
        private string kind;
        
        private Volume.SaleInfoData saleInfo;
        
        private string selfLink;
        
        private Volume.UserInfoData userInfo;
        
        private Volume.VolumeInfoData volumeInfo;
        
        private Google.Apis.Requests.RequestError error;
        
        /// <summary>Any information about a volume related to reading or obtaining that volume text. This information can depend on country (books may be public domain in one country but not in another, e.g.).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("accessInfo")]
        public virtual Volume.AccessInfoData AccessInfo {
            get {
                return this.accessInfo;
            }
            set {
                this.accessInfo = value;
            }
        }
        
        /// <summary>Opaque identifier for a specific version of a volume resource. (In LITE projection)</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("etag")]
        public virtual string ETag {
            get {
                return this.etag;
            }
            set {
                this.etag = value;
            }
        }
        
        /// <summary>Unique identifier for a volume. (In LITE projection.)</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id {
            get {
                return this.id;
            }
            set {
                this.id = value;
            }
        }
        
        /// <summary>Resource type for a volume. (In LITE projection.)</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this.kind;
            }
            set {
                this.kind = value;
            }
        }
        
        /// <summary>Any information about a volume related to the eBookstore and/or purchaseability. This information can depend on the country where the request originates from (i.e. books may not be for sale in certain countries).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("saleInfo")]
        public virtual Volume.SaleInfoData SaleInfo {
            get {
                return this.saleInfo;
            }
            set {
                this.saleInfo = value;
            }
        }
        
        /// <summary>URL to this resource. (In LITE projection.)</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("selfLink")]
        public virtual string SelfLink {
            get {
                return this.selfLink;
            }
            set {
                this.selfLink = value;
            }
        }
        
        /// <summary>User specific information related to this volume. (e.g. page this user last read or whether they purchased this book)</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("userInfo")]
        public virtual Volume.UserInfoData UserInfo {
            get {
                return this.userInfo;
            }
            set {
                this.userInfo = value;
            }
        }
        
        /// <summary>General volume information.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("volumeInfo")]
        public virtual Volume.VolumeInfoData VolumeInfo {
            get {
                return this.volumeInfo;
            }
            set {
                this.volumeInfo = value;
            }
        }
        
        [Newtonsoft.Json.JsonPropertyAttribute("error")]
        public virtual Google.Apis.Requests.RequestError Error {
            get {
                return this.error;
            }
            set {
                this.error = value;
            }
        }
        
        /// <summary>Any information about a volume related to reading or obtaining that volume text. This information can depend on country (books may be public domain in one country but not in another, e.g.).</summary>
        public class AccessInfoData {
            
            private string accessViewStatus;
            
            private string country;
            
            private DownloadAccessRestriction downloadAccess;
            
            private bool embeddable;
            
            private AccessInfoData.EpubData epub;
            
            private AccessInfoData.PdfData pdf;
            
            private bool publicDomain;
            
            private string textToSpeechPermission;
            
            private string viewability;
            
            /// <summary>Combines the access and viewability of this volume into a single status field for this user. Values can be FULL_PURCHASED, FULL_PUBLIC_DOMAIN, SAMPLE or NONE. (In LITE projection.)</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("accessViewStatus")]
            public virtual string AccessViewStatus {
                get {
                    return this.accessViewStatus;
                }
                set {
                    this.accessViewStatus = value;
                }
            }
            
            /// <summary>The two-letter ISO_3166-1 country code for which this access information is valid. (In LITE projection.)</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("country")]
            public virtual string Country {
                get {
                    return this.country;
                }
                set {
                    this.country = value;
                }
            }
            
            [Newtonsoft.Json.JsonPropertyAttribute("downloadAccess")]
            public virtual DownloadAccessRestriction DownloadAccess {
                get {
                    return this.downloadAccess;
                }
                set {
                    this.downloadAccess = value;
                }
            }
            
            /// <summary>Whether this volume can be embedded in a viewport using the Embedded Viewer API.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("embeddable")]
            public virtual bool Embeddable {
                get {
                    return this.embeddable;
                }
                set {
                    this.embeddable = value;
                }
            }
            
            /// <summary>Information about epub content. (In LITE projection.)</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("epub")]
            public virtual AccessInfoData.EpubData Epub {
                get {
                    return this.epub;
                }
                set {
                    this.epub = value;
                }
            }
            
            /// <summary>Information about pdf content. (In LITE projection.)</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("pdf")]
            public virtual AccessInfoData.PdfData Pdf {
                get {
                    return this.pdf;
                }
                set {
                    this.pdf = value;
                }
            }
            
            /// <summary>Whether or not this book is public domain in the country listed above.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("publicDomain")]
            public virtual bool PublicDomain {
                get {
                    return this.publicDomain;
                }
                set {
                    this.publicDomain = value;
                }
            }
            
            /// <summary>Whether text-to-speech is permitted for this volume. Values can be ALLOWED, ALLOWED_FOR_ACCESSIBILITY, or NOT_ALLOWED.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("textToSpeechPermission")]
            public virtual string TextToSpeechPermission {
                get {
                    return this.textToSpeechPermission;
                }
                set {
                    this.textToSpeechPermission = value;
                }
            }
            
            /// <summary>The read access of a volume. Possible values are PARTIAL, ALL_PAGES, NO_PAGES or UNKNOWN. This value depends on the country listed above. A value of PARTIAL means that the publisher has allowed some portion of the volume to be viewed publicly, without purchase. This can apply to eBooks as well as non-eBooks. Public domain books will always have a value of ALL_PAGES.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("viewability")]
            public virtual string Viewability {
                get {
                    return this.viewability;
                }
                set {
                    this.viewability = value;
                }
            }
            
            /// <summary>Information about epub content. (In LITE projection.)</summary>
            public class EpubData {
                
                private string acsTokenLink;
                
                private string downloadLink;
                
                /// <summary>URL to retrieve ACS token for epub download. (In LITE projection.)</summary>
                [Newtonsoft.Json.JsonPropertyAttribute("acsTokenLink")]
                public virtual string AcsTokenLink {
                    get {
                        return this.acsTokenLink;
                    }
                    set {
                        this.acsTokenLink = value;
                    }
                }
                
                /// <summary>URL to download epub. (In LITE projection.)</summary>
                [Newtonsoft.Json.JsonPropertyAttribute("downloadLink")]
                public virtual string DownloadLink {
                    get {
                        return this.downloadLink;
                    }
                    set {
                        this.downloadLink = value;
                    }
                }
            }
            
            /// <summary>Information about pdf content. (In LITE projection.)</summary>
            public class PdfData {
                
                private string acsTokenLink;
                
                private string downloadLink;
                
                /// <summary>URL to retrieve ACS token for pdf download. (In LITE projection.)</summary>
                [Newtonsoft.Json.JsonPropertyAttribute("acsTokenLink")]
                public virtual string AcsTokenLink {
                    get {
                        return this.acsTokenLink;
                    }
                    set {
                        this.acsTokenLink = value;
                    }
                }
                
                /// <summary>URL to download pdf. (In LITE projection.)</summary>
                [Newtonsoft.Json.JsonPropertyAttribute("downloadLink")]
                public virtual string DownloadLink {
                    get {
                        return this.downloadLink;
                    }
                    set {
                        this.downloadLink = value;
                    }
                }
            }
        }
        
        /// <summary>Any information about a volume related to the eBookstore and/or purchaseability. This information can depend on the country where the request originates from (i.e. books may not be for sale in certain countries).</summary>
        public class SaleInfoData {
            
            private string buyLink;
            
            private string country;
            
            private bool isEbook;
            
            private SaleInfoData.ListPriceData listPrice;
            
            private SaleInfoData.RetailPriceData retailPrice;
            
            private string saleability;
            
            /// <summary>URL to purchase this volume on the Google Books site. (In LITE projection)</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("buyLink")]
            public virtual string BuyLink {
                get {
                    return this.buyLink;
                }
                set {
                    this.buyLink = value;
                }
            }
            
            /// <summary>The two-letter ISO_3166-1 country code for which this sale information is valid. (In LITE projection.)</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("country")]
            public virtual string Country {
                get {
                    return this.country;
                }
                set {
                    this.country = value;
                }
            }
            
            /// <summary>Whether or not this volume is an eBook (can be added to the My eBooks shelf).</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("isEbook")]
            public virtual bool IsEbook {
                get {
                    return this.isEbook;
                }
                set {
                    this.isEbook = value;
                }
            }
            
            /// <summary>Suggested retail price. (In LITE projection.)</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("listPrice")]
            public virtual SaleInfoData.ListPriceData ListPrice {
                get {
                    return this.listPrice;
                }
                set {
                    this.listPrice = value;
                }
            }
            
            /// <summary>The actual selling price of the book. This is the same as the suggested retail or list price unless there are offers or discounts on this volume. (In LITE projection.)</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("retailPrice")]
            public virtual SaleInfoData.RetailPriceData RetailPrice {
                get {
                    return this.retailPrice;
                }
                set {
                    this.retailPrice = value;
                }
            }
            
            /// <summary>Whether or not this book is available for sale or offered for free in the Google eBookstore for the country listed above. Possible values are FOR_SALE, FREE or NOT_FOR_SALE.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("saleability")]
            public virtual string Saleability {
                get {
                    return this.saleability;
                }
                set {
                    this.saleability = value;
                }
            }
            
            /// <summary>Suggested retail price. (In LITE projection.)</summary>
            public class ListPriceData {
                
                private double amount;
                
                private string currencyCode;
                
                /// <summary>Amount in the currency listed below. (In LITE projection.)</summary>
                [Newtonsoft.Json.JsonPropertyAttribute("amount")]
                public virtual double Amount {
                    get {
                        return this.amount;
                    }
                    set {
                        this.amount = value;
                    }
                }
                
                /// <summary>An ISO 4217, three-letter currency code. (In LITE projection.)</summary>
                [Newtonsoft.Json.JsonPropertyAttribute("currencyCode")]
                public virtual string CurrencyCode {
                    get {
                        return this.currencyCode;
                    }
                    set {
                        this.currencyCode = value;
                    }
                }
            }
            
            /// <summary>The actual selling price of the book. This is the same as the suggested retail or list price unless there are offers or discounts on this volume. (In LITE projection.)</summary>
            public class RetailPriceData {
                
                private double amount;
                
                private string currencyCode;
                
                /// <summary>Amount in the currency listed below. (In LITE projection.)</summary>
                [Newtonsoft.Json.JsonPropertyAttribute("amount")]
                public virtual double Amount {
                    get {
                        return this.amount;
                    }
                    set {
                        this.amount = value;
                    }
                }
                
                /// <summary>An ISO 4217, three-letter currency code. (In LITE projection.)</summary>
                [Newtonsoft.Json.JsonPropertyAttribute("currencyCode")]
                public virtual string CurrencyCode {
                    get {
                        return this.currencyCode;
                    }
                    set {
                        this.currencyCode = value;
                    }
                }
            }
        }
        
        /// <summary>User specific information related to this volume. (e.g. page this user last read or whether they purchased this book)</summary>
        public class UserInfoData {
            
            private bool isPurchased;
            
            private ReadingPosition readingPosition;
            
            private Review review;
            
            private string updated;
            
            /// <summary>Whether or not this volume was purchased by the authenticated user making the request. (In LITE projection.)</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("isPurchased")]
            public virtual bool IsPurchased {
                get {
                    return this.isPurchased;
                }
                set {
                    this.isPurchased = value;
                }
            }
            
            [Newtonsoft.Json.JsonPropertyAttribute("readingPosition")]
            public virtual ReadingPosition ReadingPosition {
                get {
                    return this.readingPosition;
                }
                set {
                    this.readingPosition = value;
                }
            }
            
            [Newtonsoft.Json.JsonPropertyAttribute("review")]
            public virtual Review Review {
                get {
                    return this.review;
                }
                set {
                    this.review = value;
                }
            }
            
            /// <summary>Timestamp when this volume was last modified by a user action, such as a reading position update, volume purchase or writing a review. (RFC 3339 UTC date-time format).</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("updated")]
            public virtual string Updated {
                get {
                    return this.updated;
                }
                set {
                    this.updated = value;
                }
            }
        }
        
        /// <summary>General volume information.</summary>
        public class VolumeInfoData {
            
            private IList<System.String> authors;
            
            private double averageRating;
            
            private IList<System.String> categories;
            
            private string contentVersion;
            
            private string description;
            
            private VolumeInfoData.DimensionsData dimensions;
            
            private VolumeInfoData.ImageLinksData imageLinks;
            
            private IList<VolumeInfoData.IndustryIdentifiersData> industryIdentifiers;
            
            private string infoLink;
            
            private string language;
            
            private string mainCategory;
            
            private long pageCount;
            
            private string previewLink;
            
            private string printType;
            
            private string publishedDate;
            
            private string publisher;
            
            private long ratingsCount;
            
            private string subtitle;
            
            private string title;
            
            /// <summary>The names of the authors and/or editors for this volume. (In LITE projection)</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("authors")]
            public virtual IList<System.String> Authors {
                get {
                    return this.authors;
                }
                set {
                    this.authors = value;
                }
            }
            
            /// <summary>The mean review rating for this volume. (min = 1.0, max = 5.0)</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("averageRating")]
            public virtual double AverageRating {
                get {
                    return this.averageRating;
                }
                set {
                    this.averageRating = value;
                }
            }
            
            /// <summary>A list of subject categories, such as &quot;Fiction&quot;, &quot;Suspense&quot;, etc.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("categories")]
            public virtual IList<System.String> Categories {
                get {
                    return this.categories;
                }
                set {
                    this.categories = value;
                }
            }
            
            /// <summary>An identifier for the version of the volume content (text &amp; images). (In LITE projection)</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("contentVersion")]
            public virtual string ContentVersion {
                get {
                    return this.contentVersion;
                }
                set {
                    this.contentVersion = value;
                }
            }
            
            /// <summary>A synopsis of the volume. The text of the description is formatted in HTML and includes simple formatting elements, such as , ,
            ///, etc. (In LITE projection.)</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("description")]
            public virtual string Description {
                get {
                    return this.description;
                }
                set {
                    this.description = value;
                }
            }
            
            /// <summary>Physical dimensions of this volume.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("dimensions")]
            public virtual VolumeInfoData.DimensionsData Dimensions {
                get {
                    return this.dimensions;
                }
                set {
                    this.dimensions = value;
                }
            }
            
            /// <summary>A list of image links for all the sizes that are available. (In LITE projection.)</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("imageLinks")]
            public virtual VolumeInfoData.ImageLinksData ImageLinks {
                get {
                    return this.imageLinks;
                }
                set {
                    this.imageLinks = value;
                }
            }
            
            /// <summary>Industry standard identifiers for this volume.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("industryIdentifiers")]
            public virtual IList<VolumeInfoData.IndustryIdentifiersData> IndustryIdentifiers {
                get {
                    return this.industryIdentifiers;
                }
                set {
                    this.industryIdentifiers = value;
                }
            }
            
            /// <summary>URL to view information about this volume on the Google Books site. (In LITE projection)</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("infoLink")]
            public virtual string InfoLink {
                get {
                    return this.infoLink;
                }
                set {
                    this.infoLink = value;
                }
            }
            
            /// <summary>Best language for this volume (based on content). It is the two-letter ISO 639-1 code such as &apos;fr&apos;, &apos;en&apos;, etc.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("language")]
            public virtual string Language {
                get {
                    return this.language;
                }
                set {
                    this.language = value;
                }
            }
            
            /// <summary>The main category to which this volume belongs. It will be the category from the categories list returned below that has the highest weight.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("mainCategory")]
            public virtual string MainCategory {
                get {
                    return this.mainCategory;
                }
                set {
                    this.mainCategory = value;
                }
            }
            
            /// <summary>Total number of pages.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("pageCount")]
            public virtual long PageCount {
                get {
                    return this.pageCount;
                }
                set {
                    this.pageCount = value;
                }
            }
            
            /// <summary>URL to preview this volume on the Google Books site.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("previewLink")]
            public virtual string PreviewLink {
                get {
                    return this.previewLink;
                }
                set {
                    this.previewLink = value;
                }
            }
            
            /// <summary>Type of publication of this volume. Possible values are BOOK or MAGAZINE.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("printType")]
            public virtual string PrintType {
                get {
                    return this.printType;
                }
                set {
                    this.printType = value;
                }
            }
            
            /// <summary>Date of publication. (In LITE projection.)</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("publishedDate")]
            public virtual string PublishedDate {
                get {
                    return this.publishedDate;
                }
                set {
                    this.publishedDate = value;
                }
            }
            
            /// <summary>Publisher of this volume. (In LITE projection.)</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("publisher")]
            public virtual string Publisher {
                get {
                    return this.publisher;
                }
                set {
                    this.publisher = value;
                }
            }
            
            /// <summary>The number of review ratings for this volume.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("ratingsCount")]
            public virtual long RatingsCount {
                get {
                    return this.ratingsCount;
                }
                set {
                    this.ratingsCount = value;
                }
            }
            
            /// <summary>Volume subtitle. (In LITE projection.)</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("subtitle")]
            public virtual string Subtitle {
                get {
                    return this.subtitle;
                }
                set {
                    this.subtitle = value;
                }
            }
            
            /// <summary>Volume title. (In LITE projection.)</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("title")]
            public virtual string Title {
                get {
                    return this.title;
                }
                set {
                    this.title = value;
                }
            }
            
            /// <summary>Physical dimensions of this volume.</summary>
            public class DimensionsData {
                
                private string height;
                
                private string thickness;
                
                private string width;
                
                /// <summary>Height or length of this volume (in cm).</summary>
                [Newtonsoft.Json.JsonPropertyAttribute("height")]
                public virtual string Height {
                    get {
                        return this.height;
                    }
                    set {
                        this.height = value;
                    }
                }
                
                /// <summary>Thickness of this volume (in cm).</summary>
                [Newtonsoft.Json.JsonPropertyAttribute("thickness")]
                public virtual string Thickness {
                    get {
                        return this.thickness;
                    }
                    set {
                        this.thickness = value;
                    }
                }
                
                /// <summary>Width of this volume (in cm).</summary>
                [Newtonsoft.Json.JsonPropertyAttribute("width")]
                public virtual string Width {
                    get {
                        return this.width;
                    }
                    set {
                        this.width = value;
                    }
                }
            }
            
            /// <summary>A list of image links for all the sizes that are available. (In LITE projection.)</summary>
            public class ImageLinksData {
                
                private string extraLarge;
                
                private string large;
                
                private string medium;
                
                private string small;
                
                private string smallThumbnail;
                
                private string thumbnail;
                
                /// <summary>Image link for extra large size (width of ~1280 pixels). (In LITE projection)</summary>
                [Newtonsoft.Json.JsonPropertyAttribute("extraLarge")]
                public virtual string ExtraLarge {
                    get {
                        return this.extraLarge;
                    }
                    set {
                        this.extraLarge = value;
                    }
                }
                
                /// <summary>Image link for large size (width of ~800 pixels). (In LITE projection)</summary>
                [Newtonsoft.Json.JsonPropertyAttribute("large")]
                public virtual string Large {
                    get {
                        return this.large;
                    }
                    set {
                        this.large = value;
                    }
                }
                
                /// <summary>Image link for medium size (width of ~575 pixels). (In LITE projection)</summary>
                [Newtonsoft.Json.JsonPropertyAttribute("medium")]
                public virtual string Medium {
                    get {
                        return this.medium;
                    }
                    set {
                        this.medium = value;
                    }
                }
                
                /// <summary>Image link for small size (width of ~300 pixels). (In LITE projection)</summary>
                [Newtonsoft.Json.JsonPropertyAttribute("small")]
                public virtual string Small {
                    get {
                        return this.small;
                    }
                    set {
                        this.small = value;
                    }
                }
                
                /// <summary>Image link for small thumbnail size (width of ~80 pixels). (In LITE projection)</summary>
                [Newtonsoft.Json.JsonPropertyAttribute("smallThumbnail")]
                public virtual string SmallThumbnail {
                    get {
                        return this.smallThumbnail;
                    }
                    set {
                        this.smallThumbnail = value;
                    }
                }
                
                /// <summary>Image link for thumbnail size (width of ~128 pixels). (In LITE projection)</summary>
                [Newtonsoft.Json.JsonPropertyAttribute("thumbnail")]
                public virtual string Thumbnail {
                    get {
                        return this.thumbnail;
                    }
                    set {
                        this.thumbnail = value;
                    }
                }
            }
            
            public class IndustryIdentifiersData {
                
                private string identifier;
                
                private string type;
                
                /// <summary>Industry specific volume identifier.</summary>
                [Newtonsoft.Json.JsonPropertyAttribute("identifier")]
                public virtual string Identifier {
                    get {
                        return this.identifier;
                    }
                    set {
                        this.identifier = value;
                    }
                }
                
                /// <summary>Identifier type. Possible values are ISBN_10, ISBN_13, ISSN and OTHER.</summary>
                [Newtonsoft.Json.JsonPropertyAttribute("type")]
                public virtual string Type {
                    get {
                        return this.type;
                    }
                    set {
                        this.type = value;
                    }
                }
            }
        }
    }
    
    public class Volumes : Google.Apis.Requests.IDirectResponseSchema {
        
        private IList<Volume> items;
        
        private string kind;
        
        private long totalItems;
        
        private Google.Apis.Requests.RequestError error;
        
        private string eTag;
        
        /// <summary>A list of volumes.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual IList<Volume> Items {
            get {
                return this.items;
            }
            set {
                this.items = value;
            }
        }
        
        /// <summary>Resource type.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this.kind;
            }
            set {
                this.kind = value;
            }
        }
        
        /// <summary>Total number of volumes found. This might be greater than the number of volumes returned in this response if results have been paginated.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("totalItems")]
        public virtual long TotalItems {
            get {
                return this.totalItems;
            }
            set {
                this.totalItems = value;
            }
        }
        
        [Newtonsoft.Json.JsonPropertyAttribute("error")]
        public virtual Google.Apis.Requests.RequestError Error {
            get {
                return this.error;
            }
            set {
                this.error = value;
            }
        }
        
        public virtual string ETag {
            get {
                return this.eTag;
            }
            set {
                this.eTag = value;
            }
        }
    }
}
namespace Google.Apis.Books.v1 {
    using System;
    using System.IO;
    using System.Collections.Generic;
    using Google.Apis;
    using Google.Apis.Discovery;
    
    
    public partial class BooksService : Google.Apis.Discovery.IRequestProvider {
        
        private Google.Apis.Discovery.IService genericService;
        
        private Google.Apis.Authentication.IAuthenticator authenticator;
        
        private const string DiscoveryDocument = "{\"kind\":\"discovery#restDescription\",\"id\":\"books:v1\",\"name\":\"books\",\"version\":\"v1\"" +
            ",\"title\":\"Books API\",\"description\":\"Lets you search for books and manage your Go" +
            "ogle Books library.\",\"icons\":{\"x16\":\"http://www.google.com/images/icons/product/" +
            "ebooks-16.png\",\"x32\":\"http://www.google.com/images/icons/product/ebooks-32.png\"}" +
            ",\"documentationLink\":\"https://code.google.com/apis/books/docs/v1/getting_started" +
            ".html\",\"labels\":[\"labs\"],\"protocol\":\"rest\",\"basePath\":\"/books/v1/\",\"parameters\":" +
            "{\"alt\":{\"type\":\"string\",\"description\":\"Data format for the response.\",\"default\":" +
            "\"json\",\"enum\":[\"json\"],\"enumDescriptions\":[\"Responses with Content-Type of appli" +
            "cation/json\"],\"location\":\"query\"},\"fields\":{\"type\":\"string\",\"description\":\"Selec" +
            "tor specifying which fields to include in a partial response.\",\"location\":\"query" +
            "\"},\"key\":{\"type\":\"string\",\"description\":\"API key. Your API key identifies your p" +
            "roject and provides you with API access, quota, and reports. Required unless you" +
            " provide an OAuth 2.0 token.\",\"location\":\"query\"},\"oauth_token\":{\"type\":\"string\"" +
            ",\"description\":\"OAuth 2.0 token for the current user.\",\"location\":\"query\"},\"pret" +
            "tyPrint\":{\"type\":\"boolean\",\"description\":\"Returns response with indentations and" +
            " line breaks.\",\"default\":\"true\",\"location\":\"query\"},\"userIp\":{\"type\":\"string\",\"d" +
            "escription\":\"IP address of the site where the request originates. Use this if yo" +
            "u want to enforce per-user limits.\",\"location\":\"query\"}},\"auth\":{\"oauth2\":{\"scop" +
            "es\":{\"https://www.googleapis.com/auth/books\":{\"description\":\"Manage your books\"}" +
            "}}},\"schemas\":{\"Bookshelf\":{\"id\":\"Bookshelf\",\"type\":\"object\",\"properties\":{\"acce" +
            "ss\":{\"type\":\"string\",\"description\":\"Whether this bookshelf is PUBLIC or PRIVATE." +
            "\"},\"created\":{\"type\":\"string\",\"description\":\"Created time for this bookshelf (fo" +
            "rmatted UTC timestamp with millisecond resolution).\",\"format\":\"date-time\"},\"desc" +
            "ription\":{\"type\":\"string\",\"description\":\"Description of this bookshelf.\"},\"id\":{" +
            "\"type\":\"integer\",\"description\":\"Id of this bookshelf, only unique by user.\",\"for" +
            "mat\":\"int32\"},\"kind\":{\"type\":\"string\",\"description\":\"Resource type for bookshelf" +
            " metadata.\",\"default\":\"books#bookshelf\"},\"selfLink\":{\"type\":\"string\",\"descriptio" +
            "n\":\"URL to this resource.\"},\"title\":{\"type\":\"string\",\"description\":\"Title of thi" +
            "s bookshelf.\"},\"updated\":{\"type\":\"string\",\"description\":\"Last modified time of t" +
            "his bookshelf (formatted UTC timestamp with millisecond resolution).\",\"format\":\"" +
            "date-time\"},\"volumeCount\":{\"type\":\"integer\",\"description\":\"Number of volumes in " +
            "this bookshelf.\",\"format\":\"int32\"},\"volumesLastUpdated\":{\"type\":\"string\",\"descri" +
            "ption\":\"Last time a volume was added or removed from this bookshelf (formatted U" +
            "TC timestamp with millisecond resolution).\",\"format\":\"date-time\"}}},\"Bookshelves" +
            "\":{\"id\":\"Bookshelves\",\"type\":\"object\",\"properties\":{\"items\":{\"type\":\"array\",\"des" +
            "cription\":\"A list of bookshelves.\",\"items\":{\"$ref\":\"Bookshelf\"}},\"kind\":{\"type\":" +
            "\"string\",\"description\":\"Resource type.\",\"default\":\"books#bookshelves\"}}},\"Downlo" +
            "adAccessRestriction\":{\"id\":\"DownloadAccessRestriction\",\"type\":\"object\",\"properti" +
            "es\":{\"deviceAllowed\":{\"type\":\"boolean\",\"description\":\"If restricted, whether acc" +
            "ess is granted for this (user, device, volume).\"},\"downloadsAcquired\":{\"type\":\"i" +
            "nteger\",\"description\":\"If restricted, the number of content download licenses al" +
            "ready acquired (including the requesting client, if licensed).\",\"format\":\"int32\"" +
            "},\"justAcquired\":{\"type\":\"boolean\",\"description\":\"If deviceAllowed, whether acce" +
            "ss was just acquired with this request.\"},\"kind\":{\"type\":\"string\",\"description\":" +
            "\"Resource type.\",\"default\":\"books#downloadAccessRestriction\"},\"maxDownloadDevice" +
            "s\":{\"type\":\"integer\",\"description\":\"If restricted, the maximum number of content" +
            " download licenses for this volume.\",\"format\":\"int32\"},\"message\":{\"type\":\"string" +
            "\",\"description\":\"Error/warning message.\"},\"nonce\":{\"type\":\"string\",\"description\"" +
            ":\"Client nonce for verification. Download access and client-validation only.\"},\"" +
            "reasonCode\":{\"type\":\"string\",\"description\":\"Error/warning reason code. Additiona" +
            "l codes may be added in the future. 0 OK 100 ACCESS_DENIED_PUBLISHER_LIMIT 101 A" +
            "CCESS_DENIED_LIMIT 200 WARNING_USED_LAST_ACCESS\"},\"restricted\":{\"type\":\"boolean\"" +
            ",\"description\":\"Whether this volume has any download access restrictions.\"},\"sig" +
            "nature\":{\"type\":\"string\",\"description\":\"Response signature.\"},\"source\":{\"type\":\"" +
            "string\",\"description\":\"Client app identifier for verification. Download access a" +
            "nd client-validation only.\"},\"volumeId\":{\"type\":\"string\",\"description\":\"Identifi" +
            "es the volume for which this entry applies.\"}}},\"ReadingPosition\":{\"id\":\"Reading" +
            "Position\",\"type\":\"object\",\"properties\":{\"epubCfiPosition\":{\"type\":\"string\",\"desc" +
            "ription\":\"Position in an EPUB as a CFI.\"},\"gbImagePosition\":{\"type\":\"string\",\"de" +
            "scription\":\"Position in a volume for image-based content.\"},\"gbTextPosition\":{\"t" +
            "ype\":\"string\",\"description\":\"Position in a volume for text-based content.\"},\"kin" +
            "d\":{\"type\":\"string\",\"description\":\"Resource type for a reading position.\",\"defau" +
            "lt\":\"books#readingPosition\"},\"pdfPosition\":{\"type\":\"string\",\"description\":\"Posit" +
            "ion in a PDF file.\"},\"updated\":{\"type\":\"string\",\"description\":\"Timestamp when th" +
            "is reading position was last updated (formatted UTC timestamp with millisecond r" +
            "esolution).\",\"format\":\"date-time\"},\"volumeId\":{\"type\":\"string\",\"description\":\"Vo" +
            "lume id associated with this reading position.\"}}},\"Review\":{\"id\":\"Review\",\"type" +
            "\":\"object\",\"properties\":{\"author\":{\"type\":\"object\",\"description\":\"Author of this" +
            " review.\",\"properties\":{\"displayName\":{\"type\":\"string\",\"description\":\"Name of th" +
            "is person.\"}}},\"content\":{\"type\":\"string\",\"description\":\"Review text.\"},\"date\":{" +
            "\"type\":\"string\",\"description\":\"Date of this review.\"},\"fullTextUrl\":{\"type\":\"str" +
            "ing\",\"description\":\"URL for the full review text, for reviews gathered from the " +
            "web.\"},\"kind\":{\"type\":\"string\",\"description\":\"Resource type for a review.\",\"defa" +
            "ult\":\"books#review\"},\"rating\":{\"type\":\"string\",\"description\":\"Star rating for th" +
            "is review. Possible values are ONE, TWO, THREE, FOUR, FIVE or NOT_RATED.\"},\"sour" +
            "ce\":{\"type\":\"object\",\"description\":\"Information regarding the source of this rev" +
            "iew, when the review is not from a Google Books user.\",\"properties\":{\"descriptio" +
            "n\":{\"type\":\"string\",\"description\":\"Name of the source.\"},\"extraDescription\":{\"ty" +
            "pe\":\"string\",\"description\":\"Extra text about the source of the review.\"},\"url\":{" +
            "\"type\":\"string\",\"description\":\"URL of the source of the review.\"}}},\"title\":{\"ty" +
            "pe\":\"string\",\"description\":\"Title for this review.\"},\"type\":{\"type\":\"string\",\"de" +
            "scription\":\"Source type for this review. Possible values are EDITORIAL, WEB_USER" +
            " or GOOGLE_USER.\"},\"volumeId\":{\"type\":\"string\",\"description\":\"Volume that this r" +
            "eview is for.\"}}},\"Volume\":{\"id\":\"Volume\",\"type\":\"object\",\"properties\":{\"accessI" +
            "nfo\":{\"type\":\"object\",\"description\":\"Any information about a volume related to r" +
            "eading or obtaining that volume text. This information can depend on country (bo" +
            "oks may be public domain in one country but not in another, e.g.).\",\"properties\"" +
            ":{\"accessViewStatus\":{\"type\":\"string\",\"description\":\"Combines the access and vie" +
            "wability of this volume into a single status field for this user. Values can be " +
            "FULL_PURCHASED, FULL_PUBLIC_DOMAIN, SAMPLE or NONE. (In LITE projection.)\"},\"cou" +
            "ntry\":{\"type\":\"string\",\"description\":\"The two-letter ISO_3166-1 country code for" +
            " which this access information is valid. (In LITE projection.)\"},\"downloadAccess" +
            "\":{\"$ref\":\"DownloadAccessRestriction\",\"description\":\"Information about a volume\'" +
            "s download license access restrictions.\"},\"embeddable\":{\"type\":\"boolean\",\"descri" +
            "ption\":\"Whether this volume can be embedded in a viewport using the Embedded Vie" +
            "wer API.\"},\"epub\":{\"type\":\"object\",\"description\":\"Information about epub content" +
            ". (In LITE projection.)\",\"properties\":{\"acsTokenLink\":{\"type\":\"string\",\"descript" +
            "ion\":\"URL to retrieve ACS token for epub download. (In LITE projection.)\"},\"down" +
            "loadLink\":{\"type\":\"string\",\"description\":\"URL to download epub. (In LITE project" +
            "ion.)\"}}},\"pdf\":{\"type\":\"object\",\"description\":\"Information about pdf content. (" +
            "In LITE projection.)\",\"properties\":{\"acsTokenLink\":{\"type\":\"string\",\"description" +
            "\":\"URL to retrieve ACS token for pdf download. (In LITE projection.)\"},\"download" +
            "Link\":{\"type\":\"string\",\"description\":\"URL to download pdf. (In LITE projection.)" +
            "\"}}},\"publicDomain\":{\"type\":\"boolean\",\"description\":\"Whether or not this book is" +
            " public domain in the country listed above.\"},\"textToSpeechPermission\":{\"type\":\"" +
            "string\",\"description\":\"Whether text-to-speech is permitted for this volume. Valu" +
            "es can be ALLOWED, ALLOWED_FOR_ACCESSIBILITY, or NOT_ALLOWED.\"},\"viewability\":{\"" +
            "type\":\"string\",\"description\":\"The read access of a volume. Possible values are P" +
            "ARTIAL, ALL_PAGES, NO_PAGES or UNKNOWN. This value depends on the country listed" +
            " above. A value of PARTIAL means that the publisher has allowed some portion of " +
            "the volume to be viewed publicly, without purchase. This can apply to eBooks as " +
            "well as non-eBooks. Public domain books will always have a value of ALL_PAGES.\"}" +
            "}},\"etag\":{\"type\":\"string\",\"description\":\"Opaque identifier for a specific versi" +
            "on of a volume resource. (In LITE projection)\"},\"id\":{\"type\":\"string\",\"descripti" +
            "on\":\"Unique identifier for a volume. (In LITE projection.)\"},\"kind\":{\"type\":\"str" +
            "ing\",\"description\":\"Resource type for a volume. (In LITE projection.)\",\"default\"" +
            ":\"books#volume\"},\"saleInfo\":{\"type\":\"object\",\"description\":\"Any information abou" +
            "t a volume related to the eBookstore and/or purchaseability. This information ca" +
            "n depend on the country where the request originates from (i.e. books may not be" +
            " for sale in certain countries).\",\"properties\":{\"buyLink\":{\"type\":\"string\",\"desc" +
            "ription\":\"URL to purchase this volume on the Google Books site. (In LITE project" +
            "ion)\"},\"country\":{\"type\":\"string\",\"description\":\"The two-letter ISO_3166-1 count" +
            "ry code for which this sale information is valid. (In LITE projection.)\"},\"isEbo" +
            "ok\":{\"type\":\"boolean\",\"description\":\"Whether or not this volume is an eBook (can" +
            " be added to the My eBooks shelf).\"},\"listPrice\":{\"type\":\"object\",\"description\":" +
            "\"Suggested retail price. (In LITE projection.)\",\"properties\":{\"amount\":{\"type\":\"" +
            "number\",\"description\":\"Amount in the currency listed below. (In LITE projection." +
            ")\",\"format\":\"double\"},\"currencyCode\":{\"type\":\"string\",\"description\":\"An ISO 4217" +
            ", three-letter currency code. (In LITE projection.)\"}}},\"retailPrice\":{\"type\":\"o" +
            "bject\",\"description\":\"The actual selling price of the book. This is the same as " +
            "the suggested retail or list price unless there are offers or discounts on this " +
            "volume. (In LITE projection.)\",\"properties\":{\"amount\":{\"type\":\"number\",\"descript" +
            "ion\":\"Amount in the currency listed below. (In LITE projection.)\",\"format\":\"doub" +
            "le\"},\"currencyCode\":{\"type\":\"string\",\"description\":\"An ISO 4217, three-letter cu" +
            "rrency code. (In LITE projection.)\"}}},\"saleability\":{\"type\":\"string\",\"descripti" +
            "on\":\"Whether or not this book is available for sale or offered for free in the G" +
            "oogle eBookstore for the country listed above. Possible values are FOR_SALE, FRE" +
            "E or NOT_FOR_SALE.\"}}},\"selfLink\":{\"type\":\"string\",\"description\":\"URL to this re" +
            "source. (In LITE projection.)\"},\"userInfo\":{\"type\":\"object\",\"description\":\"User " +
            "specific information related to this volume. (e.g. page this user last read or w" +
            "hether they purchased this book)\",\"properties\":{\"isPurchased\":{\"type\":\"boolean\"," +
            "\"description\":\"Whether or not this volume was purchased by the authenticated use" +
            "r making the request. (In LITE projection.)\"},\"readingPosition\":{\"$ref\":\"Reading" +
            "Position\",\"description\":\"The user\'s current reading position in the volume, if o" +
            "ne is available. (In LITE projection.)\"},\"review\":{\"$ref\":\"Review\",\"description\"" +
            ":\"This user\'s review of this volume, if one exists.\"},\"updated\":{\"type\":\"string\"" +
            ",\"description\":\"Timestamp when this volume was last modified by a user action, s" +
            "uch as a reading position update, volume purchase or writing a review. (RFC 3339" +
            " UTC date-time format).\",\"format\":\"date-time\"}}},\"volumeInfo\":{\"type\":\"object\",\"" +
            "description\":\"General volume information.\",\"properties\":{\"authors\":{\"type\":\"arra" +
            "y\",\"description\":\"The names of the authors and/or editors for this volume. (In L" +
            "ITE projection)\",\"items\":{\"type\":\"string\"}},\"averageRating\":{\"type\":\"number\",\"de" +
            "scription\":\"The mean review rating for this volume. (min = 1.0, max = 5.0)\",\"for" +
            "mat\":\"double\"},\"categories\":{\"type\":\"array\",\"description\":\"A list of subject cat" +
            "egories, such as \\\"Fiction\\\", \\\"Suspense\\\", etc.\",\"items\":{\"type\":\"string\"}},\"co" +
            "ntentVersion\":{\"type\":\"string\",\"description\":\"An identifier for the version of t" +
            "he volume content (text & images). (In LITE projection)\"},\"description\":{\"type\":" +
            "\"string\",\"description\":\"A synopsis of the volume. The text of the description is" +
            " formatted in HTML and includes simple formatting elements, such as , ,\\n, etc. " +
            "(In LITE projection.)\"},\"dimensions\":{\"type\":\"object\",\"description\":\"Physical di" +
            "mensions of this volume.\",\"properties\":{\"height\":{\"type\":\"string\",\"description\":" +
            "\"Height or length of this volume (in cm).\"},\"thickness\":{\"type\":\"string\",\"descri" +
            "ption\":\"Thickness of this volume (in cm).\"},\"width\":{\"type\":\"string\",\"descriptio" +
            "n\":\"Width of this volume (in cm).\"}}},\"imageLinks\":{\"type\":\"object\",\"description" +
            "\":\"A list of image links for all the sizes that are available. (In LITE projecti" +
            "on.)\",\"properties\":{\"extraLarge\":{\"type\":\"string\",\"description\":\"Image link for " +
            "extra large size (width of ~1280 pixels). (In LITE projection)\"},\"large\":{\"type\"" +
            ":\"string\",\"description\":\"Image link for large size (width of ~800 pixels). (In L" +
            "ITE projection)\"},\"medium\":{\"type\":\"string\",\"description\":\"Image link for medium" +
            " size (width of ~575 pixels). (In LITE projection)\"},\"small\":{\"type\":\"string\",\"d" +
            "escription\":\"Image link for small size (width of ~300 pixels). (In LITE projecti" +
            "on)\"},\"smallThumbnail\":{\"type\":\"string\",\"description\":\"Image link for small thum" +
            "bnail size (width of ~80 pixels). (In LITE projection)\"},\"thumbnail\":{\"type\":\"st" +
            "ring\",\"description\":\"Image link for thumbnail size (width of ~128 pixels). (In L" +
            "ITE projection)\"}}},\"industryIdentifiers\":{\"type\":\"array\",\"description\":\"Industr" +
            "y standard identifiers for this volume.\",\"items\":{\"type\":\"object\",\"properties\":{" +
            "\"identifier\":{\"type\":\"string\",\"description\":\"Industry specific volume identifier" +
            ".\"},\"type\":{\"type\":\"string\",\"description\":\"Identifier type. Possible values are " +
            "ISBN_10, ISBN_13, ISSN and OTHER.\"}}}},\"infoLink\":{\"type\":\"string\",\"description\"" +
            ":\"URL to view information about this volume on the Google Books site. (In LITE p" +
            "rojection)\"},\"language\":{\"type\":\"string\",\"description\":\"Best language for this v" +
            "olume (based on content). It is the two-letter ISO 639-1 code such as \'fr\', \'en\'" +
            ", etc.\"},\"mainCategory\":{\"type\":\"string\",\"description\":\"The main category to whi" +
            "ch this volume belongs. It will be the category from the categories list returne" +
            "d below that has the highest weight.\"},\"pageCount\":{\"type\":\"integer\",\"descriptio" +
            "n\":\"Total number of pages.\",\"format\":\"int32\"},\"previewLink\":{\"type\":\"string\",\"de" +
            "scription\":\"URL to preview this volume on the Google Books site.\"},\"printType\":{" +
            "\"type\":\"string\",\"description\":\"Type of publication of this volume. Possible valu" +
            "es are BOOK or MAGAZINE.\"},\"publishedDate\":{\"type\":\"string\",\"description\":\"Date " +
            "of publication. (In LITE projection.)\"},\"publisher\":{\"type\":\"string\",\"descriptio" +
            "n\":\"Publisher of this volume. (In LITE projection.)\"},\"ratingsCount\":{\"type\":\"in" +
            "teger\",\"description\":\"The number of review ratings for this volume.\",\"format\":\"i" +
            "nt32\"},\"subtitle\":{\"type\":\"string\",\"description\":\"Volume subtitle. (In LITE proj" +
            "ection.)\"},\"title\":{\"type\":\"string\",\"description\":\"Volume title. (In LITE projec" +
            "tion.)\"}}}}},\"Volumes\":{\"id\":\"Volumes\",\"type\":\"object\",\"properties\":{\"items\":{\"t" +
            "ype\":\"array\",\"description\":\"A list of volumes.\",\"items\":{\"$ref\":\"Volume\"}},\"kind" +
            "\":{\"type\":\"string\",\"description\":\"Resource type.\",\"default\":\"books#volumes\"},\"to" +
            "talItems\":{\"type\":\"integer\",\"description\":\"Total number of volumes found. This m" +
            "ight be greater than the number of volumes returned in this response if results " +
            "have been paginated.\",\"format\":\"int32\"}}}},\"resources\":{\"bookshelves\":{\"methods\"" +
            ":{\"get\":{\"id\":\"books.bookshelves.get\",\"path\":\"users/{userId}/bookshelves/{shelf}" +
            "\",\"httpMethod\":\"GET\",\"description\":\"Retrieves a specific bookshelf for the speci" +
            "fied user.\",\"parameters\":{\"shelf\":{\"type\":\"string\",\"description\":\"Id of bookshel" +
            "f to retrieve.\",\"required\":true,\"location\":\"path\"},\"source\":{\"type\":\"string\",\"de" +
            "scription\":\"String to identify the originator of this request.\",\"location\":\"quer" +
            "y\"},\"userId\":{\"type\":\"string\",\"description\":\"Id of user for whom to retrieve boo" +
            "kshelves.\",\"required\":true,\"location\":\"path\"}},\"parameterOrder\":[\"userId\",\"shelf" +
            "\"],\"response\":{\"$ref\":\"Bookshelf\"},\"scopes\":[\"https://www.googleapis.com/auth/bo" +
            "oks\"]},\"list\":{\"id\":\"books.bookshelves.list\",\"path\":\"users/{userId}/bookshelves\"" +
            ",\"httpMethod\":\"GET\",\"description\":\"Retrieves a list of public bookshelves for th" +
            "e specified user.\",\"parameters\":{\"source\":{\"type\":\"string\",\"description\":\"String" +
            " to identify the originator of this request.\",\"location\":\"query\"},\"userId\":{\"typ" +
            "e\":\"string\",\"description\":\"Id of user for whom to retrieve bookshelves.\",\"requir" +
            "ed\":true,\"location\":\"path\"}},\"parameterOrder\":[\"userId\"],\"response\":{\"$ref\":\"Boo" +
            "kshelves\"},\"scopes\":[\"https://www.googleapis.com/auth/books\"]}},\"resources\":{\"vo" +
            "lumes\":{\"methods\":{\"list\":{\"id\":\"books.bookshelves.volumes.list\",\"path\":\"users/{" +
            "userId}/bookshelves/{shelf}/volumes\",\"httpMethod\":\"GET\",\"description\":\"Retrieves" +
            " volumes in a specific bookshelf for the specified user.\",\"parameters\":{\"shelf\":" +
            "{\"type\":\"string\",\"description\":\"Id of bookshelf to retrieve volumes.\",\"required\"" +
            ":true,\"location\":\"path\"},\"source\":{\"type\":\"string\",\"description\":\"String to iden" +
            "tify the originator of this request.\",\"location\":\"query\"},\"userId\":{\"type\":\"stri" +
            "ng\",\"description\":\"Id of user for whom to retrieve bookshelf volumes.\",\"required" +
            "\":true,\"location\":\"path\"}},\"parameterOrder\":[\"userId\",\"shelf\"],\"response\":{\"$ref" +
            "\":\"Volumes\"},\"scopes\":[\"https://www.googleapis.com/auth/books\"]}}}}},\"mylibrary\"" +
            ":{\"resources\":{\"bookshelves\":{\"methods\":{\"addVolume\":{\"id\":\"books.mylibrary.book" +
            "shelves.addVolume\",\"path\":\"mylibrary/bookshelves/{shelf}/addVolume\",\"httpMethod\"" +
            ":\"POST\",\"description\":\"Adds a volume to a bookshelf.\",\"parameters\":{\"shelf\":{\"ty" +
            "pe\":\"string\",\"description\":\"Id of bookshelf to which to add a volume.\",\"required" +
            "\":true,\"location\":\"path\"},\"source\":{\"type\":\"string\",\"description\":\"String to ide" +
            "ntify the originator of this request.\",\"location\":\"query\"},\"volumeId\":{\"type\":\"s" +
            "tring\",\"description\":\"Id of volume to add.\",\"required\":true,\"location\":\"query\"}}" +
            ",\"parameterOrder\":[\"shelf\",\"volumeId\"],\"scopes\":[\"https://www.googleapis.com/aut" +
            "h/books\"]},\"clearVolumes\":{\"id\":\"books.mylibrary.bookshelves.clearVolumes\",\"path" +
            "\":\"mylibrary/bookshelves/{shelf}/clearVolumes\",\"httpMethod\":\"POST\",\"description\"" +
            ":\"Clears all volumes from a bookshelf.\",\"parameters\":{\"shelf\":{\"type\":\"string\",\"" +
            "description\":\"Id of bookshelf from which to remove a volume.\",\"required\":true,\"l" +
            "ocation\":\"path\"},\"source\":{\"type\":\"string\",\"description\":\"String to identify the" +
            " originator of this request.\",\"location\":\"query\"}},\"parameterOrder\":[\"shelf\"],\"s" +
            "copes\":[\"https://www.googleapis.com/auth/books\"]},\"get\":{\"id\":\"books.mylibrary.b" +
            "ookshelves.get\",\"path\":\"mylibrary/bookshelves/{shelf}\",\"httpMethod\":\"GET\",\"descr" +
            "iption\":\"Retrieves a specific bookshelf belonging to the authenticated user.\",\"p" +
            "arameters\":{\"shelf\":{\"type\":\"string\",\"description\":\"Id of bookshelf to retrieve." +
            "\",\"required\":true,\"location\":\"path\"},\"source\":{\"type\":\"string\",\"description\":\"St" +
            "ring to identify the originator of this request.\",\"location\":\"query\"}},\"paramete" +
            "rOrder\":[\"shelf\"],\"response\":{\"$ref\":\"Bookshelf\"},\"scopes\":[\"https://www.googlea" +
            "pis.com/auth/books\"]},\"list\":{\"id\":\"books.mylibrary.bookshelves.list\",\"path\":\"my" +
            "library/bookshelves\",\"httpMethod\":\"GET\",\"description\":\"Retrieves a list of books" +
            "helves belonging to the authenticated user.\",\"parameters\":{\"source\":{\"type\":\"str" +
            "ing\",\"description\":\"String to identify the originator of this request.\",\"locatio" +
            "n\":\"query\"}},\"response\":{\"$ref\":\"Bookshelves\"},\"scopes\":[\"https://www.googleapis" +
            ".com/auth/books\"]},\"removeVolume\":{\"id\":\"books.mylibrary.bookshelves.removeVolum" +
            "e\",\"path\":\"mylibrary/bookshelves/{shelf}/removeVolume\",\"httpMethod\":\"POST\",\"desc" +
            "ription\":\"Removes a volume from a bookshelf.\",\"parameters\":{\"shelf\":{\"type\":\"str" +
            "ing\",\"description\":\"Id of bookshelf from which to remove a volume.\",\"required\":t" +
            "rue,\"location\":\"path\"},\"source\":{\"type\":\"string\",\"description\":\"String to identi" +
            "fy the originator of this request.\",\"location\":\"query\"},\"volumeId\":{\"type\":\"stri" +
            "ng\",\"description\":\"Id of volume to remove.\",\"required\":true,\"location\":\"query\"}}" +
            ",\"parameterOrder\":[\"shelf\",\"volumeId\"],\"scopes\":[\"https://www.googleapis.com/aut" +
            "h/books\"]}},\"resources\":{\"volumes\":{\"methods\":{\"list\":{\"id\":\"books.mylibrary.boo" +
            "kshelves.volumes.list\",\"path\":\"mylibrary/bookshelves/{shelf}/volumes\",\"httpMetho" +
            "d\":\"GET\",\"description\":\"Gets volume information for volumes on a bookshelf.\",\"pa" +
            "rameters\":{\"maxResults\":{\"type\":\"integer\",\"description\":\"Maximum number of resul" +
            "ts to return\",\"minimum\":\"0\",\"maximum\":\"4294967295\",\"location\":\"query\"},\"projecti" +
            "on\":{\"type\":\"string\",\"description\":\"Restrict information returned to a set of se" +
            "lected fields.\",\"enum\":[\"full\",\"lite\"],\"enumDescriptions\":[\"Includes all volume " +
            "data.\",\"Includes a subset of fields in volumeInfo and accessInfo.\"],\"location\":\"" +
            "query\"},\"shelf\":{\"type\":\"string\",\"description\":\"The bookshelf id or name retriev" +
            "e volumes for.\",\"location\":\"path\"},\"source\":{\"type\":\"string\",\"description\":\"Stri" +
            "ng to identify the originator of this request.\",\"location\":\"query\"},\"startIndex\"" +
            ":{\"type\":\"integer\",\"description\":\"Index of the first element to return (starts a" +
            "t 0)\",\"minimum\":\"0\",\"maximum\":\"4294967295\",\"location\":\"query\"}},\"parameterOrder\"" +
            ":[\"shelf\"],\"response\":{\"$ref\":\"Volumes\"},\"scopes\":[\"https://www.googleapis.com/a" +
            "uth/books\"]}}}}}}},\"volumes\":{\"methods\":{\"get\":{\"id\":\"books.volumes.get\",\"path\":" +
            "\"volumes/{volumeId}\",\"httpMethod\":\"GET\",\"description\":\"Gets volume information f" +
            "or a single volume.\",\"parameters\":{\"projection\":{\"type\":\"string\",\"description\":\"" +
            "Restrict information returned to a set of selected fields.\",\"enum\":[\"full\",\"lite" +
            "\"],\"enumDescriptions\":[\"Includes all volume data.\",\"Includes a subset of fields " +
            "in volumeInfo and accessInfo.\"],\"location\":\"query\"},\"source\":{\"type\":\"string\",\"d" +
            "escription\":\"String to identify the originator of this request.\",\"location\":\"que" +
            "ry\"},\"volumeId\":{\"type\":\"string\",\"description\":\"Id of volume to retrieve.\",\"requ" +
            "ired\":true,\"location\":\"path\"}},\"parameterOrder\":[\"volumeId\"],\"response\":{\"$ref\":" +
            "\"Volume\"},\"scopes\":[\"https://www.googleapis.com/auth/books\"]},\"list\":{\"id\":\"book" +
            "s.volumes.list\",\"path\":\"volumes\",\"httpMethod\":\"GET\",\"description\":\"Performs a bo" +
            "ok search.\",\"parameters\":{\"download\":{\"type\":\"string\",\"description\":\"Restrict to" +
            " volumes by download availability.\",\"enum\":[\"epub\"],\"enumDescriptions\":[\"All vol" +
            "umes with epub.\"],\"location\":\"query\"},\"filter\":{\"type\":\"string\",\"description\":\"F" +
            "ilter search results.\",\"enum\":[\"ebooks\",\"free-ebooks\",\"full\",\"paid-ebooks\",\"part" +
            "ial\"],\"enumDescriptions\":[\"All Google eBooks.\",\"Google eBook with full volume te" +
            "xt viewability.\",\"Public can view entire volume text.\",\"Google eBook with a pric" +
            "e.\",\"Public able to see parts of text.\"],\"location\":\"query\"},\"langRestrict\":{\"ty" +
            "pe\":\"string\",\"description\":\"Restrict results to books with this language code.\"," +
            "\"location\":\"query\"},\"maxResults\":{\"type\":\"integer\",\"description\":\"Maximum number" +
            " of results to return.\",\"minimum\":\"0\",\"maximum\":\"40\",\"location\":\"query\"},\"orderB" +
            "y\":{\"type\":\"string\",\"description\":\"Sort search results.\",\"enum\":[\"newest\",\"relev" +
            "ance\"],\"enumDescriptions\":[\"Most recently published.\",\"Relevance to search terms" +
            ".\"],\"location\":\"query\"},\"printType\":{\"type\":\"string\",\"description\":\"Restrict to " +
            "books or magazines.\",\"enum\":[\"all\",\"books\",\"magazines\"],\"enumDescriptions\":[\"All" +
            " volume content types.\",\"Just books.\",\"Just magazines.\"],\"location\":\"query\"},\"pr" +
            "ojection\":{\"type\":\"string\",\"description\":\"Restrict information returned to a set" +
            " of selected fields.\",\"enum\":[\"full\",\"lite\"],\"enumDescriptions\":[\"Includes all v" +
            "olume data.\",\"Includes a subset of fields in volumeInfo and accessInfo.\"],\"locat" +
            "ion\":\"query\"},\"q\":{\"type\":\"string\",\"description\":\"Full-text search query string." +
            "\",\"required\":true,\"location\":\"query\"},\"source\":{\"type\":\"string\",\"description\":\"S" +
            "tring to identify the originator of this request.\",\"location\":\"query\"},\"startInd" +
            "ex\":{\"type\":\"integer\",\"description\":\"Index of the first result to return (starts" +
            " at 0)\",\"minimum\":\"0\",\"maximum\":\"4294967295\",\"location\":\"query\"}},\"parameterOrde" +
            "r\":[\"q\"],\"response\":{\"$ref\":\"Volumes\"},\"scopes\":[\"https://www.googleapis.com/aut" +
            "h/books\"]}}}}}";
        
        private const string Version = "v1";
        
        private const string Name = "books";
        
        private const string BaseUri = "https://www.googleapis.com/books/v1/";
        
        private const Google.Apis.Discovery.DiscoveryVersion DiscoveryVersionUsed = Google.Apis.Discovery.DiscoveryVersion.Version_1_0;
        
        private string key;
        
        protected BooksService(Google.Apis.Discovery.IService genericService, Google.Apis.Authentication.IAuthenticator authenticator) {
            this.genericService = genericService;
            this.authenticator = authenticator;
            this.bookshelves = new BookshelvesResource(this);
            this.mylibrary = new MylibraryResource(this);
            this.volumes = new VolumesResource(this);
        }
        
        public BooksService() : 
                this(Google.Apis.Authentication.NullAuthenticator.Instance) {
        }
        
        public BooksService(Google.Apis.Authentication.IAuthenticator authenticator) : 
                this(new Google.Apis.Discovery.DiscoveryService(new Google.Apis.Discovery.StringDiscoveryDevice(DiscoveryDocument)).GetService(BooksService.DiscoveryVersionUsed, new Google.Apis.Discovery.FactoryParameterV1_0(new System.Uri(BooksService.BaseUri))), authenticator) {
        }
        
        /// <summary>Sets the API-Key (or DeveloperKey) which this service uses for all requests</summary>
        public virtual string Key {
            get {
                return this.key;
            }
            set {
                this.key = value;
            }
        }
        
        public virtual Google.Apis.Requests.IRequest CreateRequest(string resource, string method) {
            Google.Apis.Requests.IRequest request = this.genericService.CreateRequest(resource, method);
            if (!string.IsNullOrEmpty(Key)) {
                request = request.WithKey(this.Key);
            }
            return request.WithAuthentication(authenticator);
        }
        
        public virtual void RegisterSerializer(Google.Apis.ISerializer serializer) {
            genericService.Serializer = serializer;
        }
        
        public virtual string SerializeObject(object obj) {
            return genericService.SerializeRequest(obj);
        }
        
        public virtual T DeserializeResponse<T>(Google.Apis.Requests.IResponse response)
         {
            return genericService.DeserializeResponse<T>(response);
        }
        
        /// <summary>A list of all OAuth2.0 scopes. Each of these scopes relates to a permission or group of permissions that different methods of this API may need.</summary>
        public enum Scopes {
            
            /// <summary>Manage your books</summary>
            [Google.Apis.Util.StringValueAttribute("https://www.googleapis.com/auth/books")]
            Books,
        }
    }
    
    public class BookshelvesResource {
        
        private Google.Apis.Discovery.IRequestProvider service;
        
        private const string Resource = "bookshelves";
        
        private VolumesResource volumes;
        
        public BookshelvesResource(BooksService service) {
            this.service = service;
            this.volumes = new VolumesResource(service);
        }
        
        public virtual VolumesResource Volumes {
            get {
                return this.volumes;
            }
        }
        
        /// <summary>Retrieves a specific bookshelf for the specified user.</summary>
        /// <param name="userId">Required - Id of user for whom to retrieve bookshelves.</param>
        /// <param name="shelf">Required - Id of bookshelf to retrieve.</param>
        public virtual GetRequest Get(string userId, string shelf) {
            return new GetRequest(service, userId, shelf);
        }
        
        /// <summary>Retrieves a specific bookshelf for the specified user.</summary>
        /// <param name="userId">Required - Id of user for whom to retrieve bookshelves.</param>
        /// <param name="shelf">Required - Id of bookshelf to retrieve.</param>
        /// <param name="source">Optional - String to identify the originator of this request.</param>
        public virtual GetRequest Get(string userId, string shelf, [System.Runtime.InteropServices.OptionalAttribute()] string source) {
            return new GetRequest(service, userId, shelf, source);
        }
        
        /// <summary>Retrieves a list of public bookshelves for the specified user.</summary>
        /// <param name="userId">Required - Id of user for whom to retrieve bookshelves.</param>
        public virtual ListRequest List(string userId) {
            return new ListRequest(service, userId);
        }
        
        /// <summary>Retrieves a list of public bookshelves for the specified user.</summary>
        /// <param name="userId">Required - Id of user for whom to retrieve bookshelves.</param>
        /// <param name="source">Optional - String to identify the originator of this request.</param>
        public virtual ListRequest List(string userId, [System.Runtime.InteropServices.OptionalAttribute()] string source) {
            return new ListRequest(service, userId, source);
        }
        
        public class VolumesResource {
            
            private Google.Apis.Discovery.IRequestProvider service;
            
            private const string Resource = "bookshelves.volumes";
            
            public VolumesResource(BooksService service) {
                this.service = service;
            }
            
            /// <summary>Retrieves volumes in a specific bookshelf for the specified user.</summary>
            /// <param name="userId">Required - Id of user for whom to retrieve bookshelf volumes.</param>
            /// <param name="shelf">Required - Id of bookshelf to retrieve volumes.</param>
            public virtual ListRequest List(string userId, string shelf) {
                return new ListRequest(service, userId, shelf);
            }
            
            /// <summary>Retrieves volumes in a specific bookshelf for the specified user.</summary>
            /// <param name="userId">Required - Id of user for whom to retrieve bookshelf volumes.</param>
            /// <param name="shelf">Required - Id of bookshelf to retrieve volumes.</param>
            /// <param name="source">Optional - String to identify the originator of this request.</param>
            public virtual ListRequest List(string userId, string shelf, [System.Runtime.InteropServices.OptionalAttribute()] string source) {
                return new ListRequest(service, userId, shelf, source);
            }
            
            public class ListRequest : Google.Apis.Requests.ServiceRequest<Google.Apis.Books.v1.Data.Volumes> {
                
                private string shelf;
                
                private string source;
                
                private string userId;
                
                public ListRequest(Google.Apis.Discovery.IRequestProvider service, string userId, string shelf) : 
                        base(service) {
                    this.userId = userId;
                    this.shelf = shelf;
                }
                
                public ListRequest(Google.Apis.Discovery.IRequestProvider service, string userId, string shelf, [System.Runtime.InteropServices.OptionalAttribute()] string source) : 
                        base(service) {
                    this.userId = userId;
                    this.shelf = shelf;
                    this.source = source;
                }
                
                /// <summary>Id of bookshelf to retrieve volumes.</summary>
                [Google.Apis.Util.RequestParameterAttribute("shelf")]
                public virtual string Shelf {
                    get {
                        return this.shelf;
                    }
                }
                
                /// <summary>String to identify the originator of this request.</summary>
                [Google.Apis.Util.RequestParameterAttribute("source")]
                public virtual string Source {
                    get {
                        return this.source;
                    }
                    set {
                        this.source = value;
                    }
                }
                
                /// <summary>Id of user for whom to retrieve bookshelf volumes.</summary>
                [Google.Apis.Util.RequestParameterAttribute("userId")]
                public virtual string UserId {
                    get {
                        return this.userId;
                    }
                }
                
                protected override string ResourcePath {
                    get {
                        return "bookshelves.volumes";
                    }
                }
                
                protected override string MethodName {
                    get {
                        return "list";
                    }
                }
            }
        }
        
        public class GetRequest : Google.Apis.Requests.ServiceRequest<Google.Apis.Books.v1.Data.Bookshelf> {
            
            private string shelf;
            
            private string source;
            
            private string userId;
            
            public GetRequest(Google.Apis.Discovery.IRequestProvider service, string userId, string shelf) : 
                    base(service) {
                this.userId = userId;
                this.shelf = shelf;
            }
            
            public GetRequest(Google.Apis.Discovery.IRequestProvider service, string userId, string shelf, [System.Runtime.InteropServices.OptionalAttribute()] string source) : 
                    base(service) {
                this.userId = userId;
                this.shelf = shelf;
                this.source = source;
            }
            
            /// <summary>Id of bookshelf to retrieve.</summary>
            [Google.Apis.Util.RequestParameterAttribute("shelf")]
            public virtual string Shelf {
                get {
                    return this.shelf;
                }
            }
            
            /// <summary>String to identify the originator of this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("source")]
            public virtual string Source {
                get {
                    return this.source;
                }
                set {
                    this.source = value;
                }
            }
            
            /// <summary>Id of user for whom to retrieve bookshelves.</summary>
            [Google.Apis.Util.RequestParameterAttribute("userId")]
            public virtual string UserId {
                get {
                    return this.userId;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "bookshelves";
                }
            }
            
            protected override string MethodName {
                get {
                    return "get";
                }
            }
        }
        
        public class ListRequest : Google.Apis.Requests.ServiceRequest<Google.Apis.Books.v1.Data.Bookshelves> {
            
            private string source;
            
            private string userId;
            
            public ListRequest(Google.Apis.Discovery.IRequestProvider service, string userId) : 
                    base(service) {
                this.userId = userId;
            }
            
            public ListRequest(Google.Apis.Discovery.IRequestProvider service, string userId, [System.Runtime.InteropServices.OptionalAttribute()] string source) : 
                    base(service) {
                this.userId = userId;
                this.source = source;
            }
            
            /// <summary>String to identify the originator of this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("source")]
            public virtual string Source {
                get {
                    return this.source;
                }
                set {
                    this.source = value;
                }
            }
            
            /// <summary>Id of user for whom to retrieve bookshelves.</summary>
            [Google.Apis.Util.RequestParameterAttribute("userId")]
            public virtual string UserId {
                get {
                    return this.userId;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "bookshelves";
                }
            }
            
            protected override string MethodName {
                get {
                    return "list";
                }
            }
        }
    }
    
    public class MylibraryResource {
        
        private Google.Apis.Discovery.IRequestProvider service;
        
        private const string Resource = "mylibrary";
        
        private BookshelvesResource bookshelves;
        
        public MylibraryResource(BooksService service) {
            this.service = service;
            this.bookshelves = new BookshelvesResource(service);
        }
        
        public virtual BookshelvesResource Bookshelves {
            get {
                return this.bookshelves;
            }
        }
        
        public class BookshelvesResource {
            
            private Google.Apis.Discovery.IRequestProvider service;
            
            private const string Resource = "mylibrary.bookshelves";
            
            private VolumesResource volumes;
            
            public BookshelvesResource(BooksService service) {
                this.service = service;
                this.volumes = new VolumesResource(service);
            }
            
            public virtual VolumesResource Volumes {
                get {
                    return this.volumes;
                }
            }
            
            /// <summary>Adds a volume to a bookshelf.</summary>
            /// <param name="shelf">Required - Id of bookshelf to which to add a volume.</param>
            /// <param name="volumeId">Required - Id of volume to add.</param>
            public virtual AddVolumeRequest AddVolume(string shelf, string volumeId) {
                return new AddVolumeRequest(service, shelf, volumeId);
            }
            
            /// <summary>Adds a volume to a bookshelf.</summary>
            /// <param name="shelf">Required - Id of bookshelf to which to add a volume.</param>
            /// <param name="volumeId">Required - Id of volume to add.</param>
            /// <param name="source">Optional - String to identify the originator of this request.</param>
            public virtual AddVolumeRequest AddVolume(string shelf, string volumeId, [System.Runtime.InteropServices.OptionalAttribute()] string source) {
                return new AddVolumeRequest(service, shelf, volumeId, source);
            }
            
            /// <summary>Clears all volumes from a bookshelf.</summary>
            /// <param name="shelf">Required - Id of bookshelf from which to remove a volume.</param>
            public virtual ClearVolumesRequest ClearVolumes(string shelf) {
                return new ClearVolumesRequest(service, shelf);
            }
            
            /// <summary>Clears all volumes from a bookshelf.</summary>
            /// <param name="shelf">Required - Id of bookshelf from which to remove a volume.</param>
            /// <param name="source">Optional - String to identify the originator of this request.</param>
            public virtual ClearVolumesRequest ClearVolumes(string shelf, [System.Runtime.InteropServices.OptionalAttribute()] string source) {
                return new ClearVolumesRequest(service, shelf, source);
            }
            
            /// <summary>Retrieves a specific bookshelf belonging to the authenticated user.</summary>
            /// <param name="shelf">Required - Id of bookshelf to retrieve.</param>
            public virtual GetRequest Get(string shelf) {
                return new GetRequest(service, shelf);
            }
            
            /// <summary>Retrieves a specific bookshelf belonging to the authenticated user.</summary>
            /// <param name="shelf">Required - Id of bookshelf to retrieve.</param>
            /// <param name="source">Optional - String to identify the originator of this request.</param>
            public virtual GetRequest Get(string shelf, [System.Runtime.InteropServices.OptionalAttribute()] string source) {
                return new GetRequest(service, shelf, source);
            }
            
            /// <summary>Retrieves a list of bookshelves belonging to the authenticated user.</summary>
            public virtual ListRequest List() {
                return new ListRequest(service);
            }
            
            /// <summary>Retrieves a list of bookshelves belonging to the authenticated user.</summary>
            /// <param name="source">Optional - String to identify the originator of this request.</param>
            public virtual ListRequest List([System.Runtime.InteropServices.OptionalAttribute()] string source) {
                return new ListRequest(service, source);
            }
            
            /// <summary>Removes a volume from a bookshelf.</summary>
            /// <param name="shelf">Required - Id of bookshelf from which to remove a volume.</param>
            /// <param name="volumeId">Required - Id of volume to remove.</param>
            public virtual RemoveVolumeRequest RemoveVolume(string shelf, string volumeId) {
                return new RemoveVolumeRequest(service, shelf, volumeId);
            }
            
            /// <summary>Removes a volume from a bookshelf.</summary>
            /// <param name="shelf">Required - Id of bookshelf from which to remove a volume.</param>
            /// <param name="volumeId">Required - Id of volume to remove.</param>
            /// <param name="source">Optional - String to identify the originator of this request.</param>
            public virtual RemoveVolumeRequest RemoveVolume(string shelf, string volumeId, [System.Runtime.InteropServices.OptionalAttribute()] string source) {
                return new RemoveVolumeRequest(service, shelf, volumeId, source);
            }
            
            public class VolumesResource {
                
                private Google.Apis.Discovery.IRequestProvider service;
                
                private const string Resource = "mylibrary.bookshelves.volumes";
                
                public VolumesResource(BooksService service) {
                    this.service = service;
                }
                
                /// <summary>Gets volume information for volumes on a bookshelf.</summary>
                public virtual ListRequest List() {
                    return new ListRequest(service);
                }
                
                /// <summary>Gets volume information for volumes on a bookshelf.</summary>
                /// <param name="shelf">Optional - The bookshelf id or name retrieve volumes for.</param>
                /// <param name="maxResults">Optional - Minimum value of 0 - Maximum value of 4294967295 - Maximum number of results to return</param>
                /// <param name="projection">Optional - Must be one of the following values [full, lite] - Restrict information returned to a set of selected fields.</param>
                /// <param name="source">Optional - String to identify the originator of this request.</param>
                /// <param name="startIndex">Optional - Minimum value of 0 - Maximum value of 4294967295 - Index of the first element to return (starts at 0)</param>
                public virtual ListRequest List([System.Runtime.InteropServices.OptionalAttribute()] string shelf, [System.Runtime.InteropServices.OptionalAttribute()] System.Int64? maxResults, [System.Runtime.InteropServices.OptionalAttribute()] Projection? projection, [System.Runtime.InteropServices.OptionalAttribute()] string source, [System.Runtime.InteropServices.OptionalAttribute()] System.Int64? startIndex) {
                    return new ListRequest(service, shelf, maxResults, projection, source, startIndex);
                }
                
                /// <summary>Restrict information returned to a set of selected fields.</summary>
                [System.ComponentModel.TypeConverterAttribute(typeof(Google.Apis.Util.EnumStringValueTypeConverter))]
                public enum Projection {
                    
                    /// <summary>Includes all volume data.</summary>
                    [Google.Apis.Util.StringValueAttribute("full")]
                    Full,
                    
                    /// <summary>Includes a subset of fields in volumeInfo and accessInfo.</summary>
                    [Google.Apis.Util.StringValueAttribute("lite")]
                    Lite,
                }
                
                public class ListRequest : Google.Apis.Requests.ServiceRequest<Google.Apis.Books.v1.Data.Volumes> {
                    
                    private System.Int64? maxResults;
                    
                    private Projection? projection;
                    
                    private string shelf;
                    
                    private string source;
                    
                    private System.Int64? startIndex;
                    
                    public ListRequest(Google.Apis.Discovery.IRequestProvider service) : 
                            base(service) {
                    }
                    
                    public ListRequest(Google.Apis.Discovery.IRequestProvider service, [System.Runtime.InteropServices.OptionalAttribute()] string shelf, [System.Runtime.InteropServices.OptionalAttribute()] System.Int64? maxResults, [System.Runtime.InteropServices.OptionalAttribute()] Projection? projection, [System.Runtime.InteropServices.OptionalAttribute()] string source, [System.Runtime.InteropServices.OptionalAttribute()] System.Int64? startIndex) : 
                            base(service) {
                        this.shelf = shelf;
                        this.maxResults = maxResults;
                        this.projection = projection;
                        this.source = source;
                        this.startIndex = startIndex;
                    }
                    
                    /// <summary>Maximum number of results to return</summary>
                    [Google.Apis.Util.RequestParameterAttribute("maxResults")]
                    public virtual System.Int64? MaxResults {
                        get {
                            return this.maxResults;
                        }
                        set {
                            this.maxResults = value;
                        }
                    }
                    
                    /// <summary>Restrict information returned to a set of selected fields.</summary>
                    [Google.Apis.Util.RequestParameterAttribute("projection")]
                    public virtual Projection? Projection {
                        get {
                            return this.projection;
                        }
                        set {
                            this.projection = value;
                        }
                    }
                    
                    /// <summary>The bookshelf id or name retrieve volumes for.</summary>
                    [Google.Apis.Util.RequestParameterAttribute("shelf")]
                    public virtual string Shelf {
                        get {
                            return this.shelf;
                        }
                        set {
                            this.shelf = value;
                        }
                    }
                    
                    /// <summary>String to identify the originator of this request.</summary>
                    [Google.Apis.Util.RequestParameterAttribute("source")]
                    public virtual string Source {
                        get {
                            return this.source;
                        }
                        set {
                            this.source = value;
                        }
                    }
                    
                    /// <summary>Index of the first element to return (starts at 0)</summary>
                    [Google.Apis.Util.RequestParameterAttribute("startIndex")]
                    public virtual System.Int64? StartIndex {
                        get {
                            return this.startIndex;
                        }
                        set {
                            this.startIndex = value;
                        }
                    }
                    
                    protected override string ResourcePath {
                        get {
                            return "mylibrary.bookshelves.volumes";
                        }
                    }
                    
                    protected override string MethodName {
                        get {
                            return "list";
                        }
                    }
                }
            }
            
            public class AddVolumeRequest : Google.Apis.Requests.ServiceRequest<string> {
                
                private string shelf;
                
                private string source;
                
                private string volumeId;
                
                public AddVolumeRequest(Google.Apis.Discovery.IRequestProvider service, string shelf, string volumeId) : 
                        base(service) {
                    this.shelf = shelf;
                    this.volumeId = volumeId;
                }
                
                public AddVolumeRequest(Google.Apis.Discovery.IRequestProvider service, string shelf, string volumeId, [System.Runtime.InteropServices.OptionalAttribute()] string source) : 
                        base(service) {
                    this.shelf = shelf;
                    this.volumeId = volumeId;
                    this.source = source;
                }
                
                /// <summary>Id of bookshelf to which to add a volume.</summary>
                [Google.Apis.Util.RequestParameterAttribute("shelf")]
                public virtual string Shelf {
                    get {
                        return this.shelf;
                    }
                }
                
                /// <summary>String to identify the originator of this request.</summary>
                [Google.Apis.Util.RequestParameterAttribute("source")]
                public virtual string Source {
                    get {
                        return this.source;
                    }
                    set {
                        this.source = value;
                    }
                }
                
                /// <summary>Id of volume to add.</summary>
                [Google.Apis.Util.RequestParameterAttribute("volumeId")]
                public virtual string VolumeId {
                    get {
                        return this.volumeId;
                    }
                }
                
                protected override string ResourcePath {
                    get {
                        return "mylibrary.bookshelves";
                    }
                }
                
                protected override string MethodName {
                    get {
                        return "addVolume";
                    }
                }
            }
            
            public class ClearVolumesRequest : Google.Apis.Requests.ServiceRequest<string> {
                
                private string shelf;
                
                private string source;
                
                public ClearVolumesRequest(Google.Apis.Discovery.IRequestProvider service, string shelf) : 
                        base(service) {
                    this.shelf = shelf;
                }
                
                public ClearVolumesRequest(Google.Apis.Discovery.IRequestProvider service, string shelf, [System.Runtime.InteropServices.OptionalAttribute()] string source) : 
                        base(service) {
                    this.shelf = shelf;
                    this.source = source;
                }
                
                /// <summary>Id of bookshelf from which to remove a volume.</summary>
                [Google.Apis.Util.RequestParameterAttribute("shelf")]
                public virtual string Shelf {
                    get {
                        return this.shelf;
                    }
                }
                
                /// <summary>String to identify the originator of this request.</summary>
                [Google.Apis.Util.RequestParameterAttribute("source")]
                public virtual string Source {
                    get {
                        return this.source;
                    }
                    set {
                        this.source = value;
                    }
                }
                
                protected override string ResourcePath {
                    get {
                        return "mylibrary.bookshelves";
                    }
                }
                
                protected override string MethodName {
                    get {
                        return "clearVolumes";
                    }
                }
            }
            
            public class GetRequest : Google.Apis.Requests.ServiceRequest<Google.Apis.Books.v1.Data.Bookshelf> {
                
                private string shelf;
                
                private string source;
                
                public GetRequest(Google.Apis.Discovery.IRequestProvider service, string shelf) : 
                        base(service) {
                    this.shelf = shelf;
                }
                
                public GetRequest(Google.Apis.Discovery.IRequestProvider service, string shelf, [System.Runtime.InteropServices.OptionalAttribute()] string source) : 
                        base(service) {
                    this.shelf = shelf;
                    this.source = source;
                }
                
                /// <summary>Id of bookshelf to retrieve.</summary>
                [Google.Apis.Util.RequestParameterAttribute("shelf")]
                public virtual string Shelf {
                    get {
                        return this.shelf;
                    }
                }
                
                /// <summary>String to identify the originator of this request.</summary>
                [Google.Apis.Util.RequestParameterAttribute("source")]
                public virtual string Source {
                    get {
                        return this.source;
                    }
                    set {
                        this.source = value;
                    }
                }
                
                protected override string ResourcePath {
                    get {
                        return "mylibrary.bookshelves";
                    }
                }
                
                protected override string MethodName {
                    get {
                        return "get";
                    }
                }
            }
            
            public class ListRequest : Google.Apis.Requests.ServiceRequest<Google.Apis.Books.v1.Data.Bookshelves> {
                
                private string source;
                
                public ListRequest(Google.Apis.Discovery.IRequestProvider service) : 
                        base(service) {
                }
                
                public ListRequest(Google.Apis.Discovery.IRequestProvider service, [System.Runtime.InteropServices.OptionalAttribute()] string source) : 
                        base(service) {
                    this.source = source;
                }
                
                /// <summary>String to identify the originator of this request.</summary>
                [Google.Apis.Util.RequestParameterAttribute("source")]
                public virtual string Source {
                    get {
                        return this.source;
                    }
                    set {
                        this.source = value;
                    }
                }
                
                protected override string ResourcePath {
                    get {
                        return "mylibrary.bookshelves";
                    }
                }
                
                protected override string MethodName {
                    get {
                        return "list";
                    }
                }
            }
            
            public class RemoveVolumeRequest : Google.Apis.Requests.ServiceRequest<string> {
                
                private string shelf;
                
                private string source;
                
                private string volumeId;
                
                public RemoveVolumeRequest(Google.Apis.Discovery.IRequestProvider service, string shelf, string volumeId) : 
                        base(service) {
                    this.shelf = shelf;
                    this.volumeId = volumeId;
                }
                
                public RemoveVolumeRequest(Google.Apis.Discovery.IRequestProvider service, string shelf, string volumeId, [System.Runtime.InteropServices.OptionalAttribute()] string source) : 
                        base(service) {
                    this.shelf = shelf;
                    this.volumeId = volumeId;
                    this.source = source;
                }
                
                /// <summary>Id of bookshelf from which to remove a volume.</summary>
                [Google.Apis.Util.RequestParameterAttribute("shelf")]
                public virtual string Shelf {
                    get {
                        return this.shelf;
                    }
                }
                
                /// <summary>String to identify the originator of this request.</summary>
                [Google.Apis.Util.RequestParameterAttribute("source")]
                public virtual string Source {
                    get {
                        return this.source;
                    }
                    set {
                        this.source = value;
                    }
                }
                
                /// <summary>Id of volume to remove.</summary>
                [Google.Apis.Util.RequestParameterAttribute("volumeId")]
                public virtual string VolumeId {
                    get {
                        return this.volumeId;
                    }
                }
                
                protected override string ResourcePath {
                    get {
                        return "mylibrary.bookshelves";
                    }
                }
                
                protected override string MethodName {
                    get {
                        return "removeVolume";
                    }
                }
            }
        }
    }
    
    public class VolumesResource {
        
        private Google.Apis.Discovery.IRequestProvider service;
        
        private const string Resource = "volumes";
        
        public VolumesResource(BooksService service) {
            this.service = service;
        }
        
        /// <summary>Gets volume information for a single volume.</summary>
        /// <param name="volumeId">Required - Id of volume to retrieve.</param>
        public virtual GetRequest Get(string volumeId) {
            return new GetRequest(service, volumeId);
        }
        
        /// <summary>Gets volume information for a single volume.</summary>
        /// <param name="volumeId">Required - Id of volume to retrieve.</param>
        /// <param name="projection">Optional - Must be one of the following values [full, lite] - Restrict information returned to a set of selected fields.</param>
        /// <param name="source">Optional - String to identify the originator of this request.</param>
        public virtual GetRequest Get(string volumeId, [System.Runtime.InteropServices.OptionalAttribute()] Projection? projection, [System.Runtime.InteropServices.OptionalAttribute()] string source) {
            return new GetRequest(service, volumeId, projection, source);
        }
        
        /// <summary>Performs a book search.</summary>
        /// <param name="q">Required - Full-text search query string.</param>
        public virtual ListRequest List(string q) {
            return new ListRequest(service, q);
        }
        
        /// <summary>Performs a book search.</summary>
        /// <param name="q">Required - Full-text search query string.</param>
        /// <param name="download">Optional - Must be one of the following values [epub] - Restrict to volumes by download availability.</param>
        /// <param name="filter">Optional - Must be one of the following values [ebooks, free-ebooks, full, paid-ebooks, partial] - Filter search results.</param>
        /// <param name="langRestrict">Optional - Restrict results to books with this language code.</param>
        /// <param name="maxResults">Optional - Minimum value of 0 - Maximum value of 40 - Maximum number of results to return.</param>
        /// <param name="orderBy">Optional - Must be one of the following values [newest, relevance] - Sort search results.</param>
        /// <param name="printType">Optional - Must be one of the following values [all, books, magazines] - Restrict to books or magazines.</param>
        /// <param name="projection">Optional - Must be one of the following values [full, lite] - Restrict information returned to a set of selected fields.</param>
        /// <param name="source">Optional - String to identify the originator of this request.</param>
        /// <param name="startIndex">Optional - Minimum value of 0 - Maximum value of 4294967295 - Index of the first result to return (starts at 0)</param>
        public virtual ListRequest List(string q, [System.Runtime.InteropServices.OptionalAttribute()] Download? download, [System.Runtime.InteropServices.OptionalAttribute()] Filter? filter, [System.Runtime.InteropServices.OptionalAttribute()] string langRestrict, [System.Runtime.InteropServices.OptionalAttribute()] System.Int64? maxResults, [System.Runtime.InteropServices.OptionalAttribute()] OrderBy? orderBy, [System.Runtime.InteropServices.OptionalAttribute()] PrintType? printType, [System.Runtime.InteropServices.OptionalAttribute()] Projection? projection, [System.Runtime.InteropServices.OptionalAttribute()] string source, [System.Runtime.InteropServices.OptionalAttribute()] System.Int64? startIndex) {
            return new ListRequest(service, q, download, filter, langRestrict, maxResults, orderBy, printType, projection, source, startIndex);
        }
        
        /// <summary>Restrict information returned to a set of selected fields.</summary>
        [System.ComponentModel.TypeConverterAttribute(typeof(Google.Apis.Util.EnumStringValueTypeConverter))]
        public enum Projection {
            
            /// <summary>Includes all volume data.</summary>
            [Google.Apis.Util.StringValueAttribute("full")]
            Full,
            
            /// <summary>Includes a subset of fields in volumeInfo and accessInfo.</summary>
            [Google.Apis.Util.StringValueAttribute("lite")]
            Lite,
        }
        
        /// <summary>Restrict to volumes by download availability.</summary>
        [System.ComponentModel.TypeConverterAttribute(typeof(Google.Apis.Util.EnumStringValueTypeConverter))]
        public enum Download {
            
            /// <summary>All volumes with epub.</summary>
            [Google.Apis.Util.StringValueAttribute("epub")]
            Epub,
        }
        
        /// <summary>Filter search results.</summary>
        [System.ComponentModel.TypeConverterAttribute(typeof(Google.Apis.Util.EnumStringValueTypeConverter))]
        public enum Filter {
            
            /// <summary>All Google eBooks.</summary>
            [Google.Apis.Util.StringValueAttribute("ebooks")]
            Ebooks,
            
            /// <summary>Google eBook with full volume text viewability.</summary>
            [Google.Apis.Util.StringValueAttribute("free-ebooks")]
            FreeEbooks,
            
            /// <summary>Public can view entire volume text.</summary>
            [Google.Apis.Util.StringValueAttribute("full")]
            Full,
            
            /// <summary>Google eBook with a price.</summary>
            [Google.Apis.Util.StringValueAttribute("paid-ebooks")]
            PaidEbooks,
            
            /// <summary>Public able to see parts of text.</summary>
            [Google.Apis.Util.StringValueAttribute("partial")]
            Partial,
        }
        
        /// <summary>Sort search results.</summary>
        [System.ComponentModel.TypeConverterAttribute(typeof(Google.Apis.Util.EnumStringValueTypeConverter))]
        public enum OrderBy {
            
            /// <summary>Most recently published.</summary>
            [Google.Apis.Util.StringValueAttribute("newest")]
            Newest,
            
            /// <summary>Relevance to search terms.</summary>
            [Google.Apis.Util.StringValueAttribute("relevance")]
            Relevance,
        }
        
        /// <summary>Restrict to books or magazines.</summary>
        [System.ComponentModel.TypeConverterAttribute(typeof(Google.Apis.Util.EnumStringValueTypeConverter))]
        public enum PrintType {
            
            /// <summary>All volume content types.</summary>
            [Google.Apis.Util.StringValueAttribute("all")]
            All,
            
            /// <summary>Just books.</summary>
            [Google.Apis.Util.StringValueAttribute("books")]
            Books,
            
            /// <summary>Just magazines.</summary>
            [Google.Apis.Util.StringValueAttribute("magazines")]
            Magazines,
        }
        
        public class GetRequest : Google.Apis.Requests.ServiceRequest<Google.Apis.Books.v1.Data.Volume> {
            
            private Projection? projection;
            
            private string source;
            
            private string volumeId;
            
            public GetRequest(Google.Apis.Discovery.IRequestProvider service, string volumeId) : 
                    base(service) {
                this.volumeId = volumeId;
            }
            
            public GetRequest(Google.Apis.Discovery.IRequestProvider service, string volumeId, [System.Runtime.InteropServices.OptionalAttribute()] Projection? projection, [System.Runtime.InteropServices.OptionalAttribute()] string source) : 
                    base(service) {
                this.volumeId = volumeId;
                this.projection = projection;
                this.source = source;
            }
            
            /// <summary>Restrict information returned to a set of selected fields.</summary>
            [Google.Apis.Util.RequestParameterAttribute("projection")]
            public virtual Projection? Projection {
                get {
                    return this.projection;
                }
                set {
                    this.projection = value;
                }
            }
            
            /// <summary>String to identify the originator of this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("source")]
            public virtual string Source {
                get {
                    return this.source;
                }
                set {
                    this.source = value;
                }
            }
            
            /// <summary>Id of volume to retrieve.</summary>
            [Google.Apis.Util.RequestParameterAttribute("volumeId")]
            public virtual string VolumeId {
                get {
                    return this.volumeId;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "volumes";
                }
            }
            
            protected override string MethodName {
                get {
                    return "get";
                }
            }
        }
        
        public class ListRequest : Google.Apis.Requests.ServiceRequest<Google.Apis.Books.v1.Data.Volumes> {
            
            private Download? download;
            
            private Filter? filter;
            
            private string langRestrict;
            
            private System.Int64? maxResults;
            
            private OrderBy? orderBy;
            
            private PrintType? printType;
            
            private Projection? projection;
            
            private string q;
            
            private string source;
            
            private System.Int64? startIndex;
            
            public ListRequest(Google.Apis.Discovery.IRequestProvider service, string q) : 
                    base(service) {
                this.q = q;
            }
            
            public ListRequest(Google.Apis.Discovery.IRequestProvider service, string q, [System.Runtime.InteropServices.OptionalAttribute()] Download? download, [System.Runtime.InteropServices.OptionalAttribute()] Filter? filter, [System.Runtime.InteropServices.OptionalAttribute()] string langRestrict, [System.Runtime.InteropServices.OptionalAttribute()] System.Int64? maxResults, [System.Runtime.InteropServices.OptionalAttribute()] OrderBy? orderBy, [System.Runtime.InteropServices.OptionalAttribute()] PrintType? printType, [System.Runtime.InteropServices.OptionalAttribute()] Projection? projection, [System.Runtime.InteropServices.OptionalAttribute()] string source, [System.Runtime.InteropServices.OptionalAttribute()] System.Int64? startIndex) : 
                    base(service) {
                this.q = q;
                this.download = download;
                this.filter = filter;
                this.langRestrict = langRestrict;
                this.maxResults = maxResults;
                this.orderBy = orderBy;
                this.printType = printType;
                this.projection = projection;
                this.source = source;
                this.startIndex = startIndex;
            }
            
            /// <summary>Restrict to volumes by download availability.</summary>
            [Google.Apis.Util.RequestParameterAttribute("download")]
            public virtual Download? Download {
                get {
                    return this.download;
                }
                set {
                    this.download = value;
                }
            }
            
            /// <summary>Filter search results.</summary>
            [Google.Apis.Util.RequestParameterAttribute("filter")]
            public virtual Filter? Filter {
                get {
                    return this.filter;
                }
                set {
                    this.filter = value;
                }
            }
            
            /// <summary>Restrict results to books with this language code.</summary>
            [Google.Apis.Util.RequestParameterAttribute("langRestrict")]
            public virtual string LangRestrict {
                get {
                    return this.langRestrict;
                }
                set {
                    this.langRestrict = value;
                }
            }
            
            /// <summary>Maximum number of results to return.</summary>
            [Google.Apis.Util.RequestParameterAttribute("maxResults")]
            public virtual System.Int64? MaxResults {
                get {
                    return this.maxResults;
                }
                set {
                    this.maxResults = value;
                }
            }
            
            /// <summary>Sort search results.</summary>
            [Google.Apis.Util.RequestParameterAttribute("orderBy")]
            public virtual OrderBy? OrderBy {
                get {
                    return this.orderBy;
                }
                set {
                    this.orderBy = value;
                }
            }
            
            /// <summary>Restrict to books or magazines.</summary>
            [Google.Apis.Util.RequestParameterAttribute("printType")]
            public virtual PrintType? PrintType {
                get {
                    return this.printType;
                }
                set {
                    this.printType = value;
                }
            }
            
            /// <summary>Restrict information returned to a set of selected fields.</summary>
            [Google.Apis.Util.RequestParameterAttribute("projection")]
            public virtual Projection? Projection {
                get {
                    return this.projection;
                }
                set {
                    this.projection = value;
                }
            }
            
            /// <summary>Full-text search query string.</summary>
            [Google.Apis.Util.RequestParameterAttribute("q")]
            public virtual string Q {
                get {
                    return this.q;
                }
            }
            
            /// <summary>String to identify the originator of this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("source")]
            public virtual string Source {
                get {
                    return this.source;
                }
                set {
                    this.source = value;
                }
            }
            
            /// <summary>Index of the first result to return (starts at 0)</summary>
            [Google.Apis.Util.RequestParameterAttribute("startIndex")]
            public virtual System.Int64? StartIndex {
                get {
                    return this.startIndex;
                }
                set {
                    this.startIndex = value;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "volumes";
                }
            }
            
            protected override string MethodName {
                get {
                    return "list";
                }
            }
        }
    }
    
    public partial class BooksService {
        
        private const string Resource = "";
        
        private BookshelvesResource bookshelves;
        
        private MylibraryResource mylibrary;
        
        private VolumesResource volumes;
        
        private Google.Apis.Discovery.IRequestProvider service {
            get {
                return this;
            }
        }
        
        public virtual BookshelvesResource Bookshelves {
            get {
                return this.bookshelves;
            }
        }
        
        public virtual MylibraryResource Mylibrary {
            get {
                return this.mylibrary;
            }
        }
        
        public virtual VolumesResource Volumes {
            get {
                return this.volumes;
            }
        }
    }
}
