//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Google.Apis.SiteVerification.V1.Data {
    using System;
    using System.Collections;
    using System.Collections.Generic;
    
    
    public class SiteverificationWebResourceGettokenRequest {
        
        private SiteData site;
        
        private string verificationMethod;
        
        /// <summary>The site for which a verification token will be generated.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("site")]
        public virtual SiteData Site {
            get {
                return this.site;
            }
            set {
                this.site = value;
            }
        }
        
        /// <summary>The verification method that will be used to verify this site. For sites, &apos;FILE&apos; or &apos;META&apos; methods may be used. For domains, only &apos;DNS&apos; may be used.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("verificationMethod")]
        public virtual string VerificationMethod {
            get {
                return this.verificationMethod;
            }
            set {
                this.verificationMethod = value;
            }
        }
        
        /// <summary>The site for which a verification token will be generated.</summary>
        public class SiteData {
            
            private string identifier;
            
            private string type;
            
            /// <summary>The site identifier. If the type is set to SITE, the identifier is a URL. If the type is set to INET_DOMAIN, the site identifier is a domain name.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("identifier")]
            public virtual string Identifier {
                get {
                    return this.identifier;
                }
                set {
                    this.identifier = value;
                }
            }
            
            /// <summary>The type of resource to be verified. Can be SITE or INET_DOMAIN (domain name).</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("type")]
            public virtual string Type {
                get {
                    return this.type;
                }
                set {
                    this.type = value;
                }
            }
        }
    }
    
    public class SiteverificationWebResourceGettokenResponse : Google.Apis.Requests.IResponse {
        
        private string method;
        
        private string token;
        
        private Google.Apis.Requests.RequestError error;
        
        /// <summary>The verification method to use in conjunction with this token. For FILE, the token should be placed in the top-level directory of the site, stored inside a file of the same name. For META, the token should be placed in the HEAD tag of the default page that is loaded for the site. For DNS, the token should be placed in a TXT record of the domain.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("method")]
        public virtual string Method {
            get {
                return this.method;
            }
            set {
                this.method = value;
            }
        }
        
        /// <summary>The verification token. The token must be placed appropriately in order for verification to succeed.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("token")]
        public virtual string Token {
            get {
                return this.token;
            }
            set {
                this.token = value;
            }
        }
        
        [Newtonsoft.Json.JsonPropertyAttribute("error")]
        public virtual Google.Apis.Requests.RequestError Error {
            get {
                return this.error;
            }
            set {
                this.error = value;
            }
        }
    }
    
    public class SiteverificationWebResourceListResponse : Google.Apis.Requests.IResponse {
        
        private IList<SiteverificationWebResourceResource> items;
        
        private Google.Apis.Requests.RequestError error;
        
        /// <summary>The list of sites that are owned by the authenticated user.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual IList<SiteverificationWebResourceResource> Items {
            get {
                return this.items;
            }
            set {
                this.items = value;
            }
        }
        
        [Newtonsoft.Json.JsonPropertyAttribute("error")]
        public virtual Google.Apis.Requests.RequestError Error {
            get {
                return this.error;
            }
            set {
                this.error = value;
            }
        }
    }
    
    public class SiteverificationWebResourceResource : Google.Apis.Requests.IResponse {
        
        private string id;
        
        private IList<System.String> owners;
        
        private SiteData site;
        
        private Google.Apis.Requests.RequestError error;
        
        /// <summary>The string used to identify this site. This value should be used in the &quot;id&quot; portion of the REST URL for the Get, Update, and Delete operations.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id {
            get {
                return this.id;
            }
            set {
                this.id = value;
            }
        }
        
        /// <summary>The email addresses of all verified owners.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("owners")]
        public virtual IList<System.String> Owners {
            get {
                return this.owners;
            }
            set {
                this.owners = value;
            }
        }
        
        /// <summary>The address and type of a site that is verified or will be verified.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("site")]
        public virtual SiteData Site {
            get {
                return this.site;
            }
            set {
                this.site = value;
            }
        }
        
        [Newtonsoft.Json.JsonPropertyAttribute("error")]
        public virtual Google.Apis.Requests.RequestError Error {
            get {
                return this.error;
            }
            set {
                this.error = value;
            }
        }
        
        /// <summary>The address and type of a site that is verified or will be verified.</summary>
        public class SiteData {
            
            private string identifier;
            
            private string type;
            
            /// <summary>The site identifier. If the type is set to SITE, the identifier is a URL. If the type is set to INET_DOMAIN, the site identifier is a domain name.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("identifier")]
            public virtual string Identifier {
                get {
                    return this.identifier;
                }
                set {
                    this.identifier = value;
                }
            }
            
            /// <summary>The site type. Can be SITE or INET_DOMAIN (domain name).</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("type")]
            public virtual string Type {
                get {
                    return this.type;
                }
                set {
                    this.type = value;
                }
            }
        }
    }
}
namespace Google.Apis.SiteVerification.V1 {
    using System;
    using System.IO;
    using System.Collections.Generic;
    using Google.Apis;
    using Google.Apis.Discovery;
    
    
    public class SiteVerificationService : Google.Apis.Discovery.IRequestExecutor, Google.Apis.Discovery.ISchemaAwareRequestExecutor {
        
        private Google.Apis.Discovery.IService genericService;
        
        private Google.Apis.Authentication.IAuthenticator authenticator;
        
        private const string Version = "v1";
        
        private const string Name = "siteVerification";
        
        private const string BaseUri = "https://www.googleapis.com//siteVerification/v1/";
        
        private const Google.Apis.Discovery.DiscoveryVersion DiscoveryVersionUsed = Google.Apis.Discovery.DiscoveryVersion.Version_1_0;
        
        private string developerKey;
        
        private WebResourceResource webResource;
        
        public SiteVerificationService(Google.Apis.Discovery.IService genericService, Google.Apis.Authentication.IAuthenticator authenticator) {
            this.genericService = genericService;
            this.authenticator = authenticator;
            this.webResource = new WebResourceResource(this);
        }
        
        public SiteVerificationService() : 
                this(new Google.Apis.Discovery.DiscoveryService(new Google.Apis.Discovery.WebDiscoveryDevice(new System.Uri(string.Format("https://www.googleapis.com/discovery/v1/apis/{0}/{1}/rest", SiteVerificationService.Name, SiteVerificationService.Version)))).GetService(SiteVerificationService.Version, SiteVerificationService.DiscoveryVersionUsed, new Google.Apis.Discovery.FactoryParameterV1_0(new System.Uri(SiteVerificationService.BaseUri))), Google.Apis.Authentication.AuthenticatorFactory.GetInstance().GetRegisteredAuthenticator()) {
        }
        
        /// <summary>Sets the DeveloperKey which this service uses for all requests</summary>
        public virtual string DeveloperKey {
            get {
                return this.developerKey;
            }
            set {
                this.developerKey = value;
            }
        }
        
        public virtual WebResourceResource WebResource {
            get {
                return this.webResource;
            }
        }
        
        public virtual System.IO.Stream ExecuteRequest(string resource, string method, string body, System.Collections.Generic.IDictionary<string, object> parameters) {
            Google.Apis.Requests.IRequest request = this.genericService.CreateRequest(resource, method);
            if (string.IsNullOrEmpty(DeveloperKey) == false) {
                request = request.WithDeveloperKey(this.DeveloperKey);
            }
            return request.WithParameters(parameters).WithAuthentication(authenticator).WithBody(body).ExecuteRequest();
        }
        
        public virtual System.IO.Stream ExecuteRequest(string resource, string method, object body, System.Collections.Generic.IDictionary<string, object> parameters) {
            return this.ExecuteRequest(resource, method, this.ObjectToJson(body), parameters);
        }
        
        public virtual void RegisterSerializer(Google.Apis.ISerializer serializer) {
            genericService.Serializer = serializer;
        }
        
        public virtual string ObjectToJson(object obj) {
            return genericService.SerializeRequest(obj);
        }
        
        public virtual T JsonToObject<T>(System.IO.Stream stream)
         {
            return genericService.DeserializeResponse<T>(stream);
        }
    }
    
    public class WebResourceResource {
        
        private Google.Apis.Discovery.ISchemaAwareRequestExecutor service;
        
        private const string Resource = "webResource";
        
        private log4net.ILog logger = log4net.LogManager.GetLogger(typeof(WebResourceResource));
        
        public WebResourceResource(SiteVerificationService service) {
            this.service = service;
        }
        
        /// <summary>Relinquish ownership of a website or domain.</summary>
        /// <param name="id">Required - The id of a verified site or domain.</param>
        public virtual System.IO.Stream DeleteAsStream(string id) {
            string body = null;
            System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
            parameters["id"] = id;
            logger.Debug("Executing webResource.delete");
            System.IO.Stream ret = this.service.ExecuteRequest(WebResourceResource.Resource, "delete", body, parameters);
            logger.Debug("Done Executing webResource.delete");
            return ret;
        }
        
        /// <summary>Get the most current data for a website or domain.</summary>
        /// <param name="id">Required - The id of a verified site or domain.</param>
        public virtual System.IO.Stream GetAsStream(string id) {
            string body = null;
            System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
            parameters["id"] = id;
            logger.Debug("Executing webResource.get");
            System.IO.Stream ret = this.service.ExecuteRequest(WebResourceResource.Resource, "get", body, parameters);
            logger.Debug("Done Executing webResource.get");
            return ret;
        }
        
        /// <summary>Get a verification token for placing on a website or domain.</summary>
        /// <param name="identifier">Optional - The URL or domain to verify.</param>
        /// <param name="type">Optional - Type of resource to verify. Can be &apos;site&apos; (URL) or &apos;inet_domain&apos; (domain name).</param>
        /// <param name="verificationMethod">Optional - The method to use for verifying a site or domain.</param>
        public virtual System.IO.Stream GetTokenAsStream(string identifier, string type, string verificationMethod) {
            string body = null;
            System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
            parameters["identifier"] = identifier;
            parameters["type"] = type;
            parameters["verificationMethod"] = verificationMethod;
            logger.Debug("Executing webResource.getToken");
            System.IO.Stream ret = this.service.ExecuteRequest(WebResourceResource.Resource, "getToken", body, parameters);
            logger.Debug("Done Executing webResource.getToken");
            return ret;
        }
        
        /// <summary>Attempt verification of a website or domain.</summary>
        /// <param name="verificationMethod">Required - The method to use for verifying a site or domain.</param>
        public virtual System.IO.Stream InsertAsStream(string body, string verificationMethod) {
            System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
            parameters["verificationMethod"] = verificationMethod;
            logger.Debug("Executing webResource.insert");
            System.IO.Stream ret = this.service.ExecuteRequest(WebResourceResource.Resource, "insert", body, parameters);
            logger.Debug("Done Executing webResource.insert");
            return ret;
        }
        
        /// <summary>Get the list of your verified websites and domains.</summary>
        public virtual System.IO.Stream ListAsStream() {
            string body = null;
            System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
            logger.Debug("Executing webResource.list");
            System.IO.Stream ret = this.service.ExecuteRequest(WebResourceResource.Resource, "list", body, parameters);
            logger.Debug("Done Executing webResource.list");
            return ret;
        }
        
        /// <summary>Modify the list of owners for your website or domain.</summary>
        /// <param name="id">Required - The id of a verified site or domain.</param>
        public virtual System.IO.Stream PatchAsStream(string body, string id) {
            System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
            parameters["id"] = id;
            logger.Debug("Executing webResource.patch");
            System.IO.Stream ret = this.service.ExecuteRequest(WebResourceResource.Resource, "patch", body, parameters);
            logger.Debug("Done Executing webResource.patch");
            return ret;
        }
        
        /// <summary>Modify the list of owners for your website or domain.</summary>
        /// <param name="id">Required - The id of a verified site or domain.</param>
        public virtual System.IO.Stream UpdateAsStream(string body, string id) {
            System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
            parameters["id"] = id;
            logger.Debug("Executing webResource.update");
            System.IO.Stream ret = this.service.ExecuteRequest(WebResourceResource.Resource, "update", body, parameters);
            logger.Debug("Done Executing webResource.update");
            return ret;
        }
        
        /// <summary>Relinquish ownership of a website or domain.</summary>
        /// <param name="id">Required - The id of a verified site or domain.</param>
        public virtual System.IO.Stream Delete(string id) {
            string body = null;
            System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
            parameters["id"] = id;
            logger.Debug("Executing webResource.delete");
            System.IO.Stream ret = this.service.ExecuteRequest(WebResourceResource.Resource, "delete", body, parameters);
            logger.Debug("Done Executing webResource.delete");
            return ret;
        }
        
        /// <summary>Get the most current data for a website or domain.</summary>
        /// <param name="id">Required - The id of a verified site or domain.</param>
        public virtual Google.Apis.SiteVerification.V1.Data.SiteverificationWebResourceResource Get(string id) {
            string body = null;
            System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
            parameters["id"] = id;
            logger.Debug("Executing webResource.get");
            Google.Apis.SiteVerification.V1.Data.SiteverificationWebResourceResource ret = this.service.JsonToObject<Google.Apis.SiteVerification.V1.Data.SiteverificationWebResourceResource>(this.service.ExecuteRequest(WebResourceResource.Resource, "get", body, parameters));
            logger.Debug("Done Executing webResource.get");
            return ret;
        }
        
        /// <summary>Get a verification token for placing on a website or domain.</summary>
        /// <param name="identifier">Optional - The URL or domain to verify.</param>
        /// <param name="type">Optional - Type of resource to verify. Can be &apos;site&apos; (URL) or &apos;inet_domain&apos; (domain name).</param>
        /// <param name="verificationMethod">Optional - The method to use for verifying a site or domain.</param>
        public virtual Google.Apis.SiteVerification.V1.Data.SiteverificationWebResourceGettokenResponse GetToken(string identifier, string type, string verificationMethod) {
            string body = null;
            System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
            parameters["identifier"] = identifier;
            parameters["type"] = type;
            parameters["verificationMethod"] = verificationMethod;
            logger.Debug("Executing webResource.getToken");
            Google.Apis.SiteVerification.V1.Data.SiteverificationWebResourceGettokenResponse ret = this.service.JsonToObject<Google.Apis.SiteVerification.V1.Data.SiteverificationWebResourceGettokenResponse>(this.service.ExecuteRequest(WebResourceResource.Resource, "getToken", body, parameters));
            logger.Debug("Done Executing webResource.getToken");
            return ret;
        }
        
        /// <summary>Attempt verification of a website or domain.</summary>
        /// <param name="verificationMethod">Required - The method to use for verifying a site or domain.</param>
        public virtual Google.Apis.SiteVerification.V1.Data.SiteverificationWebResourceResource Insert(Google.Apis.SiteVerification.V1.Data.SiteverificationWebResourceResource body, string verificationMethod) {
            System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
            parameters["verificationMethod"] = verificationMethod;
            logger.Debug("Executing webResource.insert");
            Google.Apis.SiteVerification.V1.Data.SiteverificationWebResourceResource ret = this.service.JsonToObject<Google.Apis.SiteVerification.V1.Data.SiteverificationWebResourceResource>(this.service.ExecuteRequest(WebResourceResource.Resource, "insert", this.service.ObjectToJson(body), parameters));
            logger.Debug("Done Executing webResource.insert");
            return ret;
        }
        
        /// <summary>Get the list of your verified websites and domains.</summary>
        public virtual Google.Apis.SiteVerification.V1.Data.SiteverificationWebResourceListResponse List() {
            string body = null;
            System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
            logger.Debug("Executing webResource.list");
            Google.Apis.SiteVerification.V1.Data.SiteverificationWebResourceListResponse ret = this.service.JsonToObject<Google.Apis.SiteVerification.V1.Data.SiteverificationWebResourceListResponse>(this.service.ExecuteRequest(WebResourceResource.Resource, "list", body, parameters));
            logger.Debug("Done Executing webResource.list");
            return ret;
        }
        
        /// <summary>Modify the list of owners for your website or domain.</summary>
        /// <param name="id">Required - The id of a verified site or domain.</param>
        public virtual Google.Apis.SiteVerification.V1.Data.SiteverificationWebResourceResource Patch(Google.Apis.SiteVerification.V1.Data.SiteverificationWebResourceResource body, string id) {
            System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
            parameters["id"] = id;
            logger.Debug("Executing webResource.patch");
            Google.Apis.SiteVerification.V1.Data.SiteverificationWebResourceResource ret = this.service.JsonToObject<Google.Apis.SiteVerification.V1.Data.SiteverificationWebResourceResource>(this.service.ExecuteRequest(WebResourceResource.Resource, "patch", this.service.ObjectToJson(body), parameters));
            logger.Debug("Done Executing webResource.patch");
            return ret;
        }
        
        /// <summary>Modify the list of owners for your website or domain.</summary>
        /// <param name="id">Required - The id of a verified site or domain.</param>
        public virtual Google.Apis.SiteVerification.V1.Data.SiteverificationWebResourceResource Update(Google.Apis.SiteVerification.V1.Data.SiteverificationWebResourceResource body, string id) {
            System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
            parameters["id"] = id;
            logger.Debug("Executing webResource.update");
            Google.Apis.SiteVerification.V1.Data.SiteverificationWebResourceResource ret = this.service.JsonToObject<Google.Apis.SiteVerification.V1.Data.SiteverificationWebResourceResource>(this.service.ExecuteRequest(WebResourceResource.Resource, "update", this.service.ObjectToJson(body), parameters));
            logger.Debug("Done Executing webResource.update");
            return ret;
        }
        
        /// <summary>Get a verification token for placing on a website or domain.</summary>
        public virtual System.IO.Stream GetToken(System.Collections.Generic.IDictionary<string, object> parameters) {
            string body = null;
            logger.Debug("Executing webResource.getToken");
            System.IO.Stream ret = this.service.ExecuteRequest(WebResourceResource.Resource, "getToken", body, parameters);
            logger.Debug("Done Executing webResource.getToken");
            return ret;
        }
    }
}
