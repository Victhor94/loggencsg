//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5446
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Google.Apis.Taskqueue.v1beta1.Data {
    using System;
    using System.Collections;
    using System.Collections.Generic;
    
    
    public class Task : Google.Apis.Requests.IDirectResponseSchema {
        
        private string enqueueTimestamp;
        
        private string id;
        
        private string kind;
        
        private string leaseTimestamp;
        
        private string payloadBase64;
        
        private string queueName;
        
        private Google.Apis.Requests.RequestError error;
        
        private string eTag;
        
        /// <summary>Time (in seconds since the epoch) at which the task was enqueued.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("enqueueTimestamp")]
        public virtual string EnqueueTimestamp {
            get {
                return this.enqueueTimestamp;
            }
            set {
                this.enqueueTimestamp = value;
            }
        }
        
        /// <summary>Name of the task.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id {
            get {
                return this.id;
            }
            set {
                this.id = value;
            }
        }
        
        /// <summary>The kind of object returned, in this case set to task.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this.kind;
            }
            set {
                this.kind = value;
            }
        }
        
        /// <summary>Time (in seconds since the epoch) at which the task lease will expire. This value is 0 if the task isnt currently leased out to a worker.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("leaseTimestamp")]
        public virtual string LeaseTimestamp {
            get {
                return this.leaseTimestamp;
            }
            set {
                this.leaseTimestamp = value;
            }
        }
        
        /// <summary>A bag of bytes which is the task payload. The payload on the JSON side is always Base64 encoded.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("payloadBase64")]
        public virtual string PayloadBase64 {
            get {
                return this.payloadBase64;
            }
            set {
                this.payloadBase64 = value;
            }
        }
        
        /// <summary>Name of the queue that the task is in.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("queueName")]
        public virtual string QueueName {
            get {
                return this.queueName;
            }
            set {
                this.queueName = value;
            }
        }
        
        [Newtonsoft.Json.JsonPropertyAttribute("error")]
        public virtual Google.Apis.Requests.RequestError Error {
            get {
                return this.error;
            }
            set {
                this.error = value;
            }
        }
        
        public virtual string ETag {
            get {
                return this.eTag;
            }
            set {
                this.eTag = value;
            }
        }
    }
    
    public class Taskqueue : Google.Apis.Requests.IDirectResponseSchema {
        
        private Taskqueue.AclData acl;
        
        private string id;
        
        private string kind;
        
        private System.Nullable<long> maxLeases;
        
        private Taskqueue.StatsData stats;
        
        private Google.Apis.Requests.RequestError error;
        
        private string eTag;
        
        /// <summary>ACLs that are applicable to this TaskQueue object.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("acl")]
        public virtual Taskqueue.AclData Acl {
            get {
                return this.acl;
            }
            set {
                this.acl = value;
            }
        }
        
        /// <summary>Name of the taskqueue.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id {
            get {
                return this.id;
            }
            set {
                this.id = value;
            }
        }
        
        /// <summary>The kind of REST object returned, in this case taskqueue.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this.kind;
            }
            set {
                this.kind = value;
            }
        }
        
        /// <summary>The number of times we should lease out tasks before giving up on them. If unset we lease them out forever until a worker deletes the task.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("maxLeases")]
        public virtual System.Nullable<long> MaxLeases {
            get {
                return this.maxLeases;
            }
            set {
                this.maxLeases = value;
            }
        }
        
        /// <summary>Statistics for the TaskQueue object in question.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("stats")]
        public virtual Taskqueue.StatsData Stats {
            get {
                return this.stats;
            }
            set {
                this.stats = value;
            }
        }
        
        [Newtonsoft.Json.JsonPropertyAttribute("error")]
        public virtual Google.Apis.Requests.RequestError Error {
            get {
                return this.error;
            }
            set {
                this.error = value;
            }
        }
        
        public virtual string ETag {
            get {
                return this.eTag;
            }
            set {
                this.eTag = value;
            }
        }
        
        /// <summary>ACLs that are applicable to this TaskQueue object.</summary>
        public class AclData {
            
            private IList<System.String> adminEmails;
            
            private IList<System.String> consumerEmails;
            
            private IList<System.String> producerEmails;
            
            /// <summary>Email addresses of users who are &quot;admins&quot; of the TaskQueue. This means they can control the queue, eg set ACLs for the queue.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("adminEmails")]
            public virtual IList<System.String> AdminEmails {
                get {
                    return this.adminEmails;
                }
                set {
                    this.adminEmails = value;
                }
            }
            
            /// <summary>Email addresses of users who can &quot;consume&quot; tasks from the TaskQueue. This means they can Dequeue and Delete tasks from the queue.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("consumerEmails")]
            public virtual IList<System.String> ConsumerEmails {
                get {
                    return this.consumerEmails;
                }
                set {
                    this.consumerEmails = value;
                }
            }
            
            /// <summary>Email addresses of users who can &quot;produce&quot; tasks into the TaskQueue. This means they can Insert tasks into the queue.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("producerEmails")]
            public virtual IList<System.String> ProducerEmails {
                get {
                    return this.producerEmails;
                }
                set {
                    this.producerEmails = value;
                }
            }
        }
        
        /// <summary>Statistics for the TaskQueue object in question.</summary>
        public class StatsData {
            
            private string leasedLastHour;
            
            private string leasedLastMinute;
            
            private string oldestTask;
            
            private System.Nullable<long> totalTasks;
            
            /// <summary>Number of tasks leased in the last hour.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("leasedLastHour")]
            public virtual string LeasedLastHour {
                get {
                    return this.leasedLastHour;
                }
                set {
                    this.leasedLastHour = value;
                }
            }
            
            /// <summary>Number of tasks leased in the last minute.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("leasedLastMinute")]
            public virtual string LeasedLastMinute {
                get {
                    return this.leasedLastMinute;
                }
                set {
                    this.leasedLastMinute = value;
                }
            }
            
            /// <summary>The timestamp (in seconds since the epoch) of the oldest unfinished task.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("oldestTask")]
            public virtual string OldestTask {
                get {
                    return this.oldestTask;
                }
                set {
                    this.oldestTask = value;
                }
            }
            
            /// <summary>Number of tasks in the queue.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("totalTasks")]
            public virtual System.Nullable<long> TotalTasks {
                get {
                    return this.totalTasks;
                }
                set {
                    this.totalTasks = value;
                }
            }
        }
    }
    
    public class Tasks : Google.Apis.Requests.IDirectResponseSchema {
        
        private IList<Task> items;
        
        private string kind;
        
        private Google.Apis.Requests.RequestError error;
        
        private string eTag;
        
        /// <summary>The actual list of tasks returned as a result of the lease operation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual IList<Task> Items {
            get {
                return this.items;
            }
            set {
                this.items = value;
            }
        }
        
        /// <summary>The kind of object returned, a list of tasks.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this.kind;
            }
            set {
                this.kind = value;
            }
        }
        
        [Newtonsoft.Json.JsonPropertyAttribute("error")]
        public virtual Google.Apis.Requests.RequestError Error {
            get {
                return this.error;
            }
            set {
                this.error = value;
            }
        }
        
        public virtual string ETag {
            get {
                return this.eTag;
            }
            set {
                this.eTag = value;
            }
        }
    }
    
    public class Tasks2 : Google.Apis.Requests.IDirectResponseSchema {
        
        private IList<Task> items;
        
        private string kind;
        
        private Google.Apis.Requests.RequestError error;
        
        private string eTag;
        
        /// <summary>The actual list of tasks currently active in the TaskQueue.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual IList<Task> Items {
            get {
                return this.items;
            }
            set {
                this.items = value;
            }
        }
        
        /// <summary>The kind of object returned, a list of tasks.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this.kind;
            }
            set {
                this.kind = value;
            }
        }
        
        [Newtonsoft.Json.JsonPropertyAttribute("error")]
        public virtual Google.Apis.Requests.RequestError Error {
            get {
                return this.error;
            }
            set {
                this.error = value;
            }
        }
        
        public virtual string ETag {
            get {
                return this.eTag;
            }
            set {
                this.eTag = value;
            }
        }
    }
}
namespace Google.Apis.Taskqueue.v1beta1 {
    using System;
    using System.IO;
    using System.Collections.Generic;
    using Google.Apis;
    using Google.Apis.Discovery;
    
    
    public partial class TaskqueueService : Google.Apis.Discovery.IRequestProvider {
        
        private Google.Apis.Discovery.IService genericService;
        
        private Google.Apis.Authentication.IAuthenticator authenticator;
        
        private const string DiscoveryDocument = "{\"kind\":\"discovery#restDescription\",\"id\":\"taskqueue:v1beta1\",\"name\":\"taskqueue\",\"" +
            "version\":\"v1beta1\",\"title\":\"TaskQueue API\",\"description\":\"Lets you access a Goog" +
            "le App Engine Pull Task Queue over REST.\",\"icons\":{\"x16\":\"http://www.google.com/" +
            "images/icons/product/search-16.gif\",\"x32\":\"http://www.google.com/images/icons/pr" +
            "oduct/search-32.gif\"},\"documentationLink\":\"http://code.google.com/appengine/docs" +
            "/python/taskqueue/rest.html\",\"labels\":[\"labs\"],\"protocol\":\"rest\",\"basePath\":\"/ta" +
            "skqueue/v1beta1/projects/\",\"parameters\":{\"alt\":{\"type\":\"string\",\"description\":\"D" +
            "ata format for the response.\",\"default\":\"json\",\"enum\":[\"json\"],\"enumDescriptions" +
            "\":[\"Responses with Content-Type of application/json\"],\"location\":\"query\"},\"field" +
            "s\":{\"type\":\"string\",\"description\":\"Selector specifying which fields to include i" +
            "n a partial response.\",\"location\":\"query\"},\"key\":{\"type\":\"string\",\"description\":" +
            "\"API key. Your API key identifies your project and provides you with API access," +
            " quota, and reports. Required unless you provide an OAuth 2.0 token.\",\"location\"" +
            ":\"query\"},\"oauth_token\":{\"type\":\"string\",\"description\":\"OAuth 2.0 token for the " +
            "current user.\",\"location\":\"query\"},\"prettyPrint\":{\"type\":\"boolean\",\"description\"" +
            ":\"Returns response with indentations and line breaks.\",\"default\":\"true\",\"locatio" +
            "n\":\"query\"},\"userIp\":{\"type\":\"string\",\"description\":\"IP address of the site wher" +
            "e the request originates. Use this if you want to enforce per-user limits.\",\"loc" +
            "ation\":\"query\"}},\"auth\":{\"oauth2\":{\"scopes\":{\"https://www.googleapis.com/auth/ta" +
            "skqueue\":{\"description\":\"Manage your Tasks and Taskqueues\"},\"https://www.googlea" +
            "pis.com/auth/taskqueue.consumer\":{\"description\":\"Consume Tasks from your Taskque" +
            "ues\"}}}},\"schemas\":{\"Task\":{\"id\":\"Task\",\"type\":\"object\",\"properties\":{\"enqueueTi" +
            "mestamp\":{\"type\":\"string\",\"description\":\"Time (in seconds since the epoch) at wh" +
            "ich the task was enqueued.\",\"format\":\"int64\"},\"id\":{\"type\":\"string\",\"description" +
            "\":\"Name of the task.\"},\"kind\":{\"type\":\"string\",\"description\":\"The kind of object" +
            " returned, in this case set to task.\",\"default\":\"taskqueues#task\"},\"leaseTimesta" +
            "mp\":{\"type\":\"string\",\"description\":\"Time (in seconds since the epoch) at which t" +
            "he task lease will expire. This value is 0 if the task isnt currently leased out" +
            " to a worker.\",\"format\":\"int64\"},\"payloadBase64\":{\"type\":\"string\",\"description\":" +
            "\"A bag of bytes which is the task payload. The payload on the JSON side is alway" +
            "s Base64 encoded.\"},\"queueName\":{\"type\":\"string\",\"description\":\"Name of the queu" +
            "e that the task is in.\"}}},\"Taskqueue\":{\"id\":\"Taskqueue\",\"type\":\"object\",\"proper" +
            "ties\":{\"acl\":{\"type\":\"object\",\"description\":\"ACLs that are applicable to this Ta" +
            "skQueue object.\",\"properties\":{\"adminEmails\":{\"type\":\"array\",\"description\":\"Emai" +
            "l addresses of users who are \\\"admins\\\" of the TaskQueue. This means they can co" +
            "ntrol the queue, eg set ACLs for the queue.\",\"items\":{\"type\":\"string\"}},\"consume" +
            "rEmails\":{\"type\":\"array\",\"description\":\"Email addresses of users who can \\\"consu" +
            "me\\\" tasks from the TaskQueue. This means they can Dequeue and Delete tasks from" +
            " the queue.\",\"items\":{\"type\":\"string\"}},\"producerEmails\":{\"type\":\"array\",\"descri" +
            "ption\":\"Email addresses of users who can \\\"produce\\\" tasks into the TaskQueue. T" +
            "his means they can Insert tasks into the queue.\",\"items\":{\"type\":\"string\"}}}},\"i" +
            "d\":{\"type\":\"string\",\"description\":\"Name of the taskqueue.\"},\"kind\":{\"type\":\"stri" +
            "ng\",\"description\":\"The kind of REST object returned, in this case taskqueue.\",\"d" +
            "efault\":\"taskqueues#taskqueue\"},\"maxLeases\":{\"type\":\"integer\",\"description\":\"The" +
            " number of times we should lease out tasks before giving up on them. If unset we" +
            " lease them out forever until a worker deletes the task.\",\"format\":\"int32\"},\"sta" +
            "ts\":{\"type\":\"object\",\"description\":\"Statistics for the TaskQueue object in quest" +
            "ion.\",\"properties\":{\"leasedLastHour\":{\"type\":\"string\",\"description\":\"Number of t" +
            "asks leased in the last hour.\",\"format\":\"int64\"},\"leasedLastMinute\":{\"type\":\"str" +
            "ing\",\"description\":\"Number of tasks leased in the last minute.\",\"format\":\"int64\"" +
            "},\"oldestTask\":{\"type\":\"string\",\"description\":\"The timestamp (in seconds since t" +
            "he epoch) of the oldest unfinished task.\",\"format\":\"int64\"},\"totalTasks\":{\"type\"" +
            ":\"integer\",\"description\":\"Number of tasks in the queue.\",\"format\":\"int32\"}}}}},\"" +
            "Tasks\":{\"id\":\"Tasks\",\"type\":\"object\",\"properties\":{\"items\":{\"type\":\"array\",\"desc" +
            "ription\":\"The actual list of tasks returned as a result of the lease operation.\"" +
            ",\"items\":{\"$ref\":\"Task\"}},\"kind\":{\"type\":\"string\",\"description\":\"The kind of obj" +
            "ect returned, a list of tasks.\",\"default\":\"taskqueue#tasks\"}}},\"Tasks2\":{\"id\":\"T" +
            "asks2\",\"type\":\"object\",\"properties\":{\"items\":{\"type\":\"array\",\"description\":\"The " +
            "actual list of tasks currently active in the TaskQueue.\",\"items\":{\"$ref\":\"Task\"}" +
            "},\"kind\":{\"type\":\"string\",\"description\":\"The kind of object returned, a list of " +
            "tasks.\",\"default\":\"taskqueues#tasks\"}}}},\"resources\":{\"taskqueues\":{\"methods\":{\"" +
            "get\":{\"id\":\"taskqueue.taskqueues.get\",\"path\":\"{project}/taskqueues/{taskqueue}\"," +
            "\"httpMethod\":\"GET\",\"description\":\"Get detailed information about a TaskQueue.\",\"" +
            "parameters\":{\"getStats\":{\"type\":\"boolean\",\"description\":\"Whether to get stats. O" +
            "ptional.\",\"location\":\"query\"},\"project\":{\"type\":\"string\",\"description\":\"The proj" +
            "ect under which the queue lies.\",\"required\":true,\"location\":\"path\"},\"taskqueue\":" +
            "{\"type\":\"string\",\"description\":\"The id of the taskqueue to get the properties of" +
            ".\",\"required\":true,\"location\":\"path\"}},\"parameterOrder\":[\"project\",\"taskqueue\"]," +
            "\"response\":{\"$ref\":\"Taskqueue\"},\"scopes\":[\"https://www.googleapis.com/auth/taskq" +
            "ueue\",\"https://www.googleapis.com/auth/taskqueue.consumer\"]}}},\"tasks\":{\"methods" +
            "\":{\"delete\":{\"id\":\"taskqueue.tasks.delete\",\"path\":\"{project}/taskqueues/{taskque" +
            "ue}/tasks/{task}\",\"httpMethod\":\"DELETE\",\"description\":\"Delete a task from a Task" +
            "Queue.\",\"parameters\":{\"project\":{\"type\":\"string\",\"description\":\"The project unde" +
            "r which the queue lies.\",\"required\":true,\"location\":\"path\"},\"task\":{\"type\":\"stri" +
            "ng\",\"description\":\"The id of the task to delete.\",\"required\":true,\"location\":\"pa" +
            "th\"},\"taskqueue\":{\"type\":\"string\",\"description\":\"The taskqueue to delete a task " +
            "from.\",\"required\":true,\"location\":\"path\"}},\"parameterOrder\":[\"project\",\"taskqueu" +
            "e\",\"task\"],\"scopes\":[\"https://www.googleapis.com/auth/taskqueue\",\"https://www.go" +
            "ogleapis.com/auth/taskqueue.consumer\"]},\"get\":{\"id\":\"taskqueue.tasks.get\",\"path\"" +
            ":\"{project}/taskqueues/{taskqueue}/tasks/{task}\",\"httpMethod\":\"GET\",\"description" +
            "\":\"Get a particular task from a TaskQueue.\",\"parameters\":{\"project\":{\"type\":\"str" +
            "ing\",\"description\":\"The project under which the queue lies.\",\"required\":true,\"lo" +
            "cation\":\"path\"},\"task\":{\"type\":\"string\",\"description\":\"The task to get propertie" +
            "s of.\",\"required\":true,\"location\":\"path\"},\"taskqueue\":{\"type\":\"string\",\"descript" +
            "ion\":\"The taskqueue in which the task belongs.\",\"required\":true,\"location\":\"path" +
            "\"}},\"parameterOrder\":[\"project\",\"taskqueue\",\"task\"],\"response\":{\"$ref\":\"Task\"},\"" +
            "scopes\":[\"https://www.googleapis.com/auth/taskqueue\",\"https://www.googleapis.com" +
            "/auth/taskqueue.consumer\"]},\"lease\":{\"id\":\"taskqueue.tasks.lease\",\"path\":\"{proje" +
            "ct}/taskqueues/{taskqueue}/tasks/lease\",\"httpMethod\":\"POST\",\"description\":\"Lease" +
            " 1 or more tasks from a TaskQueue.\",\"parameters\":{\"leaseSecs\":{\"type\":\"integer\"," +
            "\"description\":\"The lease in seconds.\",\"required\":true,\"format\":\"int32\",\"location" +
            "\":\"query\"},\"numTasks\":{\"type\":\"integer\",\"description\":\"The number of tasks to le" +
            "ase.\",\"required\":true,\"format\":\"int32\",\"location\":\"query\"},\"project\":{\"type\":\"st" +
            "ring\",\"description\":\"The project under which the queue lies.\",\"required\":true,\"l" +
            "ocation\":\"path\"},\"taskqueue\":{\"type\":\"string\",\"description\":\"The taskqueue to le" +
            "ase a task from.\",\"required\":true,\"location\":\"path\"}},\"parameterOrder\":[\"project" +
            "\",\"taskqueue\",\"numTasks\",\"leaseSecs\"],\"response\":{\"$ref\":\"Tasks\"},\"scopes\":[\"htt" +
            "ps://www.googleapis.com/auth/taskqueue\",\"https://www.googleapis.com/auth/taskque" +
            "ue.consumer\"]},\"list\":{\"id\":\"taskqueue.tasks.list\",\"path\":\"{project}/taskqueues/" +
            "{taskqueue}/tasks\",\"httpMethod\":\"GET\",\"description\":\"List Tasks in a TaskQueue\"," +
            "\"parameters\":{\"project\":{\"type\":\"string\",\"description\":\"The project under which " +
            "the queue lies.\",\"required\":true,\"location\":\"path\"},\"taskqueue\":{\"type\":\"string\"" +
            ",\"description\":\"The id of the taskqueue to list tasks from.\",\"required\":true,\"lo" +
            "cation\":\"path\"}},\"parameterOrder\":[\"project\",\"taskqueue\"],\"response\":{\"$ref\":\"Ta" +
            "sks2\"},\"scopes\":[\"https://www.googleapis.com/auth/taskqueue\",\"https://www.google" +
            "apis.com/auth/taskqueue.consumer\"]}}}}}";
        
        private const string Version = "v1beta1";
        
        private const string Name = "taskqueue";
        
        private const string BaseUri = "https://www.googleapis.com/taskqueue/v1beta1/projects/";
        
        private const Google.Apis.Discovery.DiscoveryVersion DiscoveryVersionUsed = Google.Apis.Discovery.DiscoveryVersion.Version_1_0;
        
        private string key;
        
        protected TaskqueueService(Google.Apis.Discovery.IService genericService, Google.Apis.Authentication.IAuthenticator authenticator) {
            this.genericService = genericService;
            this.authenticator = authenticator;
            this.taskqueues = new TaskqueuesResource(this);
            this.tasks = new TasksResource(this);
        }
        
        public TaskqueueService() : 
                this(Google.Apis.Authentication.NullAuthenticator.Instance) {
        }
        
        public TaskqueueService(Google.Apis.Authentication.IAuthenticator authenticator) : 
                this(new Google.Apis.Discovery.DiscoveryService(new Google.Apis.Discovery.StringDiscoveryDevice(DiscoveryDocument)).GetService(TaskqueueService.DiscoveryVersionUsed, new Google.Apis.Discovery.FactoryParameterV1_0(new System.Uri(TaskqueueService.BaseUri))), authenticator) {
        }
        
        /// <summary>Sets the API-Key (or DeveloperKey) which this service uses for all requests</summary>
        public virtual string Key {
            get {
                return this.key;
            }
            set {
                this.key = value;
            }
        }
        
        public virtual Google.Apis.Requests.IRequest CreateRequest(string resource, string method) {
            Google.Apis.Requests.IRequest request = this.genericService.CreateRequest(resource, method);
            if (!string.IsNullOrEmpty(Key)) {
                request = request.WithKey(this.Key);
            }
            return request.WithAuthentication(authenticator);
        }
        
        public virtual void RegisterSerializer(Google.Apis.ISerializer serializer) {
            genericService.Serializer = serializer;
        }
        
        public virtual string SerializeObject(object obj) {
            return genericService.SerializeRequest(obj);
        }
        
        public virtual T DeserializeResponse<T>(Google.Apis.Requests.IResponse response)
         {
            return genericService.DeserializeResponse<T>(response);
        }
        
        /// <summary>A list of all OAuth2.0 scopes. Each of these scopes relates to a permission or group of permissions that different methods of this API may need.</summary>
        public enum Scopes {
            
            /// <summary>Manage your Tasks and Taskqueues</summary>
            [Google.Apis.Util.StringValueAttribute("https://www.googleapis.com/auth/taskqueue")]
            Taskqueue,
            
            /// <summary>Consume Tasks from your Taskqueues</summary>
            [Google.Apis.Util.StringValueAttribute("https://www.googleapis.com/auth/taskqueue.consumer")]
            TaskqueueConsumer,
        }
    }
    
    public class TaskqueuesResource {
        
        private Google.Apis.Discovery.IRequestProvider service;
        
        private const string Resource = "taskqueues";
        
        public TaskqueuesResource(TaskqueueService service) {
            this.service = service;
        }
        
        /// <summary>Get detailed information about a TaskQueue.</summary>
        /// <param name="project">Required - The project under which the queue lies.</param>
        /// <param name="taskqueue">Required - The id of the taskqueue to get the properties of.</param>
        public virtual GetRequest Get(string project, string taskqueue) {
            return new GetRequest(service, project, taskqueue);
        }
        
        public class GetRequest : Google.Apis.Requests.ServiceRequest<Google.Apis.Taskqueue.v1beta1.Data.Taskqueue> {
            
            private System.Boolean? getStats;
            
            private string project;
            
            private string taskqueue;
            
            public GetRequest(Google.Apis.Discovery.IRequestProvider service, string project, string taskqueue) : 
                    base(service) {
                this.project = project;
                this.taskqueue = taskqueue;
            }
            
            /// <summary>Whether to get stats. Optional.</summary>
            [Google.Apis.Util.RequestParameterAttribute("getStats")]
            public virtual System.Boolean? GetStats {
                get {
                    return this.getStats;
                }
                set {
                    this.getStats = value;
                }
            }
            
            /// <summary>The project under which the queue lies.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project")]
            public virtual string Project {
                get {
                    return this.project;
                }
            }
            
            /// <summary>The id of the taskqueue to get the properties of.</summary>
            [Google.Apis.Util.RequestParameterAttribute("taskqueue")]
            public virtual string Taskqueue {
                get {
                    return this.taskqueue;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "taskqueues";
                }
            }
            
            protected override string MethodName {
                get {
                    return "get";
                }
            }
        }
    }
    
    public class TasksResource {
        
        private Google.Apis.Discovery.IRequestProvider service;
        
        private const string Resource = "tasks";
        
        public TasksResource(TaskqueueService service) {
            this.service = service;
        }
        
        /// <summary>Delete a task from a TaskQueue.</summary>
        /// <param name="project">Required - The project under which the queue lies.</param>
        /// <param name="taskqueue">Required - The taskqueue to delete a task from.</param>
        /// <param name="task">Required - The id of the task to delete.</param>
        public virtual DeleteRequest Delete(string project, string taskqueue, string task) {
            return new DeleteRequest(service, project, taskqueue, task);
        }
        
        /// <summary>Get a particular task from a TaskQueue.</summary>
        /// <param name="project">Required - The project under which the queue lies.</param>
        /// <param name="taskqueue">Required - The taskqueue in which the task belongs.</param>
        /// <param name="task">Required - The task to get properties of.</param>
        public virtual GetRequest Get(string project, string taskqueue, string task) {
            return new GetRequest(service, project, taskqueue, task);
        }
        
        /// <summary>Lease 1 or more tasks from a TaskQueue.</summary>
        /// <param name="project">Required - The project under which the queue lies.</param>
        /// <param name="taskqueue">Required - The taskqueue to lease a task from.</param>
        /// <param name="numTasks">Required - The number of tasks to lease.</param>
        /// <param name="leaseSecs">Required - The lease in seconds.</param>
        public virtual LeaseRequest Lease(string project, string taskqueue, long numTasks, long leaseSecs) {
            return new LeaseRequest(service, project, taskqueue, numTasks, leaseSecs);
        }
        
        /// <summary>List Tasks in a TaskQueue</summary>
        /// <param name="project">Required - The project under which the queue lies.</param>
        /// <param name="taskqueue">Required - The id of the taskqueue to list tasks from.</param>
        public virtual ListRequest List(string project, string taskqueue) {
            return new ListRequest(service, project, taskqueue);
        }
        
        public class DeleteRequest : Google.Apis.Requests.ServiceRequest<string> {
            
            private string project;
            
            private string task;
            
            private string taskqueue;
            
            public DeleteRequest(Google.Apis.Discovery.IRequestProvider service, string project, string taskqueue, string task) : 
                    base(service) {
                this.project = project;
                this.taskqueue = taskqueue;
                this.task = task;
            }
            
            /// <summary>The project under which the queue lies.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project")]
            public virtual string Project {
                get {
                    return this.project;
                }
            }
            
            /// <summary>The id of the task to delete.</summary>
            [Google.Apis.Util.RequestParameterAttribute("task")]
            public virtual string Task {
                get {
                    return this.task;
                }
            }
            
            /// <summary>The taskqueue to delete a task from.</summary>
            [Google.Apis.Util.RequestParameterAttribute("taskqueue")]
            public virtual string Taskqueue {
                get {
                    return this.taskqueue;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "tasks";
                }
            }
            
            protected override string MethodName {
                get {
                    return "delete";
                }
            }
        }
        
        public class GetRequest : Google.Apis.Requests.ServiceRequest<Google.Apis.Taskqueue.v1beta1.Data.Task> {
            
            private string project;
            
            private string task;
            
            private string taskqueue;
            
            public GetRequest(Google.Apis.Discovery.IRequestProvider service, string project, string taskqueue, string task) : 
                    base(service) {
                this.project = project;
                this.taskqueue = taskqueue;
                this.task = task;
            }
            
            /// <summary>The project under which the queue lies.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project")]
            public virtual string Project {
                get {
                    return this.project;
                }
            }
            
            /// <summary>The task to get properties of.</summary>
            [Google.Apis.Util.RequestParameterAttribute("task")]
            public virtual string Task {
                get {
                    return this.task;
                }
            }
            
            /// <summary>The taskqueue in which the task belongs.</summary>
            [Google.Apis.Util.RequestParameterAttribute("taskqueue")]
            public virtual string Taskqueue {
                get {
                    return this.taskqueue;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "tasks";
                }
            }
            
            protected override string MethodName {
                get {
                    return "get";
                }
            }
        }
        
        public class LeaseRequest : Google.Apis.Requests.ServiceRequest<Google.Apis.Taskqueue.v1beta1.Data.Tasks> {
            
            private long leaseSecs;
            
            private long numTasks;
            
            private string project;
            
            private string taskqueue;
            
            public LeaseRequest(Google.Apis.Discovery.IRequestProvider service, string project, string taskqueue, long numTasks, long leaseSecs) : 
                    base(service) {
                this.project = project;
                this.taskqueue = taskqueue;
                this.numTasks = numTasks;
                this.leaseSecs = leaseSecs;
            }
            
            /// <summary>The lease in seconds.</summary>
            [Google.Apis.Util.RequestParameterAttribute("leaseSecs")]
            public virtual long LeaseSecs {
                get {
                    return this.leaseSecs;
                }
            }
            
            /// <summary>The number of tasks to lease.</summary>
            [Google.Apis.Util.RequestParameterAttribute("numTasks")]
            public virtual long NumTasks {
                get {
                    return this.numTasks;
                }
            }
            
            /// <summary>The project under which the queue lies.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project")]
            public virtual string Project {
                get {
                    return this.project;
                }
            }
            
            /// <summary>The taskqueue to lease a task from.</summary>
            [Google.Apis.Util.RequestParameterAttribute("taskqueue")]
            public virtual string Taskqueue {
                get {
                    return this.taskqueue;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "tasks";
                }
            }
            
            protected override string MethodName {
                get {
                    return "lease";
                }
            }
        }
        
        public class ListRequest : Google.Apis.Requests.ServiceRequest<Google.Apis.Taskqueue.v1beta1.Data.Tasks2> {
            
            private string project;
            
            private string taskqueue;
            
            public ListRequest(Google.Apis.Discovery.IRequestProvider service, string project, string taskqueue) : 
                    base(service) {
                this.project = project;
                this.taskqueue = taskqueue;
            }
            
            /// <summary>The project under which the queue lies.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project")]
            public virtual string Project {
                get {
                    return this.project;
                }
            }
            
            /// <summary>The id of the taskqueue to list tasks from.</summary>
            [Google.Apis.Util.RequestParameterAttribute("taskqueue")]
            public virtual string Taskqueue {
                get {
                    return this.taskqueue;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "tasks";
                }
            }
            
            protected override string MethodName {
                get {
                    return "list";
                }
            }
        }
    }
    
    public partial class TaskqueueService {
        
        private const string Resource = "";
        
        private TaskqueuesResource taskqueues;
        
        private TasksResource tasks;
        
        private Google.Apis.Discovery.IRequestProvider service {
            get {
                return this;
            }
        }
        
        public virtual TaskqueuesResource Taskqueues {
            get {
                return this.taskqueues;
            }
        }
        
        public virtual TasksResource Tasks {
            get {
                return this.tasks;
            }
        }
    }
}
