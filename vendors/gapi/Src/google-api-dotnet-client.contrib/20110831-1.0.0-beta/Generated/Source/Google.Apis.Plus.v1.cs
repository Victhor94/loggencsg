//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5446
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Google.Apis.Plus.v1.Data {
    using System;
    using System.Collections;
    using System.Collections.Generic;
    
    
    public class Acl {
        
        private string description;
        
        private IList<PlusAclentryResource> items;
        
        private string kind;
        
        /// <summary>Description of the access granted, suitable for display.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description {
            get {
                return this.description;
            }
            set {
                this.description = value;
            }
        }
        
        /// <summary>The list of access entries.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual IList<PlusAclentryResource> Items {
            get {
                return this.items;
            }
            set {
                this.items = value;
            }
        }
        
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this.kind;
            }
            set {
                this.kind = value;
            }
        }
    }
    
    public class Activity : Google.Apis.Requests.IDirectResponseSchema {
        
        private Acl access;
        
        private Activity.ActorData actor;
        
        private string address;
        
        private string annotation;
        
        private string crosspostSource;
        
        private string geocode;
        
        private string id;
        
        private string kind;
        
        private Activity.ObjectData objectValue;
        
        private string placeId;
        
        private string placeName;
        
        private System.Nullable<bool> placeholder;
        
        private Activity.ProviderData provider;
        
        private string published;
        
        private string radius;
        
        private string title;
        
        private string updated;
        
        private string url;
        
        private string verb;
        
        private Google.Apis.Requests.RequestError error;
        
        private string eTag;
        
        [Newtonsoft.Json.JsonPropertyAttribute("access")]
        public virtual Acl Access {
            get {
                return this.access;
            }
            set {
                this.access = value;
            }
        }
        
        /// <summary>The person who performed this activity.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("actor")]
        public virtual Activity.ActorData Actor {
            get {
                return this.actor;
            }
            set {
                this.actor = value;
            }
        }
        
        /// <summary>Street address where this activity occurred.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("address")]
        public virtual string Address {
            get {
                return this.address;
            }
            set {
                this.address = value;
            }
        }
        
        /// <summary>Additional content added by the person who shared this activity, applicable only when resharing an activity.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("annotation")]
        public virtual string Annotation {
            get {
                return this.annotation;
            }
            set {
                this.annotation = value;
            }
        }
        
        /// <summary>If this activity is a crosspost from another system, this property specifies the ID of the original activity.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("crosspostSource")]
        public virtual string CrosspostSource {
            get {
                return this.crosspostSource;
            }
            set {
                this.crosspostSource = value;
            }
        }
        
        /// <summary>Latitude and longitude where this activity occurred. Format is latitude followed by longitude, space separated.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("geocode")]
        public virtual string Geocode {
            get {
                return this.geocode;
            }
            set {
                this.geocode = value;
            }
        }
        
        /// <summary>The ID of this activity.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id {
            get {
                return this.id;
            }
            set {
                this.id = value;
            }
        }
        
        /// <summary>Identifies this resource as an activity. Value: &quot;plus#activity&quot;.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this.kind;
            }
            set {
                this.kind = value;
            }
        }
        
        /// <summary>The object of this activity.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("object")]
        public virtual Activity.ObjectData Object {
            get {
                return this.objectValue;
            }
            set {
                this.objectValue = value;
            }
        }
        
        /// <summary>ID of the place where this activity occurred.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("placeId")]
        public virtual string PlaceId {
            get {
                return this.placeId;
            }
            set {
                this.placeId = value;
            }
        }
        
        /// <summary>Name of the place where this activity occurred.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("placeName")]
        public virtual string PlaceName {
            get {
                return this.placeName;
            }
            set {
                this.placeName = value;
            }
        }
        
        [Newtonsoft.Json.JsonPropertyAttribute("placeholder")]
        public virtual System.Nullable<bool> Placeholder {
            get {
                return this.placeholder;
            }
            set {
                this.placeholder = value;
            }
        }
        
        /// <summary>The service provider that initially published this activity.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("provider")]
        public virtual Activity.ProviderData Provider {
            get {
                return this.provider;
            }
            set {
                this.provider = value;
            }
        }
        
        /// <summary>The time at which this activity was initially published. Formatted as an RFC 3339 timestamp.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("published")]
        public virtual string Published {
            get {
                return this.published;
            }
            set {
                this.published = value;
            }
        }
        
        /// <summary>Radius, in meters, of the region where this activity occurred, centered at the latitude and longitude identified in geocode.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("radius")]
        public virtual string Radius {
            get {
                return this.radius;
            }
            set {
                this.radius = value;
            }
        }
        
        /// <summary>Title of this activity.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("title")]
        public virtual string Title {
            get {
                return this.title;
            }
            set {
                this.title = value;
            }
        }
        
        /// <summary>The time at which this activity was last updated. Formatted as an RFC 3339 timestamp.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("updated")]
        public virtual string Updated {
            get {
                return this.updated;
            }
            set {
                this.updated = value;
            }
        }
        
        [Newtonsoft.Json.JsonPropertyAttribute("url")]
        public virtual string Url {
            get {
                return this.url;
            }
            set {
                this.url = value;
            }
        }
        
        /// <summary>This activity&apos;s verb, indicating what action was performed. Possible values are:  
        ///- &quot;post&quot; - Publish content to the stream. 
        ///- &quot;checkin&quot; - Check in to a location. 
        ///- &quot;share&quot; - Reshare an activity.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("verb")]
        public virtual string Verb {
            get {
                return this.verb;
            }
            set {
                this.verb = value;
            }
        }
        
        [Newtonsoft.Json.JsonPropertyAttribute("error")]
        public virtual Google.Apis.Requests.RequestError Error {
            get {
                return this.error;
            }
            set {
                this.error = value;
            }
        }
        
        public virtual string ETag {
            get {
                return this.eTag;
            }
            set {
                this.eTag = value;
            }
        }
        
        /// <summary>The person who performed this activity.</summary>
        public class ActorData {
            
            private string displayName;
            
            private string id;
            
            private ActorData.ImageData image;
            
            private string url;
            
            /// <summary>The name of the actor, suitable for display.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("displayName")]
            public virtual string DisplayName {
                get {
                    return this.displayName;
                }
                set {
                    this.displayName = value;
                }
            }
            
            /// <summary>The ID of the actor&apos;s person resource.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("id")]
            public virtual string Id {
                get {
                    return this.id;
                }
                set {
                    this.id = value;
                }
            }
            
            /// <summary>The image representation of the actor.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("image")]
            public virtual ActorData.ImageData Image {
                get {
                    return this.image;
                }
                set {
                    this.image = value;
                }
            }
            
            /// <summary>The link to the actor&apos;s Google profile.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("url")]
            public virtual string Url {
                get {
                    return this.url;
                }
                set {
                    this.url = value;
                }
            }
            
            /// <summary>The image representation of the actor.</summary>
            public class ImageData {
                
                private string url;
                
                /// <summary>The URL of the actor&apos;s profile photo. To re-size the image and crop it to a square, append the query string ?sz=x, where x is the dimension in pixels of each side.</summary>
                [Newtonsoft.Json.JsonPropertyAttribute("url")]
                public virtual string Url {
                    get {
                        return this.url;
                    }
                    set {
                        this.url = value;
                    }
                }
            }
        }
        
        /// <summary>The object of this activity.</summary>
        public class ObjectData {
            
            private ObjectData.ActorData actor;
            
            private IList<ObjectData.AttachmentsData> attachments;
            
            private string content;
            
            private string id;
            
            private string objectType;
            
            private string originalContent;
            
            private ObjectData.PlusonersData plusoners;
            
            private ObjectData.RepliesData replies;
            
            private ObjectData.ResharersData resharers;
            
            private string url;
            
            /// <summary>If this activity&apos;s object is itself another activity (for example, when a person reshares an activity), this property specifies the original activity&apos;s actor.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("actor")]
            public virtual ObjectData.ActorData Actor {
                get {
                    return this.actor;
                }
                set {
                    this.actor = value;
                }
            }
            
            /// <summary>The media objects attached to this activity.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("attachments")]
            public virtual IList<ObjectData.AttachmentsData> Attachments {
                get {
                    return this.attachments;
                }
                set {
                    this.attachments = value;
                }
            }
            
            /// <summary>The HTML-formatted content, suitable for display. When creating or updating an activity, this value must be supplied as plain text in the request. If successful, the response will contain the HTML-formatted content. When updating an activity, use originalContent as the starting value, then assign the updated text to this property.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("content")]
            public virtual string Content {
                get {
                    return this.content;
                }
                set {
                    this.content = value;
                }
            }
            
            /// <summary>The ID of the object. When resharing an activity, this is the ID of the activity being reshared.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("id")]
            public virtual string Id {
                get {
                    return this.id;
                }
                set {
                    this.id = value;
                }
            }
            
            /// <summary>The type of the object. Possible values are:  
            ///- &quot;note&quot; - Textual content. 
            ///- &quot;activity&quot; - A Google+ activity.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("objectType")]
            public virtual string ObjectType {
                get {
                    return this.objectType;
                }
                set {
                    this.objectType = value;
                }
            }
            
            /// <summary>The content (text) as provided by the author, stored without any HTML formatting. When updating an activity&apos;s content, use the value of originalContent as the starting point from which to make edits.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("originalContent")]
            public virtual string OriginalContent {
                get {
                    return this.originalContent;
                }
                set {
                    this.originalContent = value;
                }
            }
            
            /// <summary>People who +1&apos;d this activity.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("plusoners")]
            public virtual ObjectData.PlusonersData Plusoners {
                get {
                    return this.plusoners;
                }
                set {
                    this.plusoners = value;
                }
            }
            
            /// <summary>Comments in reply to this activity.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("replies")]
            public virtual ObjectData.RepliesData Replies {
                get {
                    return this.replies;
                }
                set {
                    this.replies = value;
                }
            }
            
            /// <summary>People who reshared this activity.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("resharers")]
            public virtual ObjectData.ResharersData Resharers {
                get {
                    return this.resharers;
                }
                set {
                    this.resharers = value;
                }
            }
            
            /// <summary>The URL that points to the linked resource.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("url")]
            public virtual string Url {
                get {
                    return this.url;
                }
                set {
                    this.url = value;
                }
            }
            
            /// <summary>If this activity&apos;s object is itself another activity (for example, when a person reshares an activity), this property specifies the original activity&apos;s actor.</summary>
            public class ActorData {
                
                private string displayName;
                
                private string id;
                
                private ActorData.ImageData image;
                
                private string url;
                
                /// <summary>The original actor&apos;s name, suitable for display.</summary>
                [Newtonsoft.Json.JsonPropertyAttribute("displayName")]
                public virtual string DisplayName {
                    get {
                        return this.displayName;
                    }
                    set {
                        this.displayName = value;
                    }
                }
                
                /// <summary>ID of the original actor.</summary>
                [Newtonsoft.Json.JsonPropertyAttribute("id")]
                public virtual string Id {
                    get {
                        return this.id;
                    }
                    set {
                        this.id = value;
                    }
                }
                
                /// <summary>The image representation of the original actor.</summary>
                [Newtonsoft.Json.JsonPropertyAttribute("image")]
                public virtual ActorData.ImageData Image {
                    get {
                        return this.image;
                    }
                    set {
                        this.image = value;
                    }
                }
                
                /// <summary>A link to the original actor&apos;s Google profile.</summary>
                [Newtonsoft.Json.JsonPropertyAttribute("url")]
                public virtual string Url {
                    get {
                        return this.url;
                    }
                    set {
                        this.url = value;
                    }
                }
                
                /// <summary>The image representation of the original actor.</summary>
                public class ImageData {
                    
                    private string url;
                    
                    /// <summary>A URL that points to a thumbnail photo of the original actor.</summary>
                    [Newtonsoft.Json.JsonPropertyAttribute("url")]
                    public virtual string Url {
                        get {
                            return this.url;
                        }
                        set {
                            this.url = value;
                        }
                    }
                }
            }
            
            public class AttachmentsData {
                
                private string content;
                
                private string displayName;
                
                private AttachmentsData.EmbedData embed;
                
                private AttachmentsData.FullImageData fullImage;
                
                private string id;
                
                private AttachmentsData.ImageData image;
                
                private string objectType;
                
                private string url;
                
                /// <summary>If the attachment is an article, this property contains a snippet of text from the article.</summary>
                [Newtonsoft.Json.JsonPropertyAttribute("content")]
                public virtual string Content {
                    get {
                        return this.content;
                    }
                    set {
                        this.content = value;
                    }
                }
                
                /// <summary>The title of the attachment (such as a photo caption or an article title).</summary>
                [Newtonsoft.Json.JsonPropertyAttribute("displayName")]
                public virtual string DisplayName {
                    get {
                        return this.displayName;
                    }
                    set {
                        this.displayName = value;
                    }
                }
                
                /// <summary>If the attachment is a video, the embeddable link.</summary>
                [Newtonsoft.Json.JsonPropertyAttribute("embed")]
                public virtual AttachmentsData.EmbedData Embed {
                    get {
                        return this.embed;
                    }
                    set {
                        this.embed = value;
                    }
                }
                
                /// <summary>The full image url for photo attachments.</summary>
                [Newtonsoft.Json.JsonPropertyAttribute("fullImage")]
                public virtual AttachmentsData.FullImageData FullImage {
                    get {
                        return this.fullImage;
                    }
                    set {
                        this.fullImage = value;
                    }
                }
                
                /// <summary>The ID of the media object&apos;s resource.</summary>
                [Newtonsoft.Json.JsonPropertyAttribute("id")]
                public virtual string Id {
                    get {
                        return this.id;
                    }
                    set {
                        this.id = value;
                    }
                }
                
                /// <summary>The preview image for photos or videos.</summary>
                [Newtonsoft.Json.JsonPropertyAttribute("image")]
                public virtual AttachmentsData.ImageData Image {
                    get {
                        return this.image;
                    }
                    set {
                        this.image = value;
                    }
                }
                
                /// <summary>The type of media object. Possible values are:  
                ///- &quot;photo&quot; - A photo. 
                ///- &quot;video&quot; - A video. 
                ///- &quot;article&quot; - An article, specified by a link.</summary>
                [Newtonsoft.Json.JsonPropertyAttribute("objectType")]
                public virtual string ObjectType {
                    get {
                        return this.objectType;
                    }
                    set {
                        this.objectType = value;
                    }
                }
                
                /// <summary>The link to the attachment, should be of type text/html.</summary>
                [Newtonsoft.Json.JsonPropertyAttribute("url")]
                public virtual string Url {
                    get {
                        return this.url;
                    }
                    set {
                        this.url = value;
                    }
                }
                
                /// <summary>If the attachment is a video, the embeddable link.</summary>
                public class EmbedData {
                    
                    private string type;
                    
                    private string url;
                    
                    /// <summary>Media type of the link.</summary>
                    [Newtonsoft.Json.JsonPropertyAttribute("type")]
                    public virtual string Type {
                        get {
                            return this.type;
                        }
                        set {
                            this.type = value;
                        }
                    }
                    
                    /// <summary>URL of the link.</summary>
                    [Newtonsoft.Json.JsonPropertyAttribute("url")]
                    public virtual string Url {
                        get {
                            return this.url;
                        }
                        set {
                            this.url = value;
                        }
                    }
                }
                
                /// <summary>The full image url for photo attachments.</summary>
                public class FullImageData {
                    
                    private System.Nullable<long> height;
                    
                    private string type;
                    
                    private string url;
                    
                    private System.Nullable<long> width;
                    
                    /// <summary>The height, in pixels, of the linked resource.</summary>
                    [Newtonsoft.Json.JsonPropertyAttribute("height")]
                    public virtual System.Nullable<long> Height {
                        get {
                            return this.height;
                        }
                        set {
                            this.height = value;
                        }
                    }
                    
                    /// <summary>Media type of the link.</summary>
                    [Newtonsoft.Json.JsonPropertyAttribute("type")]
                    public virtual string Type {
                        get {
                            return this.type;
                        }
                        set {
                            this.type = value;
                        }
                    }
                    
                    /// <summary>URL of the link.</summary>
                    [Newtonsoft.Json.JsonPropertyAttribute("url")]
                    public virtual string Url {
                        get {
                            return this.url;
                        }
                        set {
                            this.url = value;
                        }
                    }
                    
                    /// <summary>The width, in pixels, of the linked resource.</summary>
                    [Newtonsoft.Json.JsonPropertyAttribute("width")]
                    public virtual System.Nullable<long> Width {
                        get {
                            return this.width;
                        }
                        set {
                            this.width = value;
                        }
                    }
                }
                
                /// <summary>The preview image for photos or videos.</summary>
                public class ImageData {
                    
                    private System.Nullable<long> height;
                    
                    private string type;
                    
                    private string url;
                    
                    private System.Nullable<long> width;
                    
                    /// <summary>The height, in pixels, of the linked resource.</summary>
                    [Newtonsoft.Json.JsonPropertyAttribute("height")]
                    public virtual System.Nullable<long> Height {
                        get {
                            return this.height;
                        }
                        set {
                            this.height = value;
                        }
                    }
                    
                    /// <summary>Media type of the link.</summary>
                    [Newtonsoft.Json.JsonPropertyAttribute("type")]
                    public virtual string Type {
                        get {
                            return this.type;
                        }
                        set {
                            this.type = value;
                        }
                    }
                    
                    /// <summary>URL of the link.</summary>
                    [Newtonsoft.Json.JsonPropertyAttribute("url")]
                    public virtual string Url {
                        get {
                            return this.url;
                        }
                        set {
                            this.url = value;
                        }
                    }
                    
                    /// <summary>The width, in pixels, of the linked resource.</summary>
                    [Newtonsoft.Json.JsonPropertyAttribute("width")]
                    public virtual System.Nullable<long> Width {
                        get {
                            return this.width;
                        }
                        set {
                            this.width = value;
                        }
                    }
                }
            }
            
            /// <summary>People who +1&apos;d this activity.</summary>
            public class PlusonersData {
                
                private System.Nullable<long> totalItems;
                
                /// <summary>Total number of people who +1&apos;d this activity.</summary>
                [Newtonsoft.Json.JsonPropertyAttribute("totalItems")]
                public virtual System.Nullable<long> TotalItems {
                    get {
                        return this.totalItems;
                    }
                    set {
                        this.totalItems = value;
                    }
                }
            }
            
            /// <summary>Comments in reply to this activity.</summary>
            public class RepliesData {
                
                private System.Nullable<long> totalItems;
                
                /// <summary>Total number of comments on this activity.</summary>
                [Newtonsoft.Json.JsonPropertyAttribute("totalItems")]
                public virtual System.Nullable<long> TotalItems {
                    get {
                        return this.totalItems;
                    }
                    set {
                        this.totalItems = value;
                    }
                }
            }
            
            /// <summary>People who reshared this activity.</summary>
            public class ResharersData {
                
                private System.Nullable<long> totalItems;
                
                /// <summary>Total number of people who reshared this activity.</summary>
                [Newtonsoft.Json.JsonPropertyAttribute("totalItems")]
                public virtual System.Nullable<long> TotalItems {
                    get {
                        return this.totalItems;
                    }
                    set {
                        this.totalItems = value;
                    }
                }
            }
        }
        
        /// <summary>The service provider that initially published this activity.</summary>
        public class ProviderData {
            
            private string title;
            
            /// <summary>Name of the service provider.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("title")]
            public virtual string Title {
                get {
                    return this.title;
                }
                set {
                    this.title = value;
                }
            }
        }
    }
    
    public class ActivityFeed : Google.Apis.Requests.IDirectResponseSchema {
        
        private string id;
        
        private IList<Activity> items;
        
        private string kind;
        
        private string nextLink;
        
        private string nextPageToken;
        
        private string selfLink;
        
        private string title;
        
        private string updated;
        
        private Google.Apis.Requests.RequestError error;
        
        private string eTag;
        
        /// <summary>The ID of this collection of activities.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id {
            get {
                return this.id;
            }
            set {
                this.id = value;
            }
        }
        
        /// <summary>The activities in this page of results.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual IList<Activity> Items {
            get {
                return this.items;
            }
            set {
                this.items = value;
            }
        }
        
        /// <summary>Identifies this resource as a collection of activities. Value: &quot;plus#activityFeed&quot;.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this.kind;
            }
            set {
                this.kind = value;
            }
        }
        
        [Newtonsoft.Json.JsonPropertyAttribute("nextLink")]
        public virtual string NextLink {
            get {
                return this.nextLink;
            }
            set {
                this.nextLink = value;
            }
        }
        
        /// <summary>The continuation token, used to page through large result sets. Provide this value in a subsequent request to return the next page of results.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken {
            get {
                return this.nextPageToken;
            }
            set {
                this.nextPageToken = value;
            }
        }
        
        [Newtonsoft.Json.JsonPropertyAttribute("selfLink")]
        public virtual string SelfLink {
            get {
                return this.selfLink;
            }
            set {
                this.selfLink = value;
            }
        }
        
        /// <summary>The title of this collection of activities.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("title")]
        public virtual string Title {
            get {
                return this.title;
            }
            set {
                this.title = value;
            }
        }
        
        /// <summary>The time at which this collection of activities was last updated. Formatted as an RFC 3339 timestamp.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("updated")]
        public virtual string Updated {
            get {
                return this.updated;
            }
            set {
                this.updated = value;
            }
        }
        
        [Newtonsoft.Json.JsonPropertyAttribute("error")]
        public virtual Google.Apis.Requests.RequestError Error {
            get {
                return this.error;
            }
            set {
                this.error = value;
            }
        }
        
        public virtual string ETag {
            get {
                return this.eTag;
            }
            set {
                this.eTag = value;
            }
        }
    }
    
    public class Person : Google.Apis.Requests.IDirectResponseSchema {
        
        private string aboutMe;
        
        private string birthday;
        
        private string currentLocation;
        
        private string displayName;
        
        private IList<Person.EmailsData> emails;
        
        private string gender;
        
        private System.Nullable<bool> hasApp;
        
        private string id;
        
        private Person.ImageData image;
        
        private string kind;
        
        private IList<System.String> languagesSpoken;
        
        private Person.NameData name;
        
        private string nickname;
        
        private IList<Person.OrganizationsData> organizations;
        
        private IList<Person.PlacesLivedData> placesLived;
        
        private string relationshipStatus;
        
        private string tagline;
        
        private string url;
        
        private IList<Person.UrlsData> urls;
        
        private Google.Apis.Requests.RequestError error;
        
        private string eTag;
        
        /// <summary>A short biography for this person.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("aboutMe")]
        public virtual string AboutMe {
            get {
                return this.aboutMe;
            }
            set {
                this.aboutMe = value;
            }
        }
        
        /// <summary>The person&apos;s date of birth, represented as YYYY-MM-DD.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("birthday")]
        public virtual string Birthday {
            get {
                return this.birthday;
            }
            set {
                this.birthday = value;
            }
        }
        
        /// <summary>The current location for this person.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("currentLocation")]
        public virtual string CurrentLocation {
            get {
                return this.currentLocation;
            }
            set {
                this.currentLocation = value;
            }
        }
        
        /// <summary>The name of this person, suitable for display.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("displayName")]
        public virtual string DisplayName {
            get {
                return this.displayName;
            }
            set {
                this.displayName = value;
            }
        }
        
        /// <summary>A list of email addresses for this person.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("emails")]
        public virtual IList<Person.EmailsData> Emails {
            get {
                return this.emails;
            }
            set {
                this.emails = value;
            }
        }
        
        /// <summary>The person&apos;s gender. Possible values are:  
        ///- &quot;male&quot; - Male gender. 
        ///- &quot;female&quot; - Female gender. 
        ///- &quot;other&quot; - Other.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("gender")]
        public virtual string Gender {
            get {
                return this.gender;
            }
            set {
                this.gender = value;
            }
        }
        
        /// <summary>If &quot;true&quot;, indicates that the person has installed the app that is making the request and has chosen to expose this install state to the caller. A value of &quot;false&quot; indicates that the install state cannot be determined (it is either not installed or the person has chosen to keep this information private).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("hasApp")]
        public virtual System.Nullable<bool> HasApp {
            get {
                return this.hasApp;
            }
            set {
                this.hasApp = value;
            }
        }
        
        /// <summary>The ID of this person.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id {
            get {
                return this.id;
            }
            set {
                this.id = value;
            }
        }
        
        /// <summary>The representation of the person&apos;s profile photo.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("image")]
        public virtual Person.ImageData Image {
            get {
                return this.image;
            }
            set {
                this.image = value;
            }
        }
        
        /// <summary>Identifies this resource as a person. Value: &quot;plus#person&quot;.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this.kind;
            }
            set {
                this.kind = value;
            }
        }
        
        /// <summary>The languages spoken by this person.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("languagesSpoken")]
        public virtual IList<System.String> LanguagesSpoken {
            get {
                return this.languagesSpoken;
            }
            set {
                this.languagesSpoken = value;
            }
        }
        
        /// <summary>An object representation of the individual components of a person&apos;s name.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual Person.NameData Name {
            get {
                return this.name;
            }
            set {
                this.name = value;
            }
        }
        
        /// <summary>The nickname of this person.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nickname")]
        public virtual string Nickname {
            get {
                return this.nickname;
            }
            set {
                this.nickname = value;
            }
        }
        
        /// <summary>A list of current or past organizations with which this person is associated.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("organizations")]
        public virtual IList<Person.OrganizationsData> Organizations {
            get {
                return this.organizations;
            }
            set {
                this.organizations = value;
            }
        }
        
        /// <summary>A list of places where this person has lived.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("placesLived")]
        public virtual IList<Person.PlacesLivedData> PlacesLived {
            get {
                return this.placesLived;
            }
            set {
                this.placesLived = value;
            }
        }
        
        /// <summary>The person&apos;s relationship status. Possible values are:  
        ///- &quot;single&quot; - Person is single. 
        ///- &quot;in_a_relationship&quot; - Person is in a relationship. 
        ///- &quot;engaged&quot; - Person is engaged. 
        ///- &quot;married&quot; - Person is married. 
        ///- &quot;its_complicated&quot; - The relationship is complicated. 
        ///- &quot;open_relationship&quot; - Person is in an open relationship. 
        ///- &quot;widowed&quot; - Person is widowed. 
        ///- &quot;in_domestic_partnership&quot; - Person is in a domestic partnership. 
        ///- &quot;in_civil_union&quot; - Person is in a civil union.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("relationshipStatus")]
        public virtual string RelationshipStatus {
            get {
                return this.relationshipStatus;
            }
            set {
                this.relationshipStatus = value;
            }
        }
        
        /// <summary>The brief description (tagline) of this person.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("tagline")]
        public virtual string Tagline {
            get {
                return this.tagline;
            }
            set {
                this.tagline = value;
            }
        }
        
        /// <summary>The URL of this person&apos;s profile.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("url")]
        public virtual string Url {
            get {
                return this.url;
            }
            set {
                this.url = value;
            }
        }
        
        /// <summary>A list of URLs for this person.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("urls")]
        public virtual IList<Person.UrlsData> Urls {
            get {
                return this.urls;
            }
            set {
                this.urls = value;
            }
        }
        
        [Newtonsoft.Json.JsonPropertyAttribute("error")]
        public virtual Google.Apis.Requests.RequestError Error {
            get {
                return this.error;
            }
            set {
                this.error = value;
            }
        }
        
        public virtual string ETag {
            get {
                return this.eTag;
            }
            set {
                this.eTag = value;
            }
        }
        
        public class EmailsData {
            
            private System.Nullable<bool> primary;
            
            private string type;
            
            private string value;
            
            /// <summary>If &quot;true&quot;, indicates this email address is the person&apos;s primary one.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("primary")]
            public virtual System.Nullable<bool> Primary {
                get {
                    return this.primary;
                }
                set {
                    this.primary = value;
                }
            }
            
            /// <summary>The type of address. Possible values are:  
            ///- &quot;home&quot; - Home email address. 
            ///- &quot;work&quot; - Work email address. 
            ///- &quot;other&quot; - Other.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("type")]
            public virtual string Type {
                get {
                    return this.type;
                }
                set {
                    this.type = value;
                }
            }
            
            /// <summary>The email address.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("value")]
            public virtual string Value {
                get {
                    return this.value;
                }
                set {
                    this.value = value;
                }
            }
        }
        
        /// <summary>The representation of the person&apos;s profile photo.</summary>
        public class ImageData {
            
            private string url;
            
            /// <summary>The URL of the person&apos;s profile photo. To re-size the image and crop it to a square, append the query string ?sz=x, where x is the dimension in pixels of each side.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("url")]
            public virtual string Url {
                get {
                    return this.url;
                }
                set {
                    this.url = value;
                }
            }
        }
        
        /// <summary>An object representation of the individual components of a person&apos;s name.</summary>
        public class NameData {
            
            private string familyName;
            
            private string formatted;
            
            private string givenName;
            
            private string honorificPrefix;
            
            private string honorificSuffix;
            
            private string middleName;
            
            /// <summary>The family name (last name) of this person.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("familyName")]
            public virtual string FamilyName {
                get {
                    return this.familyName;
                }
                set {
                    this.familyName = value;
                }
            }
            
            /// <summary>The full name of this person, including middle names, suffixes, etc.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("formatted")]
            public virtual string Formatted {
                get {
                    return this.formatted;
                }
                set {
                    this.formatted = value;
                }
            }
            
            /// <summary>The given name (first name) of this person.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("givenName")]
            public virtual string GivenName {
                get {
                    return this.givenName;
                }
                set {
                    this.givenName = value;
                }
            }
            
            /// <summary>The honorific prefixes (such as &quot;Dr.&quot; or &quot;Mrs.&quot;) for this person.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("honorificPrefix")]
            public virtual string HonorificPrefix {
                get {
                    return this.honorificPrefix;
                }
                set {
                    this.honorificPrefix = value;
                }
            }
            
            /// <summary>The honorific suffixes (such as &quot;Jr.&quot;) for this person.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("honorificSuffix")]
            public virtual string HonorificSuffix {
                get {
                    return this.honorificSuffix;
                }
                set {
                    this.honorificSuffix = value;
                }
            }
            
            /// <summary>The middle name of this person.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("middleName")]
            public virtual string MiddleName {
                get {
                    return this.middleName;
                }
                set {
                    this.middleName = value;
                }
            }
        }
        
        public class OrganizationsData {
            
            private string department;
            
            private string description;
            
            private string endDate;
            
            private string location;
            
            private string name;
            
            private System.Nullable<bool> primary;
            
            private string startDate;
            
            private string title;
            
            private string type;
            
            /// <summary>The department within the organization.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("department")]
            public virtual string Department {
                get {
                    return this.department;
                }
                set {
                    this.department = value;
                }
            }
            
            /// <summary>A short description of the person&apos;s role in this organization.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("description")]
            public virtual string Description {
                get {
                    return this.description;
                }
                set {
                    this.description = value;
                }
            }
            
            /// <summary>The date the person left this organization.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("endDate")]
            public virtual string EndDate {
                get {
                    return this.endDate;
                }
                set {
                    this.endDate = value;
                }
            }
            
            /// <summary>The location of this organization.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("location")]
            public virtual string Location {
                get {
                    return this.location;
                }
                set {
                    this.location = value;
                }
            }
            
            /// <summary>The name of the organization.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("name")]
            public virtual string Name {
                get {
                    return this.name;
                }
                set {
                    this.name = value;
                }
            }
            
            /// <summary>If &quot;true&quot;, indicates this organization is the person&apos;s primary one (typically interpreted as current one).</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("primary")]
            public virtual System.Nullable<bool> Primary {
                get {
                    return this.primary;
                }
                set {
                    this.primary = value;
                }
            }
            
            /// <summary>The date the person joined this organization.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("startDate")]
            public virtual string StartDate {
                get {
                    return this.startDate;
                }
                set {
                    this.startDate = value;
                }
            }
            
            /// <summary>The person&apos;s job title or role within the organization.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("title")]
            public virtual string Title {
                get {
                    return this.title;
                }
                set {
                    this.title = value;
                }
            }
            
            /// <summary>The type of organization. Possible values are:  
            ///- &quot;job&quot; - Job. 
            ///- &quot;school&quot; - School.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("type")]
            public virtual string Type {
                get {
                    return this.type;
                }
                set {
                    this.type = value;
                }
            }
        }
        
        public class PlacesLivedData {
            
            private System.Nullable<bool> primary;
            
            private string value;
            
            /// <summary>If &quot;true&quot;, this place of residence is this person&apos;s primary residence.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("primary")]
            public virtual System.Nullable<bool> Primary {
                get {
                    return this.primary;
                }
                set {
                    this.primary = value;
                }
            }
            
            /// <summary>A place where this person has lived. For example: &quot;Seattle, WA&quot;, &quot;Near Toronto&quot;.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("value")]
            public virtual string Value {
                get {
                    return this.value;
                }
                set {
                    this.value = value;
                }
            }
        }
        
        public class UrlsData {
            
            private System.Nullable<bool> primary;
            
            private string type;
            
            private string value;
            
            /// <summary>If &quot;true&quot;, this URL is the person&apos;s primary URL.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("primary")]
            public virtual System.Nullable<bool> Primary {
                get {
                    return this.primary;
                }
                set {
                    this.primary = value;
                }
            }
            
            /// <summary>The type of URL. Possible values are:  
            ///- &quot;home&quot; - URL for home. 
            ///- &quot;work&quot; - URL for work. 
            ///- &quot;blog&quot; - URL for blog. 
            ///- &quot;profile&quot; - URL for profile. 
            ///- &quot;other&quot; - Other.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("type")]
            public virtual string Type {
                get {
                    return this.type;
                }
                set {
                    this.type = value;
                }
            }
            
            /// <summary>The URL value.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("value")]
            public virtual string Value {
                get {
                    return this.value;
                }
                set {
                    this.value = value;
                }
            }
        }
    }
    
    public class PlusAclentryResource {
        
        private string id;
        
        private string type;
        
        /// <summary>The ID of the entry. For entries of type &quot;person&quot; or &quot;circle&quot;, this is the ID of the resource. For other types, this property is not set.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id {
            get {
                return this.id;
            }
            set {
                this.id = value;
            }
        }
        
        /// <summary>The type of entry describing to whom access is granted. Possible values are:  
        ///- &quot;person&quot; - Access to an individual. 
        ///- &quot;circle&quot; - Access to members of a circle. 
        ///- &quot;myCircles&quot; - Access to members of all the person&apos;s circles. 
        ///- &quot;extendedCircles&quot; - Access to members of everyone in a person&apos;s circles, plus all of the people in their circles. 
        ///- &quot;public&quot; - Access to anyone on the web.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("type")]
        public virtual string Type {
            get {
                return this.type;
            }
            set {
                this.type = value;
            }
        }
    }
}
namespace Google.Apis.Plus.v1 {
    using System;
    using System.IO;
    using System.Collections.Generic;
    using Google.Apis;
    using Google.Apis.Discovery;
    
    
    public partial class PlusService : Google.Apis.Discovery.IRequestProvider {
        
        private Google.Apis.Discovery.IService genericService;
        
        private Google.Apis.Authentication.IAuthenticator authenticator;
        
        private const string DiscoveryDocument = "{\"kind\":\"discovery#restDescription\",\"id\":\"plus:v1\",\"name\":\"plus\",\"version\":\"v1\",\"" +
            "description\":\"Google+ API\",\"icons\":{\"x16\":\"http://www.google.com/images/icons/pr" +
            "oduct/search-16.gif\",\"x32\":\"http://www.google.com/images/icons/product/search-32" +
            ".gif\"},\"labels\":[\"labs\"],\"protocol\":\"rest\",\"basePath\":\"/plus/v1/\",\"parameters\":{" +
            "\"alt\":{\"type\":\"string\",\"description\":\"Data format for the response.\",\"default\":\"" +
            "json\",\"enum\":[\"json\"],\"enumDescriptions\":[\"Responses with Content-Type of applic" +
            "ation/json\"],\"location\":\"query\"},\"fields\":{\"type\":\"string\",\"description\":\"Select" +
            "or specifying which fields to include in a partial response.\",\"location\":\"query\"" +
            "},\"key\":{\"type\":\"string\",\"description\":\"API key. Your API key identifies your pr" +
            "oject and provides you with API access, quota, and reports. Required unless you " +
            "provide an OAuth 2.0 token.\",\"location\":\"query\"},\"oauth_token\":{\"type\":\"string\"," +
            "\"description\":\"OAuth 2.0 token for the current user.\",\"location\":\"query\"},\"prett" +
            "yPrint\":{\"type\":\"boolean\",\"description\":\"Returns response with indentations and " +
            "line breaks.\",\"default\":\"true\",\"location\":\"query\"},\"userIp\":{\"type\":\"string\",\"de" +
            "scription\":\"IP address of the site where the request originates. Use this if you" +
            " want to enforce per-user limits.\",\"location\":\"query\"}},\"auth\":{\"oauth2\":{\"scope" +
            "s\":{\"https://www.googleapis.com/auth/plus.me\":{\"description\":\"View your Google+ " +
            "information\"}}}},\"schemas\":{\"Acl\":{\"id\":\"Acl\",\"type\":\"object\",\"properties\":{\"des" +
            "cription\":{\"type\":\"string\",\"description\":\"Description of the access granted, sui" +
            "table for display.\"},\"items\":{\"type\":\"array\",\"description\":\"The list of access e" +
            "ntries.\",\"items\":{\"$ref\":\"PlusAclentryResource\"}},\"kind\":{\"type\":\"string\",\"defau" +
            "lt\":\"plus#acl\"}}},\"Activity\":{\"id\":\"Activity\",\"type\":\"object\",\"properties\":{\"acc" +
            "ess\":{\"$ref\":\"Acl\",\"description\":\"Identifies who has access to see this activity" +
            ".\"},\"actor\":{\"type\":\"object\",\"description\":\"The person who performed this activi" +
            "ty.\",\"properties\":{\"displayName\":{\"type\":\"string\",\"description\":\"The name of the" +
            " actor, suitable for display.\"},\"id\":{\"type\":\"string\",\"description\":\"The ID of t" +
            "he actor\'s person resource.\"},\"image\":{\"type\":\"object\",\"description\":\"The image " +
            "representation of the actor.\",\"properties\":{\"url\":{\"type\":\"string\",\"description\"" +
            ":\"The URL of the actor\'s profile photo. To re-size the image and crop it to a sq" +
            "uare, append the query string ?sz=x, where x is the dimension in pixels of each " +
            "side.\"}}},\"url\":{\"type\":\"string\",\"description\":\"The link to the actor\'s Google p" +
            "rofile.\"}}},\"address\":{\"type\":\"string\",\"description\":\"Street address where this " +
            "activity occurred.\"},\"annotation\":{\"type\":\"string\",\"description\":\"Additional con" +
            "tent added by the person who shared this activity, applicable only when resharin" +
            "g an activity.\"},\"crosspostSource\":{\"type\":\"string\",\"description\":\"If this activ" +
            "ity is a crosspost from another system, this property specifies the ID of the or" +
            "iginal activity.\"},\"geocode\":{\"type\":\"string\",\"description\":\"Latitude and longit" +
            "ude where this activity occurred. Format is latitude followed by longitude, spac" +
            "e separated.\"},\"id\":{\"type\":\"string\",\"description\":\"The ID of this activity.\"},\"" +
            "kind\":{\"type\":\"string\",\"description\":\"Identifies this resource as an activity. V" +
            "alue: \\\"plus#activity\\\".\",\"default\":\"plus#activity\"},\"object\":{\"type\":\"object\",\"" +
            "description\":\"The object of this activity.\",\"properties\":{\"actor\":{\"type\":\"objec" +
            "t\",\"description\":\"If this activity\'s object is itself another activity (for exam" +
            "ple, when a person reshares an activity), this property specifies the original a" +
            "ctivity\'s actor.\",\"properties\":{\"displayName\":{\"type\":\"string\",\"description\":\"Th" +
            "e original actor\'s name, suitable for display.\"},\"id\":{\"type\":\"string\",\"descript" +
            "ion\":\"ID of the original actor.\"},\"image\":{\"type\":\"object\",\"description\":\"The im" +
            "age representation of the original actor.\",\"properties\":{\"url\":{\"type\":\"string\"," +
            "\"description\":\"A URL that points to a thumbnail photo of the original actor.\"}}}" +
            ",\"url\":{\"type\":\"string\",\"description\":\"A link to the original actor\'s Google pro" +
            "file.\"}}},\"attachments\":{\"type\":\"array\",\"description\":\"The media objects attache" +
            "d to this activity.\",\"items\":{\"type\":\"object\",\"properties\":{\"content\":{\"type\":\"s" +
            "tring\",\"description\":\"If the attachment is an article, this property contains a " +
            "snippet of text from the article.\"},\"displayName\":{\"type\":\"string\",\"description\"" +
            ":\"The title of the attachment (such as a photo caption or an article title).\"},\"" +
            "embed\":{\"type\":\"object\",\"description\":\"If the attachment is a video, the embedda" +
            "ble link.\",\"properties\":{\"type\":{\"type\":\"string\",\"description\":\"Media type of th" +
            "e link.\"},\"url\":{\"type\":\"string\",\"description\":\"URL of the link.\"}}},\"fullImage\"" +
            ":{\"type\":\"object\",\"description\":\"The full image url for photo attachments.\",\"pro" +
            "perties\":{\"height\":{\"type\":\"integer\",\"description\":\"The height, in pixels, of th" +
            "e linked resource.\",\"format\":\"uint32\"},\"type\":{\"type\":\"string\",\"description\":\"Me" +
            "dia type of the link.\"},\"url\":{\"type\":\"string\",\"description\":\"URL of the link.\"}" +
            ",\"width\":{\"type\":\"integer\",\"description\":\"The width, in pixels, of the linked re" +
            "source.\",\"format\":\"uint32\"}}},\"id\":{\"type\":\"string\",\"description\":\"The ID of the" +
            " media object\'s resource.\"},\"image\":{\"type\":\"object\",\"description\":\"The preview " +
            "image for photos or videos.\",\"properties\":{\"height\":{\"type\":\"integer\",\"descripti" +
            "on\":\"The height, in pixels, of the linked resource.\",\"format\":\"uint32\"},\"type\":{" +
            "\"type\":\"string\",\"description\":\"Media type of the link.\"},\"url\":{\"type\":\"string\"," +
            "\"description\":\"URL of the link.\"},\"width\":{\"type\":\"integer\",\"description\":\"The w" +
            "idth, in pixels, of the linked resource.\",\"format\":\"uint32\"}}},\"objectType\":{\"ty" +
            "pe\":\"string\",\"description\":\"The type of media object. Possible values are:  \\n- " +
            "\\\"photo\\\" - A photo. \\n- \\\"video\\\" - A video. \\n- \\\"article\\\" - An article, spec" +
            "ified by a link.\"},\"url\":{\"type\":\"string\",\"description\":\"The link to the attachm" +
            "ent, should be of type text/html.\"}}}},\"content\":{\"type\":\"string\",\"description\":" +
            "\"The HTML-formatted content, suitable for display. When creating or updating an " +
            "activity, this value must be supplied as plain text in the request. If successfu" +
            "l, the response will contain the HTML-formatted content. When updating an activi" +
            "ty, use originalContent as the starting value, then assign the updated text to t" +
            "his property.\"},\"id\":{\"type\":\"string\",\"description\":\"The ID of the object. When " +
            "resharing an activity, this is the ID of the activity being reshared.\"},\"objectT" +
            "ype\":{\"type\":\"string\",\"description\":\"The type of the object. Possible values are" +
            ":  \\n- \\\"note\\\" - Textual content. \\n- \\\"activity\\\" - A Google+ activity.\"},\"ori" +
            "ginalContent\":{\"type\":\"string\",\"description\":\"The content (text) as provided by " +
            "the author, stored without any HTML formatting. When updating an activity\'s cont" +
            "ent, use the value of originalContent as the starting point from which to make e" +
            "dits.\"},\"plusoners\":{\"type\":\"object\",\"description\":\"People who +1\'d this activit" +
            "y.\",\"properties\":{\"totalItems\":{\"type\":\"integer\",\"description\":\"Total number of " +
            "people who +1\'d this activity.\",\"format\":\"uint32\"}}},\"replies\":{\"type\":\"object\"," +
            "\"description\":\"Comments in reply to this activity.\",\"properties\":{\"totalItems\":{" +
            "\"type\":\"integer\",\"description\":\"Total number of comments on this activity.\",\"for" +
            "mat\":\"uint32\"}}},\"resharers\":{\"type\":\"object\",\"description\":\"People who reshared" +
            " this activity.\",\"properties\":{\"totalItems\":{\"type\":\"integer\",\"description\":\"Tot" +
            "al number of people who reshared this activity.\",\"format\":\"uint32\"}}},\"url\":{\"ty" +
            "pe\":\"string\",\"description\":\"The URL that points to the linked resource.\"}}},\"pla" +
            "ceId\":{\"type\":\"string\",\"description\":\"ID of the place where this activity occurr" +
            "ed.\"},\"placeName\":{\"type\":\"string\",\"description\":\"Name of the place where this a" +
            "ctivity occurred.\"},\"placeholder\":{\"type\":\"boolean\"},\"provider\":{\"type\":\"object\"" +
            ",\"description\":\"The service provider that initially published this activity.\",\"p" +
            "roperties\":{\"title\":{\"type\":\"string\",\"description\":\"Name of the service provider" +
            ".\"}}},\"published\":{\"type\":\"string\",\"description\":\"The time at which this activit" +
            "y was initially published. Formatted as an RFC 3339 timestamp.\",\"format\":\"date-t" +
            "ime\"},\"radius\":{\"type\":\"string\",\"description\":\"Radius, in meters, of the region " +
            "where this activity occurred, centered at the latitude and longitude identified " +
            "in geocode.\"},\"title\":{\"type\":\"string\",\"description\":\"Title of this activity.\"}," +
            "\"updated\":{\"type\":\"string\",\"description\":\"The time at which this activity was la" +
            "st updated. Formatted as an RFC 3339 timestamp.\",\"format\":\"date-time\"},\"url\":{\"t" +
            "ype\":\"string\"},\"verb\":{\"type\":\"string\",\"description\":\"This activity\'s verb, indi" +
            "cating what action was performed. Possible values are:  \\n- \\\"post\\\" - Publish c" +
            "ontent to the stream. \\n- \\\"checkin\\\" - Check in to a location. \\n- \\\"share\\\" - " +
            "Reshare an activity.\"}}},\"ActivityFeed\":{\"id\":\"ActivityFeed\",\"type\":\"object\",\"pr" +
            "operties\":{\"id\":{\"type\":\"string\",\"description\":\"The ID of this collection of act" +
            "ivities.\"},\"items\":{\"type\":\"array\",\"description\":\"The activities in this page of" +
            " results.\",\"items\":{\"$ref\":\"Activity\"}},\"kind\":{\"type\":\"string\",\"description\":\"I" +
            "dentifies this resource as a collection of activities. Value: \\\"plus#activityFee" +
            "d\\\".\",\"default\":\"plus#activityFeed\"},\"nextLink\":{\"type\":\"string\"},\"nextPageToken" +
            "\":{\"type\":\"string\",\"description\":\"The continuation token, used to page through l" +
            "arge result sets. Provide this value in a subsequent request to return the next " +
            "page of results.\"},\"selfLink\":{\"type\":\"string\"},\"title\":{\"type\":\"string\",\"descri" +
            "ption\":\"The title of this collection of activities.\"},\"updated\":{\"type\":\"string\"" +
            ",\"description\":\"The time at which this collection of activities was last updated" +
            ". Formatted as an RFC 3339 timestamp.\",\"format\":\"date-time\"}}},\"Person\":{\"id\":\"P" +
            "erson\",\"type\":\"object\",\"properties\":{\"aboutMe\":{\"type\":\"string\",\"description\":\"A" +
            " short biography for this person.\"},\"birthday\":{\"type\":\"string\",\"description\":\"T" +
            "he person\'s date of birth, represented as YYYY-MM-DD.\"},\"currentLocation\":{\"type" +
            "\":\"string\",\"description\":\"The current location for this person.\"},\"displayName\":" +
            "{\"type\":\"string\",\"description\":\"The name of this person, suitable for display.\"}" +
            ",\"emails\":{\"type\":\"array\",\"description\":\"A list of email addresses for this pers" +
            "on.\",\"items\":{\"type\":\"object\",\"properties\":{\"primary\":{\"type\":\"boolean\",\"descrip" +
            "tion\":\"If \\\"true\\\", indicates this email address is the person\'s primary one.\"}," +
            "\"type\":{\"type\":\"string\",\"description\":\"The type of address. Possible values are:" +
            "  \\n- \\\"home\\\" - Home email address. \\n- \\\"work\\\" - Work email address. \\n- \\\"ot" +
            "her\\\" - Other.\"},\"value\":{\"type\":\"string\",\"description\":\"The email address.\"}}}}" +
            ",\"gender\":{\"type\":\"string\",\"description\":\"The person\'s gender. Possible values a" +
            "re:  \\n- \\\"male\\\" - Male gender. \\n- \\\"female\\\" - Female gender. \\n- \\\"other\\\" -" +
            " Other.\"},\"hasApp\":{\"type\":\"boolean\",\"description\":\"If \\\"true\\\", indicates that " +
            "the person has installed the app that is making the request and has chosen to ex" +
            "pose this install state to the caller. A value of \\\"false\\\" indicates that the i" +
            "nstall state cannot be determined (it is either not installed or the person has " +
            "chosen to keep this information private).\"},\"id\":{\"type\":\"string\",\"description\":" +
            "\"The ID of this person.\"},\"image\":{\"type\":\"object\",\"description\":\"The representa" +
            "tion of the person\'s profile photo.\",\"properties\":{\"url\":{\"type\":\"string\",\"descr" +
            "iption\":\"The URL of the person\'s profile photo. To re-size the image and crop it" +
            " to a square, append the query string ?sz=x, where x is the dimension in pixels " +
            "of each side.\"}}},\"kind\":{\"type\":\"string\",\"description\":\"Identifies this resourc" +
            "e as a person. Value: \\\"plus#person\\\".\",\"default\":\"plus#person\"},\"languagesSpoke" +
            "n\":{\"type\":\"array\",\"description\":\"The languages spoken by this person.\",\"items\":" +
            "{\"type\":\"string\"}},\"name\":{\"type\":\"object\",\"description\":\"An object representati" +
            "on of the individual components of a person\'s name.\",\"properties\":{\"familyName\":" +
            "{\"type\":\"string\",\"description\":\"The family name (last name) of this person.\"},\"f" +
            "ormatted\":{\"type\":\"string\",\"description\":\"The full name of this person, includin" +
            "g middle names, suffixes, etc.\"},\"givenName\":{\"type\":\"string\",\"description\":\"The" +
            " given name (first name) of this person.\"},\"honorificPrefix\":{\"type\":\"string\",\"d" +
            "escription\":\"The honorific prefixes (such as \\\"Dr.\\\" or \\\"Mrs.\\\") for this perso" +
            "n.\"},\"honorificSuffix\":{\"type\":\"string\",\"description\":\"The honorific suffixes (s" +
            "uch as \\\"Jr.\\\") for this person.\"},\"middleName\":{\"type\":\"string\",\"description\":\"" +
            "The middle name of this person.\"}}},\"nickname\":{\"type\":\"string\",\"description\":\"T" +
            "he nickname of this person.\"},\"organizations\":{\"type\":\"array\",\"description\":\"A l" +
            "ist of current or past organizations with which this person is associated.\",\"ite" +
            "ms\":{\"type\":\"object\",\"properties\":{\"department\":{\"type\":\"string\",\"description\":\"" +
            "The department within the organization.\"},\"description\":{\"type\":\"string\",\"descri" +
            "ption\":\"A short description of the person\'s role in this organization.\"},\"endDat" +
            "e\":{\"type\":\"string\",\"description\":\"The date the person left this organization.\"}" +
            ",\"location\":{\"type\":\"string\",\"description\":\"The location of this organization.\"}" +
            ",\"name\":{\"type\":\"string\",\"description\":\"The name of the organization.\"},\"primary" +
            "\":{\"type\":\"boolean\",\"description\":\"If \\\"true\\\", indicates this organization is t" +
            "he person\'s primary one (typically interpreted as current one).\"},\"startDate\":{\"" +
            "type\":\"string\",\"description\":\"The date the person joined this organization.\"},\"t" +
            "itle\":{\"type\":\"string\",\"description\":\"The person\'s job title or role within the " +
            "organization.\"},\"type\":{\"type\":\"string\",\"description\":\"The type of organization." +
            " Possible values are:  \\n- \\\"job\\\" - Job. \\n- \\\"school\\\" - School.\"}}}},\"placesL" +
            "ived\":{\"type\":\"array\",\"description\":\"A list of places where this person has live" +
            "d.\",\"items\":{\"type\":\"object\",\"properties\":{\"primary\":{\"type\":\"boolean\",\"descript" +
            "ion\":\"If \\\"true\\\", this place of residence is this person\'s primary residence.\"}" +
            ",\"value\":{\"type\":\"string\",\"description\":\"A place where this person has lived. Fo" +
            "r example: \\\"Seattle, WA\\\", \\\"Near Toronto\\\".\"}}}},\"relationshipStatus\":{\"type\":" +
            "\"string\",\"description\":\"The person\'s relationship status. Possible values are:  " +
            "\\n- \\\"single\\\" - Person is single. \\n- \\\"in_a_relationship\\\" - Person is in a re" +
            "lationship. \\n- \\\"engaged\\\" - Person is engaged. \\n- \\\"married\\\" - Person is mar" +
            "ried. \\n- \\\"its_complicated\\\" - The relationship is complicated. \\n- \\\"open_rela" +
            "tionship\\\" - Person is in an open relationship. \\n- \\\"widowed\\\" - Person is wido" +
            "wed. \\n- \\\"in_domestic_partnership\\\" - Person is in a domestic partnership. \\n- " +
            "\\\"in_civil_union\\\" - Person is in a civil union.\"},\"tagline\":{\"type\":\"string\",\"d" +
            "escription\":\"The brief description (tagline) of this person.\"},\"url\":{\"type\":\"st" +
            "ring\",\"description\":\"The URL of this person\'s profile.\"},\"urls\":{\"type\":\"array\"," +
            "\"description\":\"A list of URLs for this person.\",\"items\":{\"type\":\"object\",\"proper" +
            "ties\":{\"primary\":{\"type\":\"boolean\",\"description\":\"If \\\"true\\\", this URL is the p" +
            "erson\'s primary URL.\"},\"type\":{\"type\":\"string\",\"description\":\"The type of URL. P" +
            "ossible values are:  \\n- \\\"home\\\" - URL for home. \\n- \\\"work\\\" - URL for work. \\" +
            "n- \\\"blog\\\" - URL for blog. \\n- \\\"profile\\\" - URL for profile. \\n- \\\"other\\\" - O" +
            "ther.\"},\"value\":{\"type\":\"string\",\"description\":\"The URL value.\"}}}}}},\"PlusAclen" +
            "tryResource\":{\"id\":\"PlusAclentryResource\",\"type\":\"object\",\"properties\":{\"id\":{\"t" +
            "ype\":\"string\",\"description\":\"The ID of the entry. For entries of type \\\"person\\\"" +
            " or \\\"circle\\\", this is the ID of the resource. For other types, this property i" +
            "s not set.\"},\"type\":{\"type\":\"string\",\"description\":\"The type of entry describing" +
            " to whom access is granted. Possible values are:  \\n- \\\"person\\\" - Access to an " +
            "individual. \\n- \\\"circle\\\" - Access to members of a circle. \\n- \\\"myCircles\\\" - " +
            "Access to members of all the person\'s circles. \\n- \\\"extendedCircles\\\" - Access " +
            "to members of everyone in a person\'s circles, plus all of the people in their ci" +
            "rcles. \\n- \\\"public\\\" - Access to anyone on the web.\"}}}},\"resources\":{\"activiti" +
            "es\":{\"methods\":{\"get\":{\"id\":\"plus.activities.get\",\"path\":\"activities/{activityId" +
            "}\",\"httpMethod\":\"GET\",\"description\":\"Get an activity.\",\"parameters\":{\"activityId" +
            "\":{\"type\":\"string\",\"description\":\"The ID of the activity to get.\",\"required\":tru" +
            "e,\"location\":\"path\"},\"alt\":{\"type\":\"string\",\"description\":\"Specifies an alternat" +
            "ive representation type.\",\"default\":\"json\",\"enum\":[\"json\"],\"enumDescriptions\":[\"" +
            "Use JSON format\"],\"location\":\"query\"}},\"parameterOrder\":[\"activityId\"],\"response" +
            "\":{\"$ref\":\"Activity\"},\"scopes\":[\"https://www.googleapis.com/auth/plus.me\"]},\"lis" +
            "t\":{\"id\":\"plus.activities.list\",\"path\":\"people/{userId}/activities/{collection}\"" +
            ",\"httpMethod\":\"GET\",\"description\":\"List all of the activities in the specified c" +
            "ollection for a particular user.\",\"parameters\":{\"alt\":{\"type\":\"string\",\"descript" +
            "ion\":\"Specifies an alternative representation type.\",\"default\":\"json\",\"enum\":[\"j" +
            "son\"],\"enumDescriptions\":[\"Use JSON format\"],\"location\":\"query\"},\"collection\":{\"" +
            "type\":\"string\",\"description\":\"The collection of activities to list.\",\"required\":" +
            "true,\"enum\":[\"public\"],\"enumDescriptions\":[\"All public activities created by the" +
            " specified user.\"],\"location\":\"path\"},\"maxResults\":{\"type\":\"integer\",\"descriptio" +
            "n\":\"The maximum number of activities to include in the response, used for paging" +
            ". For any response, the actual number returned may be less than the specified ma" +
            "xResults.\",\"default\":\"20\",\"format\":\"uint32\",\"minimum\":\"1\",\"maximum\":\"100\",\"locat" +
            "ion\":\"query\"},\"pageToken\":{\"type\":\"string\",\"description\":\"The continuation token" +
            ", used to page through large result sets. To get the next page of results, set t" +
            "his parameter to the value of \\\"nextPageToken\\\" from the previous response.\",\"lo" +
            "cation\":\"query\"},\"userId\":{\"type\":\"string\",\"description\":\"The ID of the user to " +
            "get activities for. The special value \\\"me\\\" can be used to indicate the authent" +
            "icated user.\",\"required\":true,\"pattern\":\"me|[0-9]+\",\"location\":\"path\"}},\"paramet" +
            "erOrder\":[\"userId\",\"collection\"],\"response\":{\"$ref\":\"ActivityFeed\"},\"scopes\":[\"h" +
            "ttps://www.googleapis.com/auth/plus.me\"]}}},\"people\":{\"methods\":{\"get\":{\"id\":\"pl" +
            "us.people.get\",\"path\":\"people/{userId}\",\"httpMethod\":\"GET\",\"description\":\"Get a " +
            "person\'s profile.\",\"parameters\":{\"userId\":{\"type\":\"string\",\"description\":\"The ID" +
            " of the person to get the profile for. The special value \\\"me\\\" can be used to i" +
            "ndicate the authenticated user.\",\"required\":true,\"pattern\":\"me|[0-9]+\",\"location" +
            "\":\"path\"}},\"parameterOrder\":[\"userId\"],\"response\":{\"$ref\":\"Person\"},\"scopes\":[\"h" +
            "ttps://www.googleapis.com/auth/plus.me\"]}}}}}";
        
        private const string Version = "v1";
        
        private const string Name = "plus";
        
        private const string BaseUri = "https://www.googleapis.com/plus/v1/";
        
        private const Google.Apis.Discovery.DiscoveryVersion DiscoveryVersionUsed = Google.Apis.Discovery.DiscoveryVersion.Version_1_0;
        
        private string key;
        
        protected PlusService(Google.Apis.Discovery.IService genericService, Google.Apis.Authentication.IAuthenticator authenticator) {
            this.genericService = genericService;
            this.authenticator = authenticator;
            this.activities = new ActivitiesResource(this);
            this.people = new PeopleResource(this);
        }
        
        public PlusService() : 
                this(Google.Apis.Authentication.NullAuthenticator.Instance) {
        }
        
        public PlusService(Google.Apis.Authentication.IAuthenticator authenticator) : 
                this(new Google.Apis.Discovery.DiscoveryService(new Google.Apis.Discovery.StringDiscoveryDevice(DiscoveryDocument)).GetService(PlusService.DiscoveryVersionUsed, new Google.Apis.Discovery.FactoryParameterV1_0(new System.Uri(PlusService.BaseUri))), authenticator) {
        }
        
        /// <summary>Sets the API-Key (or DeveloperKey) which this service uses for all requests</summary>
        public virtual string Key {
            get {
                return this.key;
            }
            set {
                this.key = value;
            }
        }
        
        public virtual Google.Apis.Requests.IRequest CreateRequest(string resource, string method) {
            Google.Apis.Requests.IRequest request = this.genericService.CreateRequest(resource, method);
            if (!string.IsNullOrEmpty(Key)) {
                request = request.WithKey(this.Key);
            }
            return request.WithAuthentication(authenticator);
        }
        
        public virtual void RegisterSerializer(Google.Apis.ISerializer serializer) {
            genericService.Serializer = serializer;
        }
        
        public virtual string SerializeObject(object obj) {
            return genericService.SerializeRequest(obj);
        }
        
        public virtual T DeserializeResponse<T>(Google.Apis.Requests.IResponse response)
         {
            return genericService.DeserializeResponse<T>(response);
        }
        
        /// <summary>A list of all OAuth2.0 scopes. Each of these scopes relates to a permission or group of permissions that different methods of this API may need.</summary>
        public enum Scopes {
            
            /// <summary>View your Google+ information</summary>
            [Google.Apis.Util.StringValueAttribute("https://www.googleapis.com/auth/plus.me")]
            PlusMe,
        }
    }
    
    public class ActivitiesResource {
        
        private Google.Apis.Discovery.IRequestProvider service;
        
        private const string Resource = "activities";
        
        public ActivitiesResource(PlusService service) {
            this.service = service;
        }
        
        /// <summary>Get an activity.</summary>
        /// <param name="activityId">Required - The ID of the activity to get.</param>
        public virtual GetRequest Get(string activityId) {
            return new GetRequest(service, activityId);
        }
        
        /// <summary>List all of the activities in the specified collection for a particular user.</summary>
        /// <param name="userId">Required - Must match pattern me|[0-9]+ - The ID of the user to get activities for. The special value &quot;me&quot; can be used to indicate the authenticated user.</param>
        /// <param name="collection">Required - Must be one of the following values [public] - The collection of activities to list.</param>
        public virtual ListRequest List(string userId, Collection collection) {
            return new ListRequest(service, userId, collection);
        }
        
        /// <summary>Specifies an alternative representation type.</summary>
        [System.ComponentModel.TypeConverterAttribute(typeof(Google.Apis.Util.EnumStringValueTypeConverter))]
        public enum Alt {
            
            /// <summary>Use JSON format</summary>
            [Google.Apis.Util.StringValueAttribute("json")]
            Json,
        }
        
        /// <summary>The collection of activities to list.</summary>
        [System.ComponentModel.TypeConverterAttribute(typeof(Google.Apis.Util.EnumStringValueTypeConverter))]
        public enum Collection {
            
            /// <summary>All public activities created by the specified user.</summary>
            [Google.Apis.Util.StringValueAttribute("public")]
            Public,
        }
        
        public class GetRequest : Google.Apis.Requests.ServiceRequest<Google.Apis.Plus.v1.Data.Activity> {
            
            private string activityId;
            
            private Alt? alt;
            
            public GetRequest(Google.Apis.Discovery.IRequestProvider service, string activityId) : 
                    base(service) {
                this.activityId = activityId;
            }
            
            /// <summary>The ID of the activity to get.</summary>
            [Google.Apis.Util.RequestParameterAttribute("activityId")]
            public virtual string ActivityId {
                get {
                    return this.activityId;
                }
            }
            
            /// <summary>Specifies an alternative representation type.</summary>
            [Google.Apis.Util.RequestParameterAttribute("alt")]
            public virtual Alt? Alt {
                get {
                    return this.alt;
                }
                set {
                    this.alt = value;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "activities";
                }
            }
            
            protected override string MethodName {
                get {
                    return "get";
                }
            }
        }
        
        public class ListRequest : Google.Apis.Requests.ServiceRequest<Google.Apis.Plus.v1.Data.ActivityFeed> {
            
            private Alt? alt;
            
            private Collection collection;
            
            private System.Int64? maxResults;
            
            private string pageToken;
            
            private string userId;
            
            public ListRequest(Google.Apis.Discovery.IRequestProvider service, string userId, Collection collection) : 
                    base(service) {
                this.userId = userId;
                this.collection = collection;
            }
            
            /// <summary>Specifies an alternative representation type.</summary>
            [Google.Apis.Util.RequestParameterAttribute("alt")]
            public virtual Alt? Alt {
                get {
                    return this.alt;
                }
                set {
                    this.alt = value;
                }
            }
            
            /// <summary>The collection of activities to list.</summary>
            [Google.Apis.Util.RequestParameterAttribute("collection")]
            public virtual Collection Collection {
                get {
                    return this.collection;
                }
            }
            
            /// <summary>The maximum number of activities to include in the response, used for paging. For any response, the actual number returned may be less than the specified maxResults.</summary>
            [Google.Apis.Util.RequestParameterAttribute("maxResults")]
            public virtual System.Int64? MaxResults {
                get {
                    return this.maxResults;
                }
                set {
                    this.maxResults = value;
                }
            }
            
            /// <summary>The continuation token, used to page through large result sets. To get the next page of results, set this parameter to the value of "nextPageToken" from the previous response.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken")]
            public virtual string PageToken {
                get {
                    return this.pageToken;
                }
                set {
                    this.pageToken = value;
                }
            }
            
            /// <summary>The ID of the user to get activities for. The special value "me" can be used to indicate the authenticated user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("userId")]
            public virtual string UserId {
                get {
                    return this.userId;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "activities";
                }
            }
            
            protected override string MethodName {
                get {
                    return "list";
                }
            }
        }
    }
    
    public class PeopleResource {
        
        private Google.Apis.Discovery.IRequestProvider service;
        
        private const string Resource = "people";
        
        public PeopleResource(PlusService service) {
            this.service = service;
        }
        
        /// <summary>Get a person&apos;s profile.</summary>
        /// <param name="userId">Required - Must match pattern me|[0-9]+ - The ID of the person to get the profile for. The special value &quot;me&quot; can be used to indicate the authenticated user.</param>
        public virtual GetRequest Get(string userId) {
            return new GetRequest(service, userId);
        }
        
        public class GetRequest : Google.Apis.Requests.ServiceRequest<Google.Apis.Plus.v1.Data.Person> {
            
            private string userId;
            
            public GetRequest(Google.Apis.Discovery.IRequestProvider service, string userId) : 
                    base(service) {
                this.userId = userId;
            }
            
            /// <summary>The ID of the person to get the profile for. The special value "me" can be used to indicate the authenticated user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("userId")]
            public virtual string UserId {
                get {
                    return this.userId;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "people";
                }
            }
            
            protected override string MethodName {
                get {
                    return "get";
                }
            }
        }
    }
    
    public partial class PlusService {
        
        private const string Resource = "";
        
        private ActivitiesResource activities;
        
        private PeopleResource people;
        
        private Google.Apis.Discovery.IRequestProvider service {
            get {
                return this;
            }
        }
        
        public virtual ActivitiesResource Activities {
            get {
                return this.activities;
            }
        }
        
        public virtual PeopleResource People {
            get {
                return this.people;
            }
        }
    }
}
