//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.235
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Google.Apis.Shopping.V1.Data {
    using System;
    using System.Collections;
    using System.Collections.Generic;
    
    
    public class Product : Google.Apis.Requests.IResponse {
        
        private IList<ShoppingModelCategoryJsonV1> categories;
        
        private ShoppingModelDebugJsonV1 debug;
        
        private string id;
        
        private string kind;
        
        private ShoppingModelProductJsonV1 product;
        
        private IList<RecommendationsData> recommendations;
        
        private string selfLink;
        
        private Google.Apis.Requests.RequestError error;
        
        [Newtonsoft.Json.JsonPropertyAttribute("categories")]
        public virtual IList<ShoppingModelCategoryJsonV1> Categories {
            get {
                return this.categories;
            }
            set {
                this.categories = value;
            }
        }
        
        [Newtonsoft.Json.JsonPropertyAttribute("debug")]
        public virtual ShoppingModelDebugJsonV1 Debug {
            get {
                return this.debug;
            }
            set {
                this.debug = value;
            }
        }
        
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id {
            get {
                return this.id;
            }
            set {
                this.id = value;
            }
        }
        
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this.kind;
            }
            set {
                this.kind = value;
            }
        }
        
        [Newtonsoft.Json.JsonPropertyAttribute("product")]
        public virtual ShoppingModelProductJsonV1 ProductValue {
            get {
                return this.product;
            }
            set {
                this.product = value;
            }
        }
        
        [Newtonsoft.Json.JsonPropertyAttribute("recommendations")]
        public virtual IList<RecommendationsData> Recommendations {
            get {
                return this.recommendations;
            }
            set {
                this.recommendations = value;
            }
        }
        
        [Newtonsoft.Json.JsonPropertyAttribute("selfLink")]
        public virtual string SelfLink {
            get {
                return this.selfLink;
            }
            set {
                this.selfLink = value;
            }
        }
        
        [Newtonsoft.Json.JsonPropertyAttribute("error")]
        public virtual Google.Apis.Requests.RequestError Error {
            get {
                return this.error;
            }
            set {
                this.error = value;
            }
        }
        
        public class RecommendationsData {
            
            private IList<RecommendationListData> recommendationList;
            
            private string type;
            
            [Newtonsoft.Json.JsonPropertyAttribute("recommendationList")]
            public virtual IList<RecommendationListData> RecommendationList {
                get {
                    return this.recommendationList;
                }
                set {
                    this.recommendationList = value;
                }
            }
            
            [Newtonsoft.Json.JsonPropertyAttribute("type")]
            public virtual string Type {
                get {
                    return this.type;
                }
                set {
                    this.type = value;
                }
            }
            
            public class RecommendationListData {
                
                private ShoppingModelProductJsonV1 product;
                
                [Newtonsoft.Json.JsonPropertyAttribute("product")]
                public virtual ShoppingModelProductJsonV1 Product {
                    get {
                        return this.product;
                    }
                    set {
                        this.product = value;
                    }
                }
            }
        }
    }
    
    public class Products : Google.Apis.Requests.IResponse {
        
        private IList<ShoppingModelCategoryJsonV1> categories;
        
        private long currentItemCount;
        
        private ShoppingModelDebugJsonV1 debug;
        
        private string etag;
        
        private IList<FacetsData> facets;
        
        private string id;
        
        private IList<Product> items;
        
        private long itemsPerPage;
        
        private string kind;
        
        private string nextLink;
        
        private string previousLink;
        
        private IList<PromotionsData> promotions;
        
        private IList<System.String> redirects;
        
        private IList<System.String> relatedQueries;
        
        private string selfLink;
        
        private IList<ShelfSpaceAdsData> shelfSpaceAds;
        
        private SpellingData spelling;
        
        private long startIndex;
        
        private IList<StoresData> stores;
        
        private long totalItems;
        
        private Google.Apis.Requests.RequestError error;
        
        [Newtonsoft.Json.JsonPropertyAttribute("categories")]
        public virtual IList<ShoppingModelCategoryJsonV1> Categories {
            get {
                return this.categories;
            }
            set {
                this.categories = value;
            }
        }
        
        [Newtonsoft.Json.JsonPropertyAttribute("currentItemCount")]
        public virtual long CurrentItemCount {
            get {
                return this.currentItemCount;
            }
            set {
                this.currentItemCount = value;
            }
        }
        
        [Newtonsoft.Json.JsonPropertyAttribute("debug")]
        public virtual ShoppingModelDebugJsonV1 Debug {
            get {
                return this.debug;
            }
            set {
                this.debug = value;
            }
        }
        
        [Newtonsoft.Json.JsonPropertyAttribute("etag")]
        public virtual string Etag {
            get {
                return this.etag;
            }
            set {
                this.etag = value;
            }
        }
        
        [Newtonsoft.Json.JsonPropertyAttribute("facets")]
        public virtual IList<FacetsData> Facets {
            get {
                return this.facets;
            }
            set {
                this.facets = value;
            }
        }
        
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id {
            get {
                return this.id;
            }
            set {
                this.id = value;
            }
        }
        
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual IList<Product> Items {
            get {
                return this.items;
            }
            set {
                this.items = value;
            }
        }
        
        [Newtonsoft.Json.JsonPropertyAttribute("itemsPerPage")]
        public virtual long ItemsPerPage {
            get {
                return this.itemsPerPage;
            }
            set {
                this.itemsPerPage = value;
            }
        }
        
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this.kind;
            }
            set {
                this.kind = value;
            }
        }
        
        [Newtonsoft.Json.JsonPropertyAttribute("nextLink")]
        public virtual string NextLink {
            get {
                return this.nextLink;
            }
            set {
                this.nextLink = value;
            }
        }
        
        [Newtonsoft.Json.JsonPropertyAttribute("previousLink")]
        public virtual string PreviousLink {
            get {
                return this.previousLink;
            }
            set {
                this.previousLink = value;
            }
        }
        
        [Newtonsoft.Json.JsonPropertyAttribute("promotions")]
        public virtual IList<PromotionsData> Promotions {
            get {
                return this.promotions;
            }
            set {
                this.promotions = value;
            }
        }
        
        [Newtonsoft.Json.JsonPropertyAttribute("redirects")]
        public virtual IList<System.String> Redirects {
            get {
                return this.redirects;
            }
            set {
                this.redirects = value;
            }
        }
        
        [Newtonsoft.Json.JsonPropertyAttribute("relatedQueries")]
        public virtual IList<System.String> RelatedQueries {
            get {
                return this.relatedQueries;
            }
            set {
                this.relatedQueries = value;
            }
        }
        
        [Newtonsoft.Json.JsonPropertyAttribute("selfLink")]
        public virtual string SelfLink {
            get {
                return this.selfLink;
            }
            set {
                this.selfLink = value;
            }
        }
        
        [Newtonsoft.Json.JsonPropertyAttribute("shelfSpaceAds")]
        public virtual IList<ShelfSpaceAdsData> ShelfSpaceAds {
            get {
                return this.shelfSpaceAds;
            }
            set {
                this.shelfSpaceAds = value;
            }
        }
        
        [Newtonsoft.Json.JsonPropertyAttribute("spelling")]
        public virtual SpellingData Spelling {
            get {
                return this.spelling;
            }
            set {
                this.spelling = value;
            }
        }
        
        [Newtonsoft.Json.JsonPropertyAttribute("startIndex")]
        public virtual long StartIndex {
            get {
                return this.startIndex;
            }
            set {
                this.startIndex = value;
            }
        }
        
        [Newtonsoft.Json.JsonPropertyAttribute("stores")]
        public virtual IList<StoresData> Stores {
            get {
                return this.stores;
            }
            set {
                this.stores = value;
            }
        }
        
        [Newtonsoft.Json.JsonPropertyAttribute("totalItems")]
        public virtual long TotalItems {
            get {
                return this.totalItems;
            }
            set {
                this.totalItems = value;
            }
        }
        
        [Newtonsoft.Json.JsonPropertyAttribute("error")]
        public virtual Google.Apis.Requests.RequestError Error {
            get {
                return this.error;
            }
            set {
                this.error = value;
            }
        }
        
        public class FacetsData {
            
            private IList<BucketsData> buckets;
            
            private long count;
            
            private string displayName;
            
            private string name;
            
            private string property;
            
            private string type;
            
            private string unit;
            
            [Newtonsoft.Json.JsonPropertyAttribute("buckets")]
            public virtual IList<BucketsData> Buckets {
                get {
                    return this.buckets;
                }
                set {
                    this.buckets = value;
                }
            }
            
            [Newtonsoft.Json.JsonPropertyAttribute("count")]
            public virtual long Count {
                get {
                    return this.count;
                }
                set {
                    this.count = value;
                }
            }
            
            [Newtonsoft.Json.JsonPropertyAttribute("displayName")]
            public virtual string DisplayName {
                get {
                    return this.displayName;
                }
                set {
                    this.displayName = value;
                }
            }
            
            [Newtonsoft.Json.JsonPropertyAttribute("name")]
            public virtual string Name {
                get {
                    return this.name;
                }
                set {
                    this.name = value;
                }
            }
            
            [Newtonsoft.Json.JsonPropertyAttribute("property")]
            public virtual string Property {
                get {
                    return this.property;
                }
                set {
                    this.property = value;
                }
            }
            
            [Newtonsoft.Json.JsonPropertyAttribute("type")]
            public virtual string Type {
                get {
                    return this.type;
                }
                set {
                    this.type = value;
                }
            }
            
            [Newtonsoft.Json.JsonPropertyAttribute("unit")]
            public virtual string Unit {
                get {
                    return this.unit;
                }
                set {
                    this.unit = value;
                }
            }
            
            public class BucketsData {
                
                private long count;
                
                private string max;
                
                private bool maxExclusive;
                
                private string min;
                
                private bool minExclusive;
                
                private string value;
                
                [Newtonsoft.Json.JsonPropertyAttribute("count")]
                public virtual long Count {
                    get {
                        return this.count;
                    }
                    set {
                        this.count = value;
                    }
                }
                
                [Newtonsoft.Json.JsonPropertyAttribute("max")]
                public virtual string Max {
                    get {
                        return this.max;
                    }
                    set {
                        this.max = value;
                    }
                }
                
                [Newtonsoft.Json.JsonPropertyAttribute("maxExclusive")]
                public virtual bool MaxExclusive {
                    get {
                        return this.maxExclusive;
                    }
                    set {
                        this.maxExclusive = value;
                    }
                }
                
                [Newtonsoft.Json.JsonPropertyAttribute("min")]
                public virtual string Min {
                    get {
                        return this.min;
                    }
                    set {
                        this.min = value;
                    }
                }
                
                [Newtonsoft.Json.JsonPropertyAttribute("minExclusive")]
                public virtual bool MinExclusive {
                    get {
                        return this.minExclusive;
                    }
                    set {
                        this.minExclusive = value;
                    }
                }
                
                [Newtonsoft.Json.JsonPropertyAttribute("value")]
                public virtual string Value {
                    get {
                        return this.value;
                    }
                    set {
                        this.value = value;
                    }
                }
            }
        }
        
        public class PromotionsData {
            
            private IList<CustomFieldsData> customFields;
            
            private string customHtml;
            
            private string description;
            
            private string destLink;
            
            private string imageLink;
            
            private string link;
            
            private string name;
            
            private ShoppingModelProductJsonV1 product;
            
            private string type;
            
            [Newtonsoft.Json.JsonPropertyAttribute("customFields")]
            public virtual IList<CustomFieldsData> CustomFields {
                get {
                    return this.customFields;
                }
                set {
                    this.customFields = value;
                }
            }
            
            [Newtonsoft.Json.JsonPropertyAttribute("customHtml")]
            public virtual string CustomHtml {
                get {
                    return this.customHtml;
                }
                set {
                    this.customHtml = value;
                }
            }
            
            [Newtonsoft.Json.JsonPropertyAttribute("description")]
            public virtual string Description {
                get {
                    return this.description;
                }
                set {
                    this.description = value;
                }
            }
            
            [Newtonsoft.Json.JsonPropertyAttribute("destLink")]
            public virtual string DestLink {
                get {
                    return this.destLink;
                }
                set {
                    this.destLink = value;
                }
            }
            
            [Newtonsoft.Json.JsonPropertyAttribute("imageLink")]
            public virtual string ImageLink {
                get {
                    return this.imageLink;
                }
                set {
                    this.imageLink = value;
                }
            }
            
            [Newtonsoft.Json.JsonPropertyAttribute("link")]
            public virtual string Link {
                get {
                    return this.link;
                }
                set {
                    this.link = value;
                }
            }
            
            [Newtonsoft.Json.JsonPropertyAttribute("name")]
            public virtual string Name {
                get {
                    return this.name;
                }
                set {
                    this.name = value;
                }
            }
            
            [Newtonsoft.Json.JsonPropertyAttribute("product")]
            public virtual ShoppingModelProductJsonV1 Product {
                get {
                    return this.product;
                }
                set {
                    this.product = value;
                }
            }
            
            [Newtonsoft.Json.JsonPropertyAttribute("type")]
            public virtual string Type {
                get {
                    return this.type;
                }
                set {
                    this.type = value;
                }
            }
            
            public class CustomFieldsData {
                
                private string name;
                
                private string value;
                
                [Newtonsoft.Json.JsonPropertyAttribute("name")]
                public virtual string Name {
                    get {
                        return this.name;
                    }
                    set {
                        this.name = value;
                    }
                }
                
                [Newtonsoft.Json.JsonPropertyAttribute("value")]
                public virtual string Value {
                    get {
                        return this.value;
                    }
                    set {
                        this.value = value;
                    }
                }
            }
        }
        
        public class ShelfSpaceAdsData {
            
            private ShoppingModelProductJsonV1 product;
            
            [Newtonsoft.Json.JsonPropertyAttribute("product")]
            public virtual ShoppingModelProductJsonV1 Product {
                get {
                    return this.product;
                }
                set {
                    this.product = value;
                }
            }
        }
        
        public class SpellingData {
            
            private string suggestion;
            
            [Newtonsoft.Json.JsonPropertyAttribute("suggestion")]
            public virtual string Suggestion {
                get {
                    return this.suggestion;
                }
                set {
                    this.suggestion = value;
                }
            }
        }
        
        public class StoresData {
            
            private string address;
            
            private string location;
            
            private string name;
            
            private string storeCode;
            
            private string storeId;
            
            private string telephone;
            
            [Newtonsoft.Json.JsonPropertyAttribute("address")]
            public virtual string Address {
                get {
                    return this.address;
                }
                set {
                    this.address = value;
                }
            }
            
            [Newtonsoft.Json.JsonPropertyAttribute("location")]
            public virtual string Location {
                get {
                    return this.location;
                }
                set {
                    this.location = value;
                }
            }
            
            [Newtonsoft.Json.JsonPropertyAttribute("name")]
            public virtual string Name {
                get {
                    return this.name;
                }
                set {
                    this.name = value;
                }
            }
            
            [Newtonsoft.Json.JsonPropertyAttribute("storeCode")]
            public virtual string StoreCode {
                get {
                    return this.storeCode;
                }
                set {
                    this.storeCode = value;
                }
            }
            
            [Newtonsoft.Json.JsonPropertyAttribute("storeId")]
            public virtual string StoreId {
                get {
                    return this.storeId;
                }
                set {
                    this.storeId = value;
                }
            }
            
            [Newtonsoft.Json.JsonPropertyAttribute("telephone")]
            public virtual string Telephone {
                get {
                    return this.telephone;
                }
                set {
                    this.telephone = value;
                }
            }
        }
    }
    
    public class ShoppingModelCategoryJsonV1 {
        
        private string id;
        
        private IList<System.String> parents;
        
        private string shortName;
        
        private string url;
        
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id {
            get {
                return this.id;
            }
            set {
                this.id = value;
            }
        }
        
        [Newtonsoft.Json.JsonPropertyAttribute("parents")]
        public virtual IList<System.String> Parents {
            get {
                return this.parents;
            }
            set {
                this.parents = value;
            }
        }
        
        [Newtonsoft.Json.JsonPropertyAttribute("shortName")]
        public virtual string ShortName {
            get {
                return this.shortName;
            }
            set {
                this.shortName = value;
            }
        }
        
        [Newtonsoft.Json.JsonPropertyAttribute("url")]
        public virtual string Url {
            get {
                return this.url;
            }
            set {
                this.url = value;
            }
        }
    }
    
    public class ShoppingModelDebugJsonV1 {
        
        private string rdcResponse;
        
        private string searchRequest;
        
        private string searchResponse;
        
        [Newtonsoft.Json.JsonPropertyAttribute("rdcResponse")]
        public virtual string RdcResponse {
            get {
                return this.rdcResponse;
            }
            set {
                this.rdcResponse = value;
            }
        }
        
        [Newtonsoft.Json.JsonPropertyAttribute("searchRequest")]
        public virtual string SearchRequest {
            get {
                return this.searchRequest;
            }
            set {
                this.searchRequest = value;
            }
        }
        
        [Newtonsoft.Json.JsonPropertyAttribute("searchResponse")]
        public virtual string SearchResponse {
            get {
                return this.searchResponse;
            }
            set {
                this.searchResponse = value;
            }
        }
    }
    
    public class ShoppingModelProductJsonV1 {
        
        private IList<AttributesData> attributes;
        
        private AuthorData author;
        
        private string brand;
        
        private IList<System.String> categories;
        
        private string condition;
        
        private string country;
        
        private string creationTime;
        
        private string description;
        
        private string googleId;
        
        private string gtin;
        
        private IList<ImagesData> images;
        
        private IList<InventoriesData> inventories;
        
        private string language;
        
        private string link;
        
        private string modificationTime;
        
        private string providedId;
        
        private string title;
        
        [Newtonsoft.Json.JsonPropertyAttribute("attributes")]
        public virtual IList<AttributesData> Attributes {
            get {
                return this.attributes;
            }
            set {
                this.attributes = value;
            }
        }
        
        [Newtonsoft.Json.JsonPropertyAttribute("author")]
        public virtual AuthorData Author {
            get {
                return this.author;
            }
            set {
                this.author = value;
            }
        }
        
        [Newtonsoft.Json.JsonPropertyAttribute("brand")]
        public virtual string Brand {
            get {
                return this.brand;
            }
            set {
                this.brand = value;
            }
        }
        
        [Newtonsoft.Json.JsonPropertyAttribute("categories")]
        public virtual IList<System.String> Categories {
            get {
                return this.categories;
            }
            set {
                this.categories = value;
            }
        }
        
        [Newtonsoft.Json.JsonPropertyAttribute("condition")]
        public virtual string Condition {
            get {
                return this.condition;
            }
            set {
                this.condition = value;
            }
        }
        
        [Newtonsoft.Json.JsonPropertyAttribute("country")]
        public virtual string Country {
            get {
                return this.country;
            }
            set {
                this.country = value;
            }
        }
        
        [Newtonsoft.Json.JsonPropertyAttribute("creationTime")]
        public virtual string CreationTime {
            get {
                return this.creationTime;
            }
            set {
                this.creationTime = value;
            }
        }
        
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description {
            get {
                return this.description;
            }
            set {
                this.description = value;
            }
        }
        
        [Newtonsoft.Json.JsonPropertyAttribute("googleId")]
        public virtual string GoogleId {
            get {
                return this.googleId;
            }
            set {
                this.googleId = value;
            }
        }
        
        [Newtonsoft.Json.JsonPropertyAttribute("gtin")]
        public virtual string Gtin {
            get {
                return this.gtin;
            }
            set {
                this.gtin = value;
            }
        }
        
        [Newtonsoft.Json.JsonPropertyAttribute("images")]
        public virtual IList<ImagesData> Images {
            get {
                return this.images;
            }
            set {
                this.images = value;
            }
        }
        
        [Newtonsoft.Json.JsonPropertyAttribute("inventories")]
        public virtual IList<InventoriesData> Inventories {
            get {
                return this.inventories;
            }
            set {
                this.inventories = value;
            }
        }
        
        [Newtonsoft.Json.JsonPropertyAttribute("language")]
        public virtual string Language {
            get {
                return this.language;
            }
            set {
                this.language = value;
            }
        }
        
        [Newtonsoft.Json.JsonPropertyAttribute("link")]
        public virtual string Link {
            get {
                return this.link;
            }
            set {
                this.link = value;
            }
        }
        
        [Newtonsoft.Json.JsonPropertyAttribute("modificationTime")]
        public virtual string ModificationTime {
            get {
                return this.modificationTime;
            }
            set {
                this.modificationTime = value;
            }
        }
        
        [Newtonsoft.Json.JsonPropertyAttribute("providedId")]
        public virtual string ProvidedId {
            get {
                return this.providedId;
            }
            set {
                this.providedId = value;
            }
        }
        
        [Newtonsoft.Json.JsonPropertyAttribute("title")]
        public virtual string Title {
            get {
                return this.title;
            }
            set {
                this.title = value;
            }
        }
        
        public class AttributesData {
            
            private string displayName;
            
            private string name;
            
            private string type;
            
            private string unit;
            
            private string value;
            
            [Newtonsoft.Json.JsonPropertyAttribute("displayName")]
            public virtual string DisplayName {
                get {
                    return this.displayName;
                }
                set {
                    this.displayName = value;
                }
            }
            
            [Newtonsoft.Json.JsonPropertyAttribute("name")]
            public virtual string Name {
                get {
                    return this.name;
                }
                set {
                    this.name = value;
                }
            }
            
            [Newtonsoft.Json.JsonPropertyAttribute("type")]
            public virtual string Type {
                get {
                    return this.type;
                }
                set {
                    this.type = value;
                }
            }
            
            [Newtonsoft.Json.JsonPropertyAttribute("unit")]
            public virtual string Unit {
                get {
                    return this.unit;
                }
                set {
                    this.unit = value;
                }
            }
            
            [Newtonsoft.Json.JsonPropertyAttribute("value")]
            public virtual string Value {
                get {
                    return this.value;
                }
                set {
                    this.value = value;
                }
            }
        }
        
        public class AuthorData {
            
            private string accountId;
            
            private string aggregatorId;
            
            private string email;
            
            private string name;
            
            private string uri;
            
            [Newtonsoft.Json.JsonPropertyAttribute("accountId")]
            public virtual string AccountId {
                get {
                    return this.accountId;
                }
                set {
                    this.accountId = value;
                }
            }
            
            [Newtonsoft.Json.JsonPropertyAttribute("aggregatorId")]
            public virtual string AggregatorId {
                get {
                    return this.aggregatorId;
                }
                set {
                    this.aggregatorId = value;
                }
            }
            
            [Newtonsoft.Json.JsonPropertyAttribute("email")]
            public virtual string Email {
                get {
                    return this.email;
                }
                set {
                    this.email = value;
                }
            }
            
            [Newtonsoft.Json.JsonPropertyAttribute("name")]
            public virtual string Name {
                get {
                    return this.name;
                }
                set {
                    this.name = value;
                }
            }
            
            [Newtonsoft.Json.JsonPropertyAttribute("uri")]
            public virtual string Uri {
                get {
                    return this.uri;
                }
                set {
                    this.uri = value;
                }
            }
        }
        
        public class ImagesData {
            
            private string link;
            
            private IList<ThumbnailsData> thumbnails;
            
            [Newtonsoft.Json.JsonPropertyAttribute("link")]
            public virtual string Link {
                get {
                    return this.link;
                }
                set {
                    this.link = value;
                }
            }
            
            [Newtonsoft.Json.JsonPropertyAttribute("thumbnails")]
            public virtual IList<ThumbnailsData> Thumbnails {
                get {
                    return this.thumbnails;
                }
                set {
                    this.thumbnails = value;
                }
            }
            
            public class ThumbnailsData {
                
                private string content;
                
                private long height;
                
                private string link;
                
                private long width;
                
                [Newtonsoft.Json.JsonPropertyAttribute("content")]
                public virtual string Content {
                    get {
                        return this.content;
                    }
                    set {
                        this.content = value;
                    }
                }
                
                [Newtonsoft.Json.JsonPropertyAttribute("height")]
                public virtual long Height {
                    get {
                        return this.height;
                    }
                    set {
                        this.height = value;
                    }
                }
                
                [Newtonsoft.Json.JsonPropertyAttribute("link")]
                public virtual string Link {
                    get {
                        return this.link;
                    }
                    set {
                        this.link = value;
                    }
                }
                
                [Newtonsoft.Json.JsonPropertyAttribute("width")]
                public virtual long Width {
                    get {
                        return this.width;
                    }
                    set {
                        this.width = value;
                    }
                }
            }
        }
        
        public class InventoriesData {
            
            private string availability;
            
            private string channel;
            
            private string currency;
            
            private double distance;
            
            private string distanceUnit;
            
            private double price;
            
            private string storeId;
            
            [Newtonsoft.Json.JsonPropertyAttribute("availability")]
            public virtual string Availability {
                get {
                    return this.availability;
                }
                set {
                    this.availability = value;
                }
            }
            
            [Newtonsoft.Json.JsonPropertyAttribute("channel")]
            public virtual string Channel {
                get {
                    return this.channel;
                }
                set {
                    this.channel = value;
                }
            }
            
            [Newtonsoft.Json.JsonPropertyAttribute("currency")]
            public virtual string Currency {
                get {
                    return this.currency;
                }
                set {
                    this.currency = value;
                }
            }
            
            [Newtonsoft.Json.JsonPropertyAttribute("distance")]
            public virtual double Distance {
                get {
                    return this.distance;
                }
                set {
                    this.distance = value;
                }
            }
            
            [Newtonsoft.Json.JsonPropertyAttribute("distanceUnit")]
            public virtual string DistanceUnit {
                get {
                    return this.distanceUnit;
                }
                set {
                    this.distanceUnit = value;
                }
            }
            
            [Newtonsoft.Json.JsonPropertyAttribute("price")]
            public virtual double Price {
                get {
                    return this.price;
                }
                set {
                    this.price = value;
                }
            }
            
            [Newtonsoft.Json.JsonPropertyAttribute("storeId")]
            public virtual string StoreId {
                get {
                    return this.storeId;
                }
                set {
                    this.storeId = value;
                }
            }
        }
    }
}
namespace Google.Apis.Shopping.V1 {
    using System;
    using System.IO;
    using System.Collections.Generic;
    using Google.Apis;
    using Google.Apis.Discovery;
    
    
    public class ShoppingService : Google.Apis.Discovery.IRequestExecutor, Google.Apis.Discovery.ISchemaAwareRequestExecutor {
        
        private Google.Apis.Discovery.IService genericService;
        
        private Google.Apis.Authentication.IAuthenticator authenticator;
        
        private const string Version = "v1";
        
        private const string Name = "shopping";
        
        private const string BaseUri = "https://www.googleapis.com/shopping/search/v1/";
        
        private const Google.Apis.Discovery.DiscoveryVersion DiscoveryVersionUsed = Google.Apis.Discovery.DiscoveryVersion.Version_1_0;
        
        private string developerKey;
        
        private ProductsResource products;
        
        public ShoppingService(Google.Apis.Discovery.IService genericService, Google.Apis.Authentication.IAuthenticator authenticator) {
            this.genericService = genericService;
            this.authenticator = authenticator;
            this.products = new ProductsResource(this);
        }
        
        public ShoppingService() : 
                this(new Google.Apis.Discovery.DiscoveryService(new Google.Apis.Discovery.WebDiscoveryDevice(new System.Uri(string.Format("https://www.googleapis.com/discovery/v1/apis/{0}/{1}/rest", ShoppingService.Name, ShoppingService.Version)))).GetService(ShoppingService.Version, ShoppingService.DiscoveryVersionUsed, new Google.Apis.Discovery.FactoryParameterV1_0(new System.Uri(ShoppingService.BaseUri))), Google.Apis.Authentication.AuthenticatorFactory.GetInstance().GetRegisteredAuthenticator()) {
        }
        
        /// <summary>Sets the DeveloperKey which this service uses for all requests</summary>
        public virtual string DeveloperKey {
            get {
                return this.developerKey;
            }
            set {
                this.developerKey = value;
            }
        }
        
        public virtual ProductsResource Products {
            get {
                return this.products;
            }
        }
        
        public virtual System.IO.Stream ExecuteRequest(string resource, string method, string body, System.Collections.Generic.IDictionary<string, object> parameters) {
            Google.Apis.Requests.IRequest request = this.genericService.CreateRequest(resource, method);
            if (string.IsNullOrEmpty(DeveloperKey) == false) {
                request = request.WithDeveloperKey(this.DeveloperKey);
            }
            return request.WithParameters(parameters).WithAuthentication(authenticator).WithBody(body).ExecuteRequest();
        }
        
        public virtual System.IO.Stream ExecuteRequest(string resource, string method, object body, System.Collections.Generic.IDictionary<string, object> parameters) {
            return this.ExecuteRequest(resource, method, this.ObjectToJson(body), parameters);
        }
        
        public virtual void RegisterSerializer(Google.Apis.ISerializer serializer) {
            genericService.Serializer = serializer;
        }
        
        public virtual string ObjectToJson(object obj) {
            return genericService.SerializeRequest(obj);
        }
        
        public virtual T JsonToObject<T>(System.IO.Stream stream)
         {
            return genericService.DeserializeResponse<T>(stream);
        }
    }
    
    public class ProductsResource {
        
        private Google.Apis.Discovery.ISchemaAwareRequestExecutor service;
        
        private const string Resource = "products";
        
        private log4net.ILog logger = log4net.LogManager.GetLogger(typeof(ProductsResource));
        
        public ProductsResource(ShoppingService service) {
            this.service = service;
        }
        
        /// <summary>Returns a single product</summary>
        /// <param name="accountId">Required - Minimum value of 0 - Maximum value of 4294967295 - Merchant center account id</param>
        /// <param name="productId">Required - Id of product</param>
        /// <param name="productIdType">Required - Type of productId</param>
        /// <param name="source">Required - Query source</param>
        /// <param name="attributeFilter">Optional - Comma separated list of attributes to return</param>
        /// <param name="categoriesEnabled">categories.enabled - Optional - Whether to return category information</param>
        /// <param name="categoriesInclude">categories.include - Optional - Category specification</param>
        /// <param name="categoriesUseGcsConfig">categories.useGcsConfig - Optional - This parameter is currently ignored</param>
        /// <param name="debugEnabled">debug.enabled - Optional - Google Internal</param>
        /// <param name="debugEnableLogging">debug.enableLogging - Optional - Google Internal</param>
        /// <param name="debugSearchRequest">debug.searchRequest - Optional - Google Internal</param>
        /// <param name="debugSearchResponse">debug.searchResponse - Optional - Google Internal</param>
        /// <param name="productFields">Optional - Google Internal</param>
        /// <param name="recommendationsEnabled">recommendations.enabled - Optional - Whether to return recommendation information</param>
        /// <param name="recommendationsInclude">recommendations.include - Optional - Recommendation specification</param>
        /// <param name="recommendationsUseGcsConfig">recommendations.useGcsConfig - Optional - This parameter is currently ignored</param>
        /// <param name="taxonomy">Optional - Merchant taxonomy</param>
        /// <param name="thumbnails">Optional - Thumbnail specification</param>
        public virtual System.IO.Stream GetAsStream(
                    long accountId, 
                    string productId, 
                    string productIdType, 
                    string source, 
                    string attributeFilter, 
                    System.Boolean? categoriesEnabled, 
                    string categoriesInclude, 
                    System.Boolean? categoriesUseGcsConfig, 
                    System.Boolean? debugEnabled, 
                    System.Boolean? debugEnableLogging, 
                    System.Boolean? debugSearchRequest, 
                    System.Boolean? debugSearchResponse, 
                    string productFields, 
                    System.Boolean? recommendationsEnabled, 
                    string recommendationsInclude, 
                    System.Boolean? recommendationsUseGcsConfig, 
                    string taxonomy, 
                    string thumbnails) {
            string body = null;
            System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
            parameters["accountId"] = accountId;
            parameters["productId"] = productId;
            parameters["productIdType"] = productIdType;
            parameters["source"] = source;
            parameters["attributeFilter"] = attributeFilter;
            parameters["categories.enabled"] = categoriesEnabled;
            parameters["categories.include"] = categoriesInclude;
            parameters["categories.useGcsConfig"] = categoriesUseGcsConfig;
            parameters["debug.enabled"] = debugEnabled;
            parameters["debug.enableLogging"] = debugEnableLogging;
            parameters["debug.searchRequest"] = debugSearchRequest;
            parameters["debug.searchResponse"] = debugSearchResponse;
            parameters["productFields"] = productFields;
            parameters["recommendations.enabled"] = recommendationsEnabled;
            parameters["recommendations.include"] = recommendationsInclude;
            parameters["recommendations.useGcsConfig"] = recommendationsUseGcsConfig;
            parameters["taxonomy"] = taxonomy;
            parameters["thumbnails"] = thumbnails;
            logger.Debug("Executing products.get");
            System.IO.Stream ret = this.service.ExecuteRequest(ProductsResource.Resource, "get", body, parameters);
            logger.Debug("Done Executing products.get");
            return ret;
        }
        
        /// <summary>Returns a list of products and content modules</summary>
        /// <param name="source">Required - Query source</param>
        /// <param name="attributeFilter">Optional - Comma separated list of attributes to return</param>
        /// <param name="boostBy">Optional - Boosting specification</param>
        /// <param name="categoriesEnabled">categories.enabled - Optional - Whether to return category information</param>
        /// <param name="categoriesInclude">categories.include - Optional - Category specification</param>
        /// <param name="categoriesUseGcsConfig">categories.useGcsConfig - Optional - This parameter is currently ignored</param>
        /// <param name="channels">Optional - Channels specification</param>
        /// <param name="country">Optional - Country restriction (ISO 3166)</param>
        /// <param name="crowdBy">Optional - Crowding specification</param>
        /// <param name="currency">Optional - Currency restriction (ISO 4217)</param>
        /// <param name="debugEnabled">debug.enabled - Optional - Google Internal</param>
        /// <param name="debugEnableLogging">debug.enableLogging - Optional - Google Internal</param>
        /// <param name="debugGeocodeRequest">debug.geocodeRequest - Optional - Google Internal</param>
        /// <param name="debugGeocodeResponse">debug.geocodeResponse - Optional - Google Internal</param>
        /// <param name="debugRdcRequest">debug.rdcRequest - Optional - Google Internal</param>
        /// <param name="debugRdcResponse">debug.rdcResponse - Optional - Google Internal</param>
        /// <param name="debugSearchRequest">debug.searchRequest - Optional - Google Internal</param>
        /// <param name="debugSearchResponse">debug.searchResponse - Optional - Google Internal</param>
        /// <param name="facetsDiscover">facets.discover - Optional - Facets to discover</param>
        /// <param name="facetsEnabled">facets.enabled - Optional - Whether to return facet information</param>
        /// <param name="facetsInclude">facets.include - Optional - Facets to include (applies when useGcsConfig == false)</param>
        /// <param name="facetsUseGcsConfig">facets.useGcsConfig - Optional - Whether to return facet information as configured in the GCS account</param>
        /// <param name="language">Optional - Language restriction (BCP 47)</param>
        /// <param name="maxResults">Optional - Minimum value of 0 - Maximum value of 4294967295 - Maximum number of results to return</param>
        /// <param name="minAvailability">Optional - Must be one of the following values [inStock, limited, outOfStock, unknown]</param>
        /// <param name="productFields">Optional - Google Internal</param>
        /// <param name="promotionsEnabled">promotions.enabled - Optional - Whether to return promotion information</param>
        /// <param name="promotionsUseGcsConfig">promotions.useGcsConfig - Optional - Whether to return promotion information as configured in the GCS account</param>
        /// <param name="q">Optional - Search query</param>
        /// <param name="rankBy">Optional - Ranking specification</param>
        /// <param name="redirectsEnabled">redirects.enabled - Optional - Whether to return redirect information</param>
        /// <param name="redirectsUseGcsConfig">redirects.useGcsConfig - Optional - Whether to return redirect information as configured in the GCS account</param>
        /// <param name="relatedQueriesEnabled">relatedQueries.enabled - Optional - Whether to return related queries</param>
        /// <param name="relatedQueriesUseGcsConfig">relatedQueries.useGcsConfig - Optional - This parameter is currently ignored</param>
        /// <param name="restrictBy">Optional - Restriction specification</param>
        /// <param name="safe">Optional - Whether safe search is enabled. Default: true</param>
        /// <param name="saytEnabled">sayt.enabled - Optional - Google Internal</param>
        /// <param name="saytUseGcsConfig">sayt.useGcsConfig - Optional - Google Internal</param>
        /// <param name="shelfSpaceAdsEnabled">shelfSpaceAds.enabled - Optional - Whether to return shelf space ads</param>
        /// <param name="shelfSpaceAdsMaxResults">shelfSpaceAds.maxResults - Optional - Minimum value of 0 - Maximum value of 4294967295 - The maximum number of shelf space ads to return</param>
        /// <param name="shelfSpaceAdsUseGcsConfig">shelfSpaceAds.useGcsConfig - Optional - This parameter is currently ignored</param>
        /// <param name="spellingEnabled">spelling.enabled - Optional - Whether to return spelling suggestions</param>
        /// <param name="spellingUseGcsConfig">spelling.useGcsConfig - Optional - This parameter is currently ignored</param>
        /// <param name="startIndex">Optional - Minimum value of 0 - Maximum value of 4294967295 - Index (1-based) of first product to return</param>
        /// <param name="taxonomy">Optional - Taxonomy name</param>
        /// <param name="thumbnails">Optional - Image thumbnails specification</param>
        /// <param name="useCase">Optional - One of CommerceSearchUseCase, ShoppingApiUseCase</param>
        public virtual System.IO.Stream ListAsStream(
                    string source, 
                    string attributeFilter, 
                    string boostBy, 
                    System.Boolean? categoriesEnabled, 
                    string categoriesInclude, 
                    System.Boolean? categoriesUseGcsConfig, 
                    string channels, 
                    string country, 
                    string crowdBy, 
                    string currency, 
                    System.Boolean? debugEnabled, 
                    System.Boolean? debugEnableLogging, 
                    System.Boolean? debugGeocodeRequest, 
                    System.Boolean? debugGeocodeResponse, 
                    System.Boolean? debugRdcRequest, 
                    System.Boolean? debugRdcResponse, 
                    System.Boolean? debugSearchRequest, 
                    System.Boolean? debugSearchResponse, 
                    string facetsDiscover, 
                    System.Boolean? facetsEnabled, 
                    string facetsInclude, 
                    System.Boolean? facetsUseGcsConfig, 
                    string language, 
                    System.Int64? maxResults, 
                    MinAvailability? minAvailability, 
                    string productFields, 
                    System.Boolean? promotionsEnabled, 
                    System.Boolean? promotionsUseGcsConfig, 
                    string q, 
                    string rankBy, 
                    System.Boolean? redirectsEnabled, 
                    System.Boolean? redirectsUseGcsConfig, 
                    System.Boolean? relatedQueriesEnabled, 
                    System.Boolean? relatedQueriesUseGcsConfig, 
                    string restrictBy, 
                    System.Boolean? safe, 
                    System.Boolean? saytEnabled, 
                    System.Boolean? saytUseGcsConfig, 
                    System.Boolean? shelfSpaceAdsEnabled, 
                    System.Int64? shelfSpaceAdsMaxResults, 
                    System.Boolean? shelfSpaceAdsUseGcsConfig, 
                    System.Boolean? spellingEnabled, 
                    System.Boolean? spellingUseGcsConfig, 
                    System.Int64? startIndex, 
                    string taxonomy, 
                    string thumbnails, 
                    string useCase) {
            string body = null;
            System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
            parameters["source"] = source;
            parameters["attributeFilter"] = attributeFilter;
            parameters["boostBy"] = boostBy;
            parameters["categories.enabled"] = categoriesEnabled;
            parameters["categories.include"] = categoriesInclude;
            parameters["categories.useGcsConfig"] = categoriesUseGcsConfig;
            parameters["channels"] = channels;
            parameters["country"] = country;
            parameters["crowdBy"] = crowdBy;
            parameters["currency"] = currency;
            parameters["debug.enabled"] = debugEnabled;
            parameters["debug.enableLogging"] = debugEnableLogging;
            parameters["debug.geocodeRequest"] = debugGeocodeRequest;
            parameters["debug.geocodeResponse"] = debugGeocodeResponse;
            parameters["debug.rdcRequest"] = debugRdcRequest;
            parameters["debug.rdcResponse"] = debugRdcResponse;
            parameters["debug.searchRequest"] = debugSearchRequest;
            parameters["debug.searchResponse"] = debugSearchResponse;
            parameters["facets.discover"] = facetsDiscover;
            parameters["facets.enabled"] = facetsEnabled;
            parameters["facets.include"] = facetsInclude;
            parameters["facets.useGcsConfig"] = facetsUseGcsConfig;
            parameters["language"] = language;
            parameters["maxResults"] = maxResults;
            parameters["minAvailability"] = minAvailability;
            parameters["productFields"] = productFields;
            parameters["promotions.enabled"] = promotionsEnabled;
            parameters["promotions.useGcsConfig"] = promotionsUseGcsConfig;
            parameters["q"] = q;
            parameters["rankBy"] = rankBy;
            parameters["redirects.enabled"] = redirectsEnabled;
            parameters["redirects.useGcsConfig"] = redirectsUseGcsConfig;
            parameters["relatedQueries.enabled"] = relatedQueriesEnabled;
            parameters["relatedQueries.useGcsConfig"] = relatedQueriesUseGcsConfig;
            parameters["restrictBy"] = restrictBy;
            parameters["safe"] = safe;
            parameters["sayt.enabled"] = saytEnabled;
            parameters["sayt.useGcsConfig"] = saytUseGcsConfig;
            parameters["shelfSpaceAds.enabled"] = shelfSpaceAdsEnabled;
            parameters["shelfSpaceAds.maxResults"] = shelfSpaceAdsMaxResults;
            parameters["shelfSpaceAds.useGcsConfig"] = shelfSpaceAdsUseGcsConfig;
            parameters["spelling.enabled"] = spellingEnabled;
            parameters["spelling.useGcsConfig"] = spellingUseGcsConfig;
            parameters["startIndex"] = startIndex;
            parameters["taxonomy"] = taxonomy;
            parameters["thumbnails"] = thumbnails;
            parameters["useCase"] = useCase;
            logger.Debug("Executing products.list");
            System.IO.Stream ret = this.service.ExecuteRequest(ProductsResource.Resource, "list", body, parameters);
            logger.Debug("Done Executing products.list");
            return ret;
        }
        
        /// <summary>Returns a single product</summary>
        /// <param name="accountId">Required - Minimum value of 0 - Maximum value of 4294967295 - Merchant center account id</param>
        /// <param name="productId">Required - Id of product</param>
        /// <param name="productIdType">Required - Type of productId</param>
        /// <param name="source">Required - Query source</param>
        /// <param name="attributeFilter">Optional - Comma separated list of attributes to return</param>
        /// <param name="categoriesEnabled">categories.enabled - Optional - Whether to return category information</param>
        /// <param name="categoriesInclude">categories.include - Optional - Category specification</param>
        /// <param name="categoriesUseGcsConfig">categories.useGcsConfig - Optional - This parameter is currently ignored</param>
        /// <param name="debugEnabled">debug.enabled - Optional - Google Internal</param>
        /// <param name="debugEnableLogging">debug.enableLogging - Optional - Google Internal</param>
        /// <param name="debugSearchRequest">debug.searchRequest - Optional - Google Internal</param>
        /// <param name="debugSearchResponse">debug.searchResponse - Optional - Google Internal</param>
        /// <param name="productFields">Optional - Google Internal</param>
        /// <param name="recommendationsEnabled">recommendations.enabled - Optional - Whether to return recommendation information</param>
        /// <param name="recommendationsInclude">recommendations.include - Optional - Recommendation specification</param>
        /// <param name="recommendationsUseGcsConfig">recommendations.useGcsConfig - Optional - This parameter is currently ignored</param>
        /// <param name="taxonomy">Optional - Merchant taxonomy</param>
        /// <param name="thumbnails">Optional - Thumbnail specification</param>
        public virtual Google.Apis.Shopping.V1.Data.Product Get(
                    long accountId, 
                    string productId, 
                    string productIdType, 
                    string source, 
                    string attributeFilter, 
                    System.Boolean? categoriesEnabled, 
                    string categoriesInclude, 
                    System.Boolean? categoriesUseGcsConfig, 
                    System.Boolean? debugEnabled, 
                    System.Boolean? debugEnableLogging, 
                    System.Boolean? debugSearchRequest, 
                    System.Boolean? debugSearchResponse, 
                    string productFields, 
                    System.Boolean? recommendationsEnabled, 
                    string recommendationsInclude, 
                    System.Boolean? recommendationsUseGcsConfig, 
                    string taxonomy, 
                    string thumbnails) {
            string body = null;
            System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
            parameters["accountId"] = accountId;
            parameters["productId"] = productId;
            parameters["productIdType"] = productIdType;
            parameters["source"] = source;
            parameters["attributeFilter"] = attributeFilter;
            parameters["categories.enabled"] = categoriesEnabled;
            parameters["categories.include"] = categoriesInclude;
            parameters["categories.useGcsConfig"] = categoriesUseGcsConfig;
            parameters["debug.enabled"] = debugEnabled;
            parameters["debug.enableLogging"] = debugEnableLogging;
            parameters["debug.searchRequest"] = debugSearchRequest;
            parameters["debug.searchResponse"] = debugSearchResponse;
            parameters["productFields"] = productFields;
            parameters["recommendations.enabled"] = recommendationsEnabled;
            parameters["recommendations.include"] = recommendationsInclude;
            parameters["recommendations.useGcsConfig"] = recommendationsUseGcsConfig;
            parameters["taxonomy"] = taxonomy;
            parameters["thumbnails"] = thumbnails;
            logger.Debug("Executing products.get");
            Google.Apis.Shopping.V1.Data.Product ret = this.service.JsonToObject<Google.Apis.Shopping.V1.Data.Product>(this.service.ExecuteRequest(ProductsResource.Resource, "get", body, parameters));
            logger.Debug("Done Executing products.get");
            return ret;
        }
        
        /// <summary>Returns a list of products and content modules</summary>
        /// <param name="source">Required - Query source</param>
        /// <param name="attributeFilter">Optional - Comma separated list of attributes to return</param>
        /// <param name="boostBy">Optional - Boosting specification</param>
        /// <param name="categoriesEnabled">categories.enabled - Optional - Whether to return category information</param>
        /// <param name="categoriesInclude">categories.include - Optional - Category specification</param>
        /// <param name="categoriesUseGcsConfig">categories.useGcsConfig - Optional - This parameter is currently ignored</param>
        /// <param name="channels">Optional - Channels specification</param>
        /// <param name="country">Optional - Country restriction (ISO 3166)</param>
        /// <param name="crowdBy">Optional - Crowding specification</param>
        /// <param name="currency">Optional - Currency restriction (ISO 4217)</param>
        /// <param name="debugEnabled">debug.enabled - Optional - Google Internal</param>
        /// <param name="debugEnableLogging">debug.enableLogging - Optional - Google Internal</param>
        /// <param name="debugGeocodeRequest">debug.geocodeRequest - Optional - Google Internal</param>
        /// <param name="debugGeocodeResponse">debug.geocodeResponse - Optional - Google Internal</param>
        /// <param name="debugRdcRequest">debug.rdcRequest - Optional - Google Internal</param>
        /// <param name="debugRdcResponse">debug.rdcResponse - Optional - Google Internal</param>
        /// <param name="debugSearchRequest">debug.searchRequest - Optional - Google Internal</param>
        /// <param name="debugSearchResponse">debug.searchResponse - Optional - Google Internal</param>
        /// <param name="facetsDiscover">facets.discover - Optional - Facets to discover</param>
        /// <param name="facetsEnabled">facets.enabled - Optional - Whether to return facet information</param>
        /// <param name="facetsInclude">facets.include - Optional - Facets to include (applies when useGcsConfig == false)</param>
        /// <param name="facetsUseGcsConfig">facets.useGcsConfig - Optional - Whether to return facet information as configured in the GCS account</param>
        /// <param name="language">Optional - Language restriction (BCP 47)</param>
        /// <param name="maxResults">Optional - Minimum value of 0 - Maximum value of 4294967295 - Maximum number of results to return</param>
        /// <param name="minAvailability">Optional - Must be one of the following values [inStock, limited, outOfStock, unknown]</param>
        /// <param name="productFields">Optional - Google Internal</param>
        /// <param name="promotionsEnabled">promotions.enabled - Optional - Whether to return promotion information</param>
        /// <param name="promotionsUseGcsConfig">promotions.useGcsConfig - Optional - Whether to return promotion information as configured in the GCS account</param>
        /// <param name="q">Optional - Search query</param>
        /// <param name="rankBy">Optional - Ranking specification</param>
        /// <param name="redirectsEnabled">redirects.enabled - Optional - Whether to return redirect information</param>
        /// <param name="redirectsUseGcsConfig">redirects.useGcsConfig - Optional - Whether to return redirect information as configured in the GCS account</param>
        /// <param name="relatedQueriesEnabled">relatedQueries.enabled - Optional - Whether to return related queries</param>
        /// <param name="relatedQueriesUseGcsConfig">relatedQueries.useGcsConfig - Optional - This parameter is currently ignored</param>
        /// <param name="restrictBy">Optional - Restriction specification</param>
        /// <param name="safe">Optional - Whether safe search is enabled. Default: true</param>
        /// <param name="saytEnabled">sayt.enabled - Optional - Google Internal</param>
        /// <param name="saytUseGcsConfig">sayt.useGcsConfig - Optional - Google Internal</param>
        /// <param name="shelfSpaceAdsEnabled">shelfSpaceAds.enabled - Optional - Whether to return shelf space ads</param>
        /// <param name="shelfSpaceAdsMaxResults">shelfSpaceAds.maxResults - Optional - Minimum value of 0 - Maximum value of 4294967295 - The maximum number of shelf space ads to return</param>
        /// <param name="shelfSpaceAdsUseGcsConfig">shelfSpaceAds.useGcsConfig - Optional - This parameter is currently ignored</param>
        /// <param name="spellingEnabled">spelling.enabled - Optional - Whether to return spelling suggestions</param>
        /// <param name="spellingUseGcsConfig">spelling.useGcsConfig - Optional - This parameter is currently ignored</param>
        /// <param name="startIndex">Optional - Minimum value of 0 - Maximum value of 4294967295 - Index (1-based) of first product to return</param>
        /// <param name="taxonomy">Optional - Taxonomy name</param>
        /// <param name="thumbnails">Optional - Image thumbnails specification</param>
        /// <param name="useCase">Optional - One of CommerceSearchUseCase, ShoppingApiUseCase</param>
        public virtual Google.Apis.Shopping.V1.Data.Products List(
                    string source, 
                    string attributeFilter, 
                    string boostBy, 
                    System.Boolean? categoriesEnabled, 
                    string categoriesInclude, 
                    System.Boolean? categoriesUseGcsConfig, 
                    string channels, 
                    string country, 
                    string crowdBy, 
                    string currency, 
                    System.Boolean? debugEnabled, 
                    System.Boolean? debugEnableLogging, 
                    System.Boolean? debugGeocodeRequest, 
                    System.Boolean? debugGeocodeResponse, 
                    System.Boolean? debugRdcRequest, 
                    System.Boolean? debugRdcResponse, 
                    System.Boolean? debugSearchRequest, 
                    System.Boolean? debugSearchResponse, 
                    string facetsDiscover, 
                    System.Boolean? facetsEnabled, 
                    string facetsInclude, 
                    System.Boolean? facetsUseGcsConfig, 
                    string language, 
                    System.Int64? maxResults, 
                    MinAvailability? minAvailability, 
                    string productFields, 
                    System.Boolean? promotionsEnabled, 
                    System.Boolean? promotionsUseGcsConfig, 
                    string q, 
                    string rankBy, 
                    System.Boolean? redirectsEnabled, 
                    System.Boolean? redirectsUseGcsConfig, 
                    System.Boolean? relatedQueriesEnabled, 
                    System.Boolean? relatedQueriesUseGcsConfig, 
                    string restrictBy, 
                    System.Boolean? safe, 
                    System.Boolean? saytEnabled, 
                    System.Boolean? saytUseGcsConfig, 
                    System.Boolean? shelfSpaceAdsEnabled, 
                    System.Int64? shelfSpaceAdsMaxResults, 
                    System.Boolean? shelfSpaceAdsUseGcsConfig, 
                    System.Boolean? spellingEnabled, 
                    System.Boolean? spellingUseGcsConfig, 
                    System.Int64? startIndex, 
                    string taxonomy, 
                    string thumbnails, 
                    string useCase) {
            string body = null;
            System.Collections.Generic.Dictionary<string, object> parameters = new System.Collections.Generic.Dictionary<string, object>();
            parameters["source"] = source;
            parameters["attributeFilter"] = attributeFilter;
            parameters["boostBy"] = boostBy;
            parameters["categories.enabled"] = categoriesEnabled;
            parameters["categories.include"] = categoriesInclude;
            parameters["categories.useGcsConfig"] = categoriesUseGcsConfig;
            parameters["channels"] = channels;
            parameters["country"] = country;
            parameters["crowdBy"] = crowdBy;
            parameters["currency"] = currency;
            parameters["debug.enabled"] = debugEnabled;
            parameters["debug.enableLogging"] = debugEnableLogging;
            parameters["debug.geocodeRequest"] = debugGeocodeRequest;
            parameters["debug.geocodeResponse"] = debugGeocodeResponse;
            parameters["debug.rdcRequest"] = debugRdcRequest;
            parameters["debug.rdcResponse"] = debugRdcResponse;
            parameters["debug.searchRequest"] = debugSearchRequest;
            parameters["debug.searchResponse"] = debugSearchResponse;
            parameters["facets.discover"] = facetsDiscover;
            parameters["facets.enabled"] = facetsEnabled;
            parameters["facets.include"] = facetsInclude;
            parameters["facets.useGcsConfig"] = facetsUseGcsConfig;
            parameters["language"] = language;
            parameters["maxResults"] = maxResults;
            parameters["minAvailability"] = minAvailability;
            parameters["productFields"] = productFields;
            parameters["promotions.enabled"] = promotionsEnabled;
            parameters["promotions.useGcsConfig"] = promotionsUseGcsConfig;
            parameters["q"] = q;
            parameters["rankBy"] = rankBy;
            parameters["redirects.enabled"] = redirectsEnabled;
            parameters["redirects.useGcsConfig"] = redirectsUseGcsConfig;
            parameters["relatedQueries.enabled"] = relatedQueriesEnabled;
            parameters["relatedQueries.useGcsConfig"] = relatedQueriesUseGcsConfig;
            parameters["restrictBy"] = restrictBy;
            parameters["safe"] = safe;
            parameters["sayt.enabled"] = saytEnabled;
            parameters["sayt.useGcsConfig"] = saytUseGcsConfig;
            parameters["shelfSpaceAds.enabled"] = shelfSpaceAdsEnabled;
            parameters["shelfSpaceAds.maxResults"] = shelfSpaceAdsMaxResults;
            parameters["shelfSpaceAds.useGcsConfig"] = shelfSpaceAdsUseGcsConfig;
            parameters["spelling.enabled"] = spellingEnabled;
            parameters["spelling.useGcsConfig"] = spellingUseGcsConfig;
            parameters["startIndex"] = startIndex;
            parameters["taxonomy"] = taxonomy;
            parameters["thumbnails"] = thumbnails;
            parameters["useCase"] = useCase;
            logger.Debug("Executing products.list");
            Google.Apis.Shopping.V1.Data.Products ret = this.service.JsonToObject<Google.Apis.Shopping.V1.Data.Products>(this.service.ExecuteRequest(ProductsResource.Resource, "list", body, parameters));
            logger.Debug("Done Executing products.list");
            return ret;
        }
        
        [System.ComponentModel.TypeConverterAttribute(typeof(Google.Apis.Util.EnumStringValueTypeConverter))]
        public enum MinAvailability {
            
            /// <summary>Only in stcok prodicts will be returned</summary>
            [Google.Apis.Util.StringValueAttribute("inStock")]
            InStock,
            
            /// <summary>Limited availability and in stock products will be returned</summary>
            [Google.Apis.Util.StringValueAttribute("limited")]
            Limited,
            
            /// <summary>Out of stock, limited availability and in stock products will be returned</summary>
            [Google.Apis.Util.StringValueAttribute("outOfStock")]
            OutOfStock,
            
            /// <summary>All products will be returned</summary>
            [Google.Apis.Util.StringValueAttribute("unknown")]
            Unknown,
        }
    }
}
