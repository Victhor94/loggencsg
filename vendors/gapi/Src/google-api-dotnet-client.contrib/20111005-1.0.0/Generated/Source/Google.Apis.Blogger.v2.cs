//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4961
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Google.Apis.Blogger.v2.Data {
    using System;
    using System.Collections;
    using System.Collections.Generic;
    
    
    public class Blog : Google.Apis.Requests.IDirectResponseSchema {
        
        private string description;
        
        private string id;
        
        private string kind;
        
        private Blog.LocaleData locale;
        
        private string name;
        
        private Blog.PagesData pages;
        
        private Blog.PostsData posts;
        
        private string published;
        
        private string selfLink;
        
        private string updated;
        
        private string url;
        
        private Google.Apis.Requests.RequestError error;
        
        private string eTag;
        
        /// <summary>The description of this blog. This is displayed underneath the title.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description {
            get {
                return this.description;
            }
            set {
                this.description = value;
            }
        }
        
        /// <summary>The identifier for this resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id {
            get {
                return this.id;
            }
            set {
                this.id = value;
            }
        }
        
        /// <summary>The kind of this entry. Always blogger#blog</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this.kind;
            }
            set {
                this.kind = value;
            }
        }
        
        /// <summary>The locale this Blog is set to.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("locale")]
        public virtual Blog.LocaleData Locale {
            get {
                return this.locale;
            }
            set {
                this.locale = value;
            }
        }
        
        /// <summary>The name of this blog. This is displayed as the title.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name {
            get {
                return this.name;
            }
            set {
                this.name = value;
            }
        }
        
        /// <summary>The container of pages in this blog.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("pages")]
        public virtual Blog.PagesData Pages {
            get {
                return this.pages;
            }
            set {
                this.pages = value;
            }
        }
        
        /// <summary>The container of posts in this blog.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("posts")]
        public virtual Blog.PostsData Posts {
            get {
                return this.posts;
            }
            set {
                this.posts = value;
            }
        }
        
        /// <summary>RFC 3339 date-time when this blog was published.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("published")]
        public virtual string Published {
            get {
                return this.published;
            }
            set {
                this.published = value;
            }
        }
        
        /// <summary>The API REST URL to fetch this resource from.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("selfLink")]
        public virtual string SelfLink {
            get {
                return this.selfLink;
            }
            set {
                this.selfLink = value;
            }
        }
        
        /// <summary>RFC 3339 date-time when this blog was last updated.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("updated")]
        public virtual string Updated {
            get {
                return this.updated;
            }
            set {
                this.updated = value;
            }
        }
        
        /// <summary>The URL where this blog is published.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("url")]
        public virtual string Url {
            get {
                return this.url;
            }
            set {
                this.url = value;
            }
        }
        
        [Newtonsoft.Json.JsonPropertyAttribute("error")]
        public virtual Google.Apis.Requests.RequestError Error {
            get {
                return this.error;
            }
            set {
                this.error = value;
            }
        }
        
        public virtual string ETag {
            get {
                return this.eTag;
            }
            set {
                this.eTag = value;
            }
        }
        
        /// <summary>The locale this Blog is set to.</summary>
        public class LocaleData {
            
            private string country;
            
            private string language;
            
            private string variant;
            
            /// <summary>The country this blog&apos;s locale is set to.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("country")]
            public virtual string Country {
                get {
                    return this.country;
                }
                set {
                    this.country = value;
                }
            }
            
            /// <summary>The language this blog is authored in.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("language")]
            public virtual string Language {
                get {
                    return this.language;
                }
                set {
                    this.language = value;
                }
            }
            
            /// <summary>The language variant this blog is authored in.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("variant")]
            public virtual string Variant {
                get {
                    return this.variant;
                }
                set {
                    this.variant = value;
                }
            }
        }
        
        /// <summary>The container of pages in this blog.</summary>
        public class PagesData {
            
            private string selfLink;
            
            private System.Nullable<long> totalItems;
            
            /// <summary>The URL of the container for pages in this blog.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("selfLink")]
            public virtual string SelfLink {
                get {
                    return this.selfLink;
                }
                set {
                    this.selfLink = value;
                }
            }
            
            /// <summary>The count of pages in this blog.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("totalItems")]
            public virtual System.Nullable<long> TotalItems {
                get {
                    return this.totalItems;
                }
                set {
                    this.totalItems = value;
                }
            }
        }
        
        /// <summary>The container of posts in this blog.</summary>
        public class PostsData {
            
            private string selfLink;
            
            private System.Nullable<long> totalItems;
            
            /// <summary>The URL of the container for posts in this blog.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("selfLink")]
            public virtual string SelfLink {
                get {
                    return this.selfLink;
                }
                set {
                    this.selfLink = value;
                }
            }
            
            /// <summary>The count of posts in this blog.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("totalItems")]
            public virtual System.Nullable<long> TotalItems {
                get {
                    return this.totalItems;
                }
                set {
                    this.totalItems = value;
                }
            }
        }
    }
    
    public class BlogList : Google.Apis.Requests.IDirectResponseSchema {
        
        private IList<Blog> items;
        
        private string kind;
        
        private Google.Apis.Requests.RequestError error;
        
        private string eTag;
        
        /// <summary>The list of Blogs this user has Authorship or Admin rights over.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual IList<Blog> Items {
            get {
                return this.items;
            }
            set {
                this.items = value;
            }
        }
        
        /// <summary>The kind of this entity. Always blogger#blogList</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this.kind;
            }
            set {
                this.kind = value;
            }
        }
        
        [Newtonsoft.Json.JsonPropertyAttribute("error")]
        public virtual Google.Apis.Requests.RequestError Error {
            get {
                return this.error;
            }
            set {
                this.error = value;
            }
        }
        
        public virtual string ETag {
            get {
                return this.eTag;
            }
            set {
                this.eTag = value;
            }
        }
    }
    
    public class Comment : Google.Apis.Requests.IDirectResponseSchema {
        
        private Comment.AuthorData author;
        
        private Comment.BlogData blog;
        
        private string content;
        
        private string id;
        
        private string kind;
        
        private Comment.PostData post;
        
        private string published;
        
        private string selfLink;
        
        private string updated;
        
        private Google.Apis.Requests.RequestError error;
        
        private string eTag;
        
        /// <summary>The author of this Comment.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("author")]
        public virtual Comment.AuthorData Author {
            get {
                return this.author;
            }
            set {
                this.author = value;
            }
        }
        
        /// <summary>Data about the blog containing this comment.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("blog")]
        public virtual Comment.BlogData Blog {
            get {
                return this.blog;
            }
            set {
                this.blog = value;
            }
        }
        
        /// <summary>The actual content of the comment. May include HTML markup.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("content")]
        public virtual string Content {
            get {
                return this.content;
            }
            set {
                this.content = value;
            }
        }
        
        /// <summary>The identifier for this resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id {
            get {
                return this.id;
            }
            set {
                this.id = value;
            }
        }
        
        /// <summary>The kind of this entry. Always blogger#comment</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this.kind;
            }
            set {
                this.kind = value;
            }
        }
        
        /// <summary>Data about the post containing this comment.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("post")]
        public virtual Comment.PostData Post {
            get {
                return this.post;
            }
            set {
                this.post = value;
            }
        }
        
        /// <summary>RFC 3339 date-time when this comment was published.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("published")]
        public virtual string Published {
            get {
                return this.published;
            }
            set {
                this.published = value;
            }
        }
        
        /// <summary>The API REST URL to fetch this resource from.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("selfLink")]
        public virtual string SelfLink {
            get {
                return this.selfLink;
            }
            set {
                this.selfLink = value;
            }
        }
        
        /// <summary>RFC 3339 date-time when this comment was last updated.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("updated")]
        public virtual string Updated {
            get {
                return this.updated;
            }
            set {
                this.updated = value;
            }
        }
        
        [Newtonsoft.Json.JsonPropertyAttribute("error")]
        public virtual Google.Apis.Requests.RequestError Error {
            get {
                return this.error;
            }
            set {
                this.error = value;
            }
        }
        
        public virtual string ETag {
            get {
                return this.eTag;
            }
            set {
                this.eTag = value;
            }
        }
        
        /// <summary>The author of this Comment.</summary>
        public class AuthorData {
            
            private string displayName;
            
            private string id;
            
            private AuthorData.ImageData image;
            
            private string url;
            
            /// <summary>The display name.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("displayName")]
            public virtual string DisplayName {
                get {
                    return this.displayName;
                }
                set {
                    this.displayName = value;
                }
            }
            
            /// <summary>The identifier of the Comment creator.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("id")]
            public virtual string Id {
                get {
                    return this.id;
                }
                set {
                    this.id = value;
                }
            }
            
            /// <summary>The comment creator&apos;s avatar.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("image")]
            public virtual AuthorData.ImageData Image {
                get {
                    return this.image;
                }
                set {
                    this.image = value;
                }
            }
            
            /// <summary>The URL of the Comment creator&apos;s Profile page.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("url")]
            public virtual string Url {
                get {
                    return this.url;
                }
                set {
                    this.url = value;
                }
            }
            
            /// <summary>The comment creator&apos;s avatar.</summary>
            public class ImageData {
                
                private string url;
                
                /// <summary>The comment creator&apos;s avatar URL.</summary>
                [Newtonsoft.Json.JsonPropertyAttribute("url")]
                public virtual string Url {
                    get {
                        return this.url;
                    }
                    set {
                        this.url = value;
                    }
                }
            }
        }
        
        /// <summary>Data about the blog containing this comment.</summary>
        public class BlogData {
            
            private string id;
            
            /// <summary>The identifier of the blog containing this comment.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("id")]
            public virtual string Id {
                get {
                    return this.id;
                }
                set {
                    this.id = value;
                }
            }
        }
        
        /// <summary>Data about the post containing this comment.</summary>
        public class PostData {
            
            private string id;
            
            /// <summary>The identifier of the post containing this comment.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("id")]
            public virtual string Id {
                get {
                    return this.id;
                }
                set {
                    this.id = value;
                }
            }
        }
    }
    
    public class CommentList : Google.Apis.Requests.IDirectResponseSchema {
        
        private IList<Comment> items;
        
        private string kind;
        
        private string nextPageToken;
        
        private string prevPageToken;
        
        private Google.Apis.Requests.RequestError error;
        
        private string eTag;
        
        /// <summary>The List of Comments for a Post.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual IList<Comment> Items {
            get {
                return this.items;
            }
            set {
                this.items = value;
            }
        }
        
        /// <summary>The kind of this entry. Always blogger#commentList</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this.kind;
            }
            set {
                this.kind = value;
            }
        }
        
        /// <summary>Pagination token to fetch the next page, if one exists.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken {
            get {
                return this.nextPageToken;
            }
            set {
                this.nextPageToken = value;
            }
        }
        
        /// <summary>Pagination token to fetch the previous page, if one exists.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("prevPageToken")]
        public virtual string PrevPageToken {
            get {
                return this.prevPageToken;
            }
            set {
                this.prevPageToken = value;
            }
        }
        
        [Newtonsoft.Json.JsonPropertyAttribute("error")]
        public virtual Google.Apis.Requests.RequestError Error {
            get {
                return this.error;
            }
            set {
                this.error = value;
            }
        }
        
        public virtual string ETag {
            get {
                return this.eTag;
            }
            set {
                this.eTag = value;
            }
        }
    }
    
    public class Page : Google.Apis.Requests.IDirectResponseSchema {
        
        private Page.AuthorData author;
        
        private Page.BlogData blog;
        
        private string content;
        
        private string id;
        
        private string kind;
        
        private string published;
        
        private string selfLink;
        
        private string title;
        
        private string updated;
        
        private string url;
        
        private Google.Apis.Requests.RequestError error;
        
        private string eTag;
        
        /// <summary>The author of this Page.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("author")]
        public virtual Page.AuthorData Author {
            get {
                return this.author;
            }
            set {
                this.author = value;
            }
        }
        
        /// <summary>Data about the blog containing this Page.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("blog")]
        public virtual Page.BlogData Blog {
            get {
                return this.blog;
            }
            set {
                this.blog = value;
            }
        }
        
        /// <summary>The body content of this Page, in HTML.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("content")]
        public virtual string Content {
            get {
                return this.content;
            }
            set {
                this.content = value;
            }
        }
        
        /// <summary>The identifier for this resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id {
            get {
                return this.id;
            }
            set {
                this.id = value;
            }
        }
        
        /// <summary>The kind of this entity. Always blogger#page</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this.kind;
            }
            set {
                this.kind = value;
            }
        }
        
        /// <summary>RFC 3339 date-time when this Page was published.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("published")]
        public virtual string Published {
            get {
                return this.published;
            }
            set {
                this.published = value;
            }
        }
        
        /// <summary>The API REST URL to fetch this resource from.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("selfLink")]
        public virtual string SelfLink {
            get {
                return this.selfLink;
            }
            set {
                this.selfLink = value;
            }
        }
        
        /// <summary>The title of this entity. This is the name displayed in the Admin user interface.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("title")]
        public virtual string Title {
            get {
                return this.title;
            }
            set {
                this.title = value;
            }
        }
        
        /// <summary>RFC 3339 date-time when this Page was last updated.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("updated")]
        public virtual string Updated {
            get {
                return this.updated;
            }
            set {
                this.updated = value;
            }
        }
        
        /// <summary>The URL that this Page is displayed at.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("url")]
        public virtual string Url {
            get {
                return this.url;
            }
            set {
                this.url = value;
            }
        }
        
        [Newtonsoft.Json.JsonPropertyAttribute("error")]
        public virtual Google.Apis.Requests.RequestError Error {
            get {
                return this.error;
            }
            set {
                this.error = value;
            }
        }
        
        public virtual string ETag {
            get {
                return this.eTag;
            }
            set {
                this.eTag = value;
            }
        }
        
        /// <summary>The author of this Page.</summary>
        public class AuthorData {
            
            private string displayName;
            
            private string id;
            
            private AuthorData.ImageData image;
            
            private string url;
            
            /// <summary>The display name.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("displayName")]
            public virtual string DisplayName {
                get {
                    return this.displayName;
                }
                set {
                    this.displayName = value;
                }
            }
            
            /// <summary>The identifier of the Page creator.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("id")]
            public virtual string Id {
                get {
                    return this.id;
                }
                set {
                    this.id = value;
                }
            }
            
            /// <summary>The page author&apos;s avatar.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("image")]
            public virtual AuthorData.ImageData Image {
                get {
                    return this.image;
                }
                set {
                    this.image = value;
                }
            }
            
            /// <summary>The URL of the Page creator&apos;s Profile page.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("url")]
            public virtual string Url {
                get {
                    return this.url;
                }
                set {
                    this.url = value;
                }
            }
            
            /// <summary>The page author&apos;s avatar.</summary>
            public class ImageData {
                
                private string url;
                
                /// <summary>The page author&apos;s avatar URL.</summary>
                [Newtonsoft.Json.JsonPropertyAttribute("url")]
                public virtual string Url {
                    get {
                        return this.url;
                    }
                    set {
                        this.url = value;
                    }
                }
            }
        }
        
        /// <summary>Data about the blog containing this Page.</summary>
        public class BlogData {
            
            private string id;
            
            /// <summary>The identifier of the blog containing this page.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("id")]
            public virtual string Id {
                get {
                    return this.id;
                }
                set {
                    this.id = value;
                }
            }
        }
    }
    
    public class PageList : Google.Apis.Requests.IDirectResponseSchema {
        
        private IList<Page> items;
        
        private string kind;
        
        private Google.Apis.Requests.RequestError error;
        
        private string eTag;
        
        /// <summary>The list of Pages for a Blog.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual IList<Page> Items {
            get {
                return this.items;
            }
            set {
                this.items = value;
            }
        }
        
        /// <summary>The kind of this entity. Always blogger#pageList</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this.kind;
            }
            set {
                this.kind = value;
            }
        }
        
        [Newtonsoft.Json.JsonPropertyAttribute("error")]
        public virtual Google.Apis.Requests.RequestError Error {
            get {
                return this.error;
            }
            set {
                this.error = value;
            }
        }
        
        public virtual string ETag {
            get {
                return this.eTag;
            }
            set {
                this.eTag = value;
            }
        }
    }
    
    public class Post : Google.Apis.Requests.IDirectResponseSchema {
        
        private Post.AuthorData author;
        
        private Post.BlogData blog;
        
        private string content;
        
        private string id;
        
        private string kind;
        
        private IList<System.String> labels;
        
        private string published;
        
        private Post.RepliesData replies;
        
        private string selfLink;
        
        private string title;
        
        private string updated;
        
        private string url;
        
        private Google.Apis.Requests.RequestError error;
        
        private string eTag;
        
        /// <summary>The author of this Post.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("author")]
        public virtual Post.AuthorData Author {
            get {
                return this.author;
            }
            set {
                this.author = value;
            }
        }
        
        /// <summary>Data about the blog containing this Post.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("blog")]
        public virtual Post.BlogData Blog {
            get {
                return this.blog;
            }
            set {
                this.blog = value;
            }
        }
        
        /// <summary>The content of the Post. May contain HTML markup.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("content")]
        public virtual string Content {
            get {
                return this.content;
            }
            set {
                this.content = value;
            }
        }
        
        /// <summary>The identifier of this Post.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id {
            get {
                return this.id;
            }
            set {
                this.id = value;
            }
        }
        
        /// <summary>The kind of this entity. Always blogger#post</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this.kind;
            }
            set {
                this.kind = value;
            }
        }
        
        /// <summary>The list of labels this Post was tagged with.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("labels")]
        public virtual IList<System.String> Labels {
            get {
                return this.labels;
            }
            set {
                this.labels = value;
            }
        }
        
        /// <summary>RFC 3339 date-time when this Post was published.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("published")]
        public virtual string Published {
            get {
                return this.published;
            }
            set {
                this.published = value;
            }
        }
        
        /// <summary>The container of comments on this Post.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("replies")]
        public virtual Post.RepliesData Replies {
            get {
                return this.replies;
            }
            set {
                this.replies = value;
            }
        }
        
        /// <summary>The API REST URL to fetch this resource from.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("selfLink")]
        public virtual string SelfLink {
            get {
                return this.selfLink;
            }
            set {
                this.selfLink = value;
            }
        }
        
        /// <summary>The title of the Post.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("title")]
        public virtual string Title {
            get {
                return this.title;
            }
            set {
                this.title = value;
            }
        }
        
        /// <summary>RFC 3339 date-time when this Post was last updated.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("updated")]
        public virtual string Updated {
            get {
                return this.updated;
            }
            set {
                this.updated = value;
            }
        }
        
        /// <summary>The URL where this Post is displayed.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("url")]
        public virtual string Url {
            get {
                return this.url;
            }
            set {
                this.url = value;
            }
        }
        
        [Newtonsoft.Json.JsonPropertyAttribute("error")]
        public virtual Google.Apis.Requests.RequestError Error {
            get {
                return this.error;
            }
            set {
                this.error = value;
            }
        }
        
        public virtual string ETag {
            get {
                return this.eTag;
            }
            set {
                this.eTag = value;
            }
        }
        
        /// <summary>The author of this Post.</summary>
        public class AuthorData {
            
            private string displayName;
            
            private string id;
            
            private AuthorData.ImageData image;
            
            private string url;
            
            /// <summary>The display name.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("displayName")]
            public virtual string DisplayName {
                get {
                    return this.displayName;
                }
                set {
                    this.displayName = value;
                }
            }
            
            /// <summary>The identifier of the Post creator.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("id")]
            public virtual string Id {
                get {
                    return this.id;
                }
                set {
                    this.id = value;
                }
            }
            
            /// <summary>The Post author&apos;s avatar.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("image")]
            public virtual AuthorData.ImageData Image {
                get {
                    return this.image;
                }
                set {
                    this.image = value;
                }
            }
            
            /// <summary>The URL of the Post creator&apos;s Profile page.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("url")]
            public virtual string Url {
                get {
                    return this.url;
                }
                set {
                    this.url = value;
                }
            }
            
            /// <summary>The Post author&apos;s avatar.</summary>
            public class ImageData {
                
                private string url;
                
                /// <summary>The Post author&apos;s avatar URL.</summary>
                [Newtonsoft.Json.JsonPropertyAttribute("url")]
                public virtual string Url {
                    get {
                        return this.url;
                    }
                    set {
                        this.url = value;
                    }
                }
            }
        }
        
        /// <summary>Data about the blog containing this Post.</summary>
        public class BlogData {
            
            private string id;
            
            /// <summary>The identifier of the Blog that contains this Post.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("id")]
            public virtual string Id {
                get {
                    return this.id;
                }
                set {
                    this.id = value;
                }
            }
        }
        
        /// <summary>The container of comments on this Post.</summary>
        public class RepliesData {
            
            private string selfLink;
            
            private string totalItems;
            
            /// <summary>The URL of the comments on this post.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("selfLink")]
            public virtual string SelfLink {
                get {
                    return this.selfLink;
                }
                set {
                    this.selfLink = value;
                }
            }
            
            /// <summary>The count of comments on this post.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("totalItems")]
            public virtual string TotalItems {
                get {
                    return this.totalItems;
                }
                set {
                    this.totalItems = value;
                }
            }
        }
    }
    
    public class PostList : Google.Apis.Requests.IDirectResponseSchema {
        
        private IList<Post> items;
        
        private string kind;
        
        private string nextPageToken;
        
        private string prevPageToken;
        
        private Google.Apis.Requests.RequestError error;
        
        private string eTag;
        
        /// <summary>The list of Posts for this Blog.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual IList<Post> Items {
            get {
                return this.items;
            }
            set {
                this.items = value;
            }
        }
        
        /// <summary>The kind of this entity. Always blogger#postList</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this.kind;
            }
            set {
                this.kind = value;
            }
        }
        
        /// <summary>Pagination token to fetch the next page, if one exists.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken {
            get {
                return this.nextPageToken;
            }
            set {
                this.nextPageToken = value;
            }
        }
        
        /// <summary>Pagination token to fetch the previous page, if one exists.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("prevPageToken")]
        public virtual string PrevPageToken {
            get {
                return this.prevPageToken;
            }
            set {
                this.prevPageToken = value;
            }
        }
        
        [Newtonsoft.Json.JsonPropertyAttribute("error")]
        public virtual Google.Apis.Requests.RequestError Error {
            get {
                return this.error;
            }
            set {
                this.error = value;
            }
        }
        
        public virtual string ETag {
            get {
                return this.eTag;
            }
            set {
                this.eTag = value;
            }
        }
    }
    
    public class User : Google.Apis.Requests.IDirectResponseSchema {
        
        private string about;
        
        private User.BlogsData blogs;
        
        private string created;
        
        private string displayName;
        
        private string id;
        
        private string kind;
        
        private User.LocaleData locale;
        
        private string selfLink;
        
        private string url;
        
        private Google.Apis.Requests.RequestError error;
        
        private string eTag;
        
        /// <summary>Profile summary information.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("about")]
        public virtual string About {
            get {
                return this.about;
            }
            set {
                this.about = value;
            }
        }
        
        /// <summary>The container of blogs for this user.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("blogs")]
        public virtual User.BlogsData Blogs {
            get {
                return this.blogs;
            }
            set {
                this.blogs = value;
            }
        }
        
        /// <summary>The timestamp of when this profile was created, in seconds since epoch.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("created")]
        public virtual string Created {
            get {
                return this.created;
            }
            set {
                this.created = value;
            }
        }
        
        /// <summary>The display name.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("displayName")]
        public virtual string DisplayName {
            get {
                return this.displayName;
            }
            set {
                this.displayName = value;
            }
        }
        
        /// <summary>The identifier for this User.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id {
            get {
                return this.id;
            }
            set {
                this.id = value;
            }
        }
        
        /// <summary>The kind of this entity. Always blogger#user</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this.kind;
            }
            set {
                this.kind = value;
            }
        }
        
        /// <summary>This user&apos;s locale</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("locale")]
        public virtual User.LocaleData Locale {
            get {
                return this.locale;
            }
            set {
                this.locale = value;
            }
        }
        
        /// <summary>The API REST URL to fetch this resource from.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("selfLink")]
        public virtual string SelfLink {
            get {
                return this.selfLink;
            }
            set {
                this.selfLink = value;
            }
        }
        
        /// <summary>The user&apos;s profile page.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("url")]
        public virtual string Url {
            get {
                return this.url;
            }
            set {
                this.url = value;
            }
        }
        
        [Newtonsoft.Json.JsonPropertyAttribute("error")]
        public virtual Google.Apis.Requests.RequestError Error {
            get {
                return this.error;
            }
            set {
                this.error = value;
            }
        }
        
        public virtual string ETag {
            get {
                return this.eTag;
            }
            set {
                this.eTag = value;
            }
        }
        
        /// <summary>The container of blogs for this user.</summary>
        public class BlogsData {
            
            private string selfLink;
            
            /// <summary>The URL of the Blogs for this user.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("selfLink")]
            public virtual string SelfLink {
                get {
                    return this.selfLink;
                }
                set {
                    this.selfLink = value;
                }
            }
        }
        
        /// <summary>This user&apos;s locale</summary>
        public class LocaleData {
            
            private string country;
            
            private string language;
            
            private string variant;
            
            /// <summary>The user&apos;s country setting.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("country")]
            public virtual string Country {
                get {
                    return this.country;
                }
                set {
                    this.country = value;
                }
            }
            
            /// <summary>The user&apos;s language setting.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("language")]
            public virtual string Language {
                get {
                    return this.language;
                }
                set {
                    this.language = value;
                }
            }
            
            /// <summary>The user&apos;s language variant setting.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("variant")]
            public virtual string Variant {
                get {
                    return this.variant;
                }
                set {
                    this.variant = value;
                }
            }
        }
    }
}
namespace Google.Apis.Blogger.v2 {
    using System;
    using System.IO;
    using System.Collections.Generic;
    using Google.Apis;
    using Google.Apis.Discovery;
    
    
    public partial class BloggerService : Google.Apis.Discovery.IRequestProvider {
        
        private Google.Apis.Discovery.IService genericService;
        
        private Google.Apis.Authentication.IAuthenticator authenticator;
        
        private const string DiscoveryDocument = "{\"kind\":\"discovery#restDescription\",\"id\":\"blogger:v2\",\"name\":\"blogger\",\"version\":" +
            "\"v2\",\"title\":\"Blogger API\",\"description\":\"API for access to the data within Blog" +
            "ger.\",\"icons\":{\"x16\":\"http://www.google.com/images/icons/product/blogger-16.png\"" +
            ",\"x32\":\"http://www.google.com/images/icons/product/blogger-32.png\"},\"documentati" +
            "onLink\":\"https://code.google.com/apis/blogger/docs/2.0/json/getting_started.html" +
            "\",\"labels\":[\"labs\"],\"protocol\":\"rest\",\"basePath\":\"/blogger/v2/\",\"parameters\":{\"a" +
            "lt\":{\"type\":\"string\",\"description\":\"Data format for the response.\",\"default\":\"js" +
            "on\",\"enum\":[\"json\"],\"enumDescriptions\":[\"Responses with Content-Type of applicat" +
            "ion/json\"],\"location\":\"query\"},\"fields\":{\"type\":\"string\",\"description\":\"Selector" +
            " specifying which fields to include in a partial response.\",\"location\":\"query\"}," +
            "\"key\":{\"type\":\"string\",\"description\":\"API key. Your API key identifies your proj" +
            "ect and provides you with API access, quota, and reports. Required unless you pr" +
            "ovide an OAuth 2.0 token.\",\"location\":\"query\"},\"oauth_token\":{\"type\":\"string\",\"d" +
            "escription\":\"OAuth 2.0 token for the current user.\",\"location\":\"query\"},\"prettyP" +
            "rint\":{\"type\":\"boolean\",\"description\":\"Returns response with indentations and li" +
            "ne breaks.\",\"default\":\"true\",\"location\":\"query\"},\"userIp\":{\"type\":\"string\",\"desc" +
            "ription\":\"IP address of the site where the request originates. Use this if you w" +
            "ant to enforce per-user limits.\",\"location\":\"query\"}},\"auth\":{\"oauth2\":{\"scopes\"" +
            ":{\"https://www.googleapis.com/auth/blogger\":{\"description\":\"Manage your Blogger " +
            "account\"}}}},\"schemas\":{\"Blog\":{\"id\":\"Blog\",\"type\":\"object\",\"properties\":{\"descr" +
            "iption\":{\"type\":\"string\",\"description\":\"The description of this blog. This is di" +
            "splayed underneath the title.\"},\"id\":{\"type\":\"string\",\"description\":\"The identif" +
            "ier for this resource.\",\"format\":\"int64\"},\"kind\":{\"type\":\"string\",\"description\":" +
            "\"The kind of this entry. Always blogger#blog\",\"default\":\"blogger#blog\"},\"locale\"" +
            ":{\"type\":\"object\",\"description\":\"The locale this Blog is set to.\",\"properties\":{" +
            "\"country\":{\"type\":\"string\",\"description\":\"The country this blog\'s locale is set " +
            "to.\"},\"language\":{\"type\":\"string\",\"description\":\"The language this blog is autho" +
            "red in.\"},\"variant\":{\"type\":\"string\",\"description\":\"The language variant this bl" +
            "og is authored in.\"}}},\"name\":{\"type\":\"string\",\"description\":\"The name of this b" +
            "log. This is displayed as the title.\"},\"pages\":{\"type\":\"object\",\"description\":\"T" +
            "he container of pages in this blog.\",\"properties\":{\"selfLink\":{\"type\":\"string\",\"" +
            "description\":\"The URL of the container for pages in this blog.\"},\"totalItems\":{\"" +
            "type\":\"integer\",\"description\":\"The count of pages in this blog.\",\"format\":\"int32" +
            "\"}}},\"posts\":{\"type\":\"object\",\"description\":\"The container of posts in this blog" +
            ".\",\"properties\":{\"selfLink\":{\"type\":\"string\",\"description\":\"The URL of the conta" +
            "iner for posts in this blog.\"},\"totalItems\":{\"type\":\"integer\",\"description\":\"The" +
            " count of posts in this blog.\",\"format\":\"int32\"}}},\"published\":{\"type\":\"string\"," +
            "\"description\":\"RFC 3339 date-time when this blog was published.\",\"format\":\"date-" +
            "time\"},\"selfLink\":{\"type\":\"string\",\"description\":\"The API REST URL to fetch this" +
            " resource from.\"},\"updated\":{\"type\":\"string\",\"description\":\"RFC 3339 date-time w" +
            "hen this blog was last updated.\",\"format\":\"date-time\"},\"url\":{\"type\":\"string\",\"d" +
            "escription\":\"The URL where this blog is published.\"}}},\"BlogList\":{\"id\":\"BlogLis" +
            "t\",\"type\":\"object\",\"properties\":{\"items\":{\"type\":\"array\",\"description\":\"The list" +
            " of Blogs this user has Authorship or Admin rights over.\",\"items\":{\"$ref\":\"Blog\"" +
            "}},\"kind\":{\"type\":\"string\",\"description\":\"The kind of this entity. Always blogge" +
            "r#blogList\",\"default\":\"blogger#blogList\"}}},\"Comment\":{\"id\":\"Comment\",\"type\":\"ob" +
            "ject\",\"properties\":{\"author\":{\"type\":\"object\",\"description\":\"The author of this " +
            "Comment.\",\"properties\":{\"displayName\":{\"type\":\"string\",\"description\":\"The displa" +
            "y name.\"},\"id\":{\"type\":\"string\",\"description\":\"The identifier of the Comment cre" +
            "ator.\",\"format\":\"int64\"},\"image\":{\"type\":\"object\",\"description\":\"The comment cre" +
            "ator\'s avatar.\",\"properties\":{\"url\":{\"type\":\"string\",\"description\":\"The comment " +
            "creator\'s avatar URL.\"}}},\"url\":{\"type\":\"string\",\"description\":\"The URL of the C" +
            "omment creator\'s Profile page.\"}}},\"blog\":{\"type\":\"object\",\"description\":\"Data a" +
            "bout the blog containing this comment.\",\"properties\":{\"id\":{\"type\":\"string\",\"des" +
            "cription\":\"The identifier of the blog containing this comment.\",\"format\":\"int64\"" +
            "}}},\"content\":{\"type\":\"string\",\"description\":\"The actual content of the comment." +
            " May include HTML markup.\"},\"id\":{\"type\":\"string\",\"description\":\"The identifier " +
            "for this resource.\",\"format\":\"int64\"},\"kind\":{\"type\":\"string\",\"description\":\"The" +
            " kind of this entry. Always blogger#comment\",\"default\":\"blogger#comment\"},\"post\"" +
            ":{\"type\":\"object\",\"description\":\"Data about the post containing this comment.\",\"" +
            "properties\":{\"id\":{\"type\":\"string\",\"description\":\"The identifier of the post con" +
            "taining this comment.\",\"format\":\"int64\"}}},\"published\":{\"type\":\"string\",\"descrip" +
            "tion\":\"RFC 3339 date-time when this comment was published.\",\"format\":\"date-time\"" +
            "},\"selfLink\":{\"type\":\"string\",\"description\":\"The API REST URL to fetch this reso" +
            "urce from.\"},\"updated\":{\"type\":\"string\",\"description\":\"RFC 3339 date-time when t" +
            "his comment was last updated.\",\"format\":\"date-time\"}}},\"CommentList\":{\"id\":\"Comm" +
            "entList\",\"type\":\"object\",\"properties\":{\"items\":{\"type\":\"array\",\"description\":\"Th" +
            "e List of Comments for a Post.\",\"items\":{\"$ref\":\"Comment\"}},\"kind\":{\"type\":\"stri" +
            "ng\",\"description\":\"The kind of this entry. Always blogger#commentList\",\"default\"" +
            ":\"blogger#commentList\"},\"nextPageToken\":{\"type\":\"string\",\"description\":\"Paginati" +
            "on token to fetch the next page, if one exists.\"},\"prevPageToken\":{\"type\":\"strin" +
            "g\",\"description\":\"Pagination token to fetch the previous page, if one exists.\"}}" +
            "},\"Page\":{\"id\":\"Page\",\"type\":\"object\",\"properties\":{\"author\":{\"type\":\"object\",\"d" +
            "escription\":\"The author of this Page.\",\"properties\":{\"displayName\":{\"type\":\"stri" +
            "ng\",\"description\":\"The display name.\"},\"id\":{\"type\":\"string\",\"description\":\"The " +
            "identifier of the Page creator.\",\"format\":\"int64\"},\"image\":{\"type\":\"object\",\"des" +
            "cription\":\"The page author\'s avatar.\",\"properties\":{\"url\":{\"type\":\"string\",\"desc" +
            "ription\":\"The page author\'s avatar URL.\"}}},\"url\":{\"type\":\"string\",\"description\"" +
            ":\"The URL of the Page creator\'s Profile page.\"}}},\"blog\":{\"type\":\"object\",\"descr" +
            "iption\":\"Data about the blog containing this Page.\",\"properties\":{\"id\":{\"type\":\"" +
            "string\",\"description\":\"The identifier of the blog containing this page.\",\"format" +
            "\":\"int64\"}}},\"content\":{\"type\":\"string\",\"description\":\"The body content of this " +
            "Page, in HTML.\"},\"id\":{\"type\":\"string\",\"description\":\"The identifier for this re" +
            "source.\",\"format\":\"int64\"},\"kind\":{\"type\":\"string\",\"description\":\"The kind of th" +
            "is entity. Always blogger#page\",\"default\":\"blogger#page\"},\"published\":{\"type\":\"s" +
            "tring\",\"description\":\"RFC 3339 date-time when this Page was published.\",\"format\"" +
            ":\"date-time\"},\"selfLink\":{\"type\":\"string\",\"description\":\"The API REST URL to fet" +
            "ch this resource from.\"},\"title\":{\"type\":\"string\",\"description\":\"The title of th" +
            "is entity. This is the name displayed in the Admin user interface.\"},\"updated\":{" +
            "\"type\":\"string\",\"description\":\"RFC 3339 date-time when this Page was last update" +
            "d.\",\"format\":\"date-time\"},\"url\":{\"type\":\"string\",\"description\":\"The URL that thi" +
            "s Page is displayed at.\"}}},\"PageList\":{\"id\":\"PageList\",\"type\":\"object\",\"propert" +
            "ies\":{\"items\":{\"type\":\"array\",\"description\":\"The list of Pages for a Blog.\",\"ite" +
            "ms\":{\"$ref\":\"Page\"}},\"kind\":{\"type\":\"string\",\"description\":\"The kind of this ent" +
            "ity. Always blogger#pageList\",\"default\":\"blogger#pageList\"}}},\"Post\":{\"id\":\"Post" +
            "\",\"type\":\"object\",\"properties\":{\"author\":{\"type\":\"object\",\"description\":\"The aut" +
            "hor of this Post.\",\"properties\":{\"displayName\":{\"type\":\"string\",\"description\":\"T" +
            "he display name.\"},\"id\":{\"type\":\"string\",\"description\":\"The identifier of the Po" +
            "st creator.\",\"format\":\"int64\"},\"image\":{\"type\":\"object\",\"description\":\"The Post " +
            "author\'s avatar.\",\"properties\":{\"url\":{\"type\":\"string\",\"description\":\"The Post a" +
            "uthor\'s avatar URL.\"}}},\"url\":{\"type\":\"string\",\"description\":\"The URL of the Pos" +
            "t creator\'s Profile page.\"}}},\"blog\":{\"type\":\"object\",\"description\":\"Data about " +
            "the blog containing this Post.\",\"properties\":{\"id\":{\"type\":\"string\",\"description" +
            "\":\"The identifier of the Blog that contains this Post.\",\"format\":\"int64\"}}},\"con" +
            "tent\":{\"type\":\"string\",\"description\":\"The content of the Post. May contain HTML " +
            "markup.\"},\"id\":{\"type\":\"string\",\"description\":\"The identifier of this Post.\",\"fo" +
            "rmat\":\"int64\"},\"kind\":{\"type\":\"string\",\"description\":\"The kind of this entity. A" +
            "lways blogger#post\",\"default\":\"blogger#post\"},\"labels\":{\"type\":\"array\",\"descript" +
            "ion\":\"The list of labels this Post was tagged with.\",\"items\":{\"type\":\"string\"}}," +
            "\"published\":{\"type\":\"string\",\"description\":\"RFC 3339 date-time when this Post wa" +
            "s published.\",\"format\":\"date-time\"},\"replies\":{\"type\":\"object\",\"description\":\"Th" +
            "e container of comments on this Post.\",\"properties\":{\"selfLink\":{\"type\":\"string\"" +
            ",\"description\":\"The URL of the comments on this post.\"},\"totalItems\":{\"type\":\"st" +
            "ring\",\"description\":\"The count of comments on this post.\",\"format\":\"int64\"}}},\"s" +
            "elfLink\":{\"type\":\"string\",\"description\":\"The API REST URL to fetch this resource" +
            " from.\"},\"title\":{\"type\":\"string\",\"description\":\"The title of the Post.\"},\"updat" +
            "ed\":{\"type\":\"string\",\"description\":\"RFC 3339 date-time when this Post was last u" +
            "pdated.\",\"format\":\"date-time\"},\"url\":{\"type\":\"string\",\"description\":\"The URL whe" +
            "re this Post is displayed.\"}}},\"PostList\":{\"id\":\"PostList\",\"type\":\"object\",\"prop" +
            "erties\":{\"items\":{\"type\":\"array\",\"description\":\"The list of Posts for this Blog." +
            "\",\"items\":{\"$ref\":\"Post\"}},\"kind\":{\"type\":\"string\",\"description\":\"The kind of th" +
            "is entity. Always blogger#postList\",\"default\":\"blogger#postList\"},\"nextPageToken" +
            "\":{\"type\":\"string\",\"description\":\"Pagination token to fetch the next page, if on" +
            "e exists.\"},\"prevPageToken\":{\"type\":\"string\",\"description\":\"Pagination token to " +
            "fetch the previous page, if one exists.\"}}},\"User\":{\"id\":\"User\",\"type\":\"object\"," +
            "\"properties\":{\"about\":{\"type\":\"string\",\"description\":\"Profile summary informatio" +
            "n.\"},\"blogs\":{\"type\":\"object\",\"description\":\"The container of blogs for this use" +
            "r.\",\"properties\":{\"selfLink\":{\"type\":\"string\",\"description\":\"The URL of the Blog" +
            "s for this user.\"}}},\"created\":{\"type\":\"string\",\"description\":\"The timestamp of " +
            "when this profile was created, in seconds since epoch.\",\"format\":\"date-time\"},\"d" +
            "isplayName\":{\"type\":\"string\",\"description\":\"The display name.\"},\"id\":{\"type\":\"st" +
            "ring\",\"description\":\"The identifier for this User.\",\"format\":\"int64\"},\"kind\":{\"t" +
            "ype\":\"string\",\"description\":\"The kind of this entity. Always blogger#user\",\"defa" +
            "ult\":\"blogger#user\"},\"locale\":{\"type\":\"object\",\"description\":\"This user\'s locale" +
            "\",\"properties\":{\"country\":{\"type\":\"string\",\"description\":\"The user\'s country set" +
            "ting.\"},\"language\":{\"type\":\"string\",\"description\":\"The user\'s language setting.\"" +
            "},\"variant\":{\"type\":\"string\",\"description\":\"The user\'s language variant setting." +
            "\"}}},\"selfLink\":{\"type\":\"string\",\"description\":\"The API REST URL to fetch this r" +
            "esource from.\"},\"url\":{\"type\":\"string\",\"description\":\"The user\'s profile page.\"}" +
            "}}},\"resources\":{\"blogs\":{\"methods\":{\"get\":{\"id\":\"blogger.blogs.get\",\"path\":\"blo" +
            "gs/{blogId}\",\"httpMethod\":\"GET\",\"description\":\"Gets one blog by id.\",\"parameters" +
            "\":{\"blogId\":{\"type\":\"string\",\"description\":\"The ID of the blog to get.\",\"require" +
            "d\":true,\"location\":\"path\"}},\"parameterOrder\":[\"blogId\"],\"response\":{\"$ref\":\"Blog" +
            "\"},\"scopes\":[\"https://www.googleapis.com/auth/blogger\"]}}},\"comments\":{\"methods\"" +
            ":{\"get\":{\"id\":\"blogger.comments.get\",\"path\":\"blogs/{blogId}/posts/{postId}/comme" +
            "nts/{commentId}\",\"httpMethod\":\"GET\",\"description\":\"Gets one comment by id.\",\"par" +
            "ameters\":{\"blogId\":{\"type\":\"string\",\"description\":\"ID of the blog to containing " +
            "the comment.\",\"required\":true,\"location\":\"path\"},\"commentId\":{\"type\":\"string\",\"d" +
            "escription\":\"The ID of the comment to get.\",\"required\":true,\"location\":\"path\"},\"" +
            "postId\":{\"type\":\"string\",\"description\":\"ID of the post to fetch posts from.\",\"re" +
            "quired\":true,\"location\":\"path\"}},\"parameterOrder\":[\"blogId\",\"postId\",\"commentId\"" +
            "],\"response\":{\"$ref\":\"Comment\"},\"scopes\":[\"https://www.googleapis.com/auth/blogg" +
            "er\"]},\"list\":{\"id\":\"blogger.comments.list\",\"path\":\"blogs/{blogId}/posts/{postId}" +
            "/comments\",\"httpMethod\":\"GET\",\"description\":\"Retrieves the comments for a blog, " +
            "possibly filtered.\",\"parameters\":{\"blogId\":{\"type\":\"string\",\"description\":\"ID of" +
            " the blog to fetch comments from.\",\"required\":true,\"location\":\"path\"},\"fetchBodi" +
            "es\":{\"type\":\"boolean\",\"description\":\"Whether the body content of the comments is" +
            " included.\",\"location\":\"query\"},\"maxResults\":{\"type\":\"integer\",\"description\":\"Ma" +
            "ximum number of comments to include in the result.\",\"format\":\"uint32\",\"location\"" +
            ":\"query\"},\"pageToken\":{\"type\":\"string\",\"description\":\"Continuation token if requ" +
            "est is paged.\",\"location\":\"query\"},\"postId\":{\"type\":\"string\",\"description\":\"ID o" +
            "f the post to fetch posts from.\",\"required\":true,\"location\":\"path\"},\"startDate\":" +
            "{\"type\":\"string\",\"description\":\"Earliest date of comment to fetch.\",\"location\":\"" +
            "query\"}},\"parameterOrder\":[\"blogId\",\"postId\"],\"response\":{\"$ref\":\"CommentList\"}," +
            "\"scopes\":[\"https://www.googleapis.com/auth/blogger\"]}}},\"pages\":{\"methods\":{\"get" +
            "\":{\"id\":\"blogger.pages.get\",\"path\":\"blogs/{blogId}/pages/{pageId}\",\"httpMethod\":" +
            "\"GET\",\"description\":\"Gets one blog page by id.\",\"parameters\":{\"blogId\":{\"type\":\"" +
            "string\",\"description\":\"ID of the blog containing the page.\",\"required\":true,\"loc" +
            "ation\":\"path\"},\"pageId\":{\"type\":\"string\",\"description\":\"The ID of the page to ge" +
            "t.\",\"required\":true,\"location\":\"path\"}},\"parameterOrder\":[\"blogId\",\"pageId\"],\"re" +
            "sponse\":{\"$ref\":\"Page\"},\"scopes\":[\"https://www.googleapis.com/auth/blogger\"]},\"l" +
            "ist\":{\"id\":\"blogger.pages.list\",\"path\":\"blogs/{blogId}/pages\",\"httpMethod\":\"GET\"" +
            ",\"description\":\"Retrieves pages for a blog, possibly filtered.\",\"parameters\":{\"b" +
            "logId\":{\"type\":\"string\",\"description\":\"ID of the blog to fetch pages from.\",\"req" +
            "uired\":true,\"location\":\"path\"},\"fetchBodies\":{\"type\":\"boolean\",\"description\":\"Wh" +
            "ether to retrieve the Page bodies.\",\"location\":\"query\"}},\"parameterOrder\":[\"blog" +
            "Id\"],\"response\":{\"$ref\":\"PageList\"},\"scopes\":[\"https://www.googleapis.com/auth/b" +
            "logger\"]}}},\"posts\":{\"methods\":{\"get\":{\"id\":\"blogger.posts.get\",\"path\":\"blogs/{b" +
            "logId}/posts/{postId}\",\"httpMethod\":\"GET\",\"description\":\"Get a post by id.\",\"par" +
            "ameters\":{\"blogId\":{\"type\":\"string\",\"description\":\"ID of the blog to fetch the p" +
            "ost from.\",\"required\":true,\"location\":\"path\"},\"postId\":{\"type\":\"string\",\"descrip" +
            "tion\":\"The ID of the post\",\"required\":true,\"location\":\"path\"}},\"parameterOrder\":" +
            "[\"blogId\",\"postId\"],\"response\":{\"$ref\":\"Post\"},\"scopes\":[\"https://www.googleapis" +
            ".com/auth/blogger\"]},\"list\":{\"id\":\"blogger.posts.list\",\"path\":\"blogs/{blogId}/po" +
            "sts\",\"httpMethod\":\"GET\",\"description\":\"Retrieves a list of posts, possibly filte" +
            "red.\",\"parameters\":{\"blogId\":{\"type\":\"string\",\"description\":\"ID of the blog to f" +
            "etch posts from.\",\"required\":true,\"location\":\"path\"},\"fetchBodies\":{\"type\":\"bool" +
            "ean\",\"description\":\"Whether the body content of posts is included.\",\"location\":\"" +
            "query\"},\"maxResults\":{\"type\":\"integer\",\"description\":\"Maximum number of posts to" +
            " fetch.\",\"format\":\"uint32\",\"location\":\"query\"},\"pageToken\":{\"type\":\"string\",\"des" +
            "cription\":\"Continuation token if the request is paged.\",\"location\":\"query\"},\"sta" +
            "rtDate\":{\"type\":\"string\",\"description\":\"Earliest post date to fetch.\",\"location\"" +
            ":\"query\"}},\"parameterOrder\":[\"blogId\"],\"response\":{\"$ref\":\"PostList\"},\"scopes\":[" +
            "\"https://www.googleapis.com/auth/blogger\"]}}},\"users\":{\"methods\":{\"get\":{\"id\":\"b" +
            "logger.users.get\",\"path\":\"users/{userId}\",\"httpMethod\":\"GET\",\"description\":\"Gets" +
            " one user by id.\",\"parameters\":{\"userId\":{\"type\":\"string\",\"description\":\"The ID " +
            "of the user to get.\",\"required\":true,\"location\":\"path\"}},\"parameterOrder\":[\"user" +
            "Id\"],\"response\":{\"$ref\":\"User\"},\"scopes\":[\"https://www.googleapis.com/auth/blogg" +
            "er\"]}},\"resources\":{\"blogs\":{\"methods\":{\"list\":{\"id\":\"blogger.users.blogs.list\"," +
            "\"path\":\"users/{userId}/blogs\",\"httpMethod\":\"GET\",\"description\":\"Retrieves a list" +
            " of blogs, possibly filtered.\",\"parameters\":{\"userId\":{\"type\":\"string\",\"descript" +
            "ion\":\"ID of the user whose blogs are to be fetched.\",\"required\":true,\"location\":" +
            "\"path\"}},\"parameterOrder\":[\"userId\"],\"response\":{\"$ref\":\"BlogList\"},\"scopes\":[\"h" +
            "ttps://www.googleapis.com/auth/blogger\"]}}}}}}}";
        
        private const string Version = "v2";
        
        private const string Name = "blogger";
        
        private const string BaseUri = "https://www.googleapis.com/blogger/v2/";
        
        private const Google.Apis.Discovery.DiscoveryVersion DiscoveryVersionUsed = Google.Apis.Discovery.DiscoveryVersion.Version_1_0;
        
        private string key;
        
        protected BloggerService(Google.Apis.Discovery.IService genericService, Google.Apis.Authentication.IAuthenticator authenticator) {
            this.genericService = genericService;
            this.authenticator = authenticator;
            this.blogs = new BlogsResource(this);
            this.comments = new CommentsResource(this);
            this.pages = new PagesResource(this);
            this.posts = new PostsResource(this);
            this.users = new UsersResource(this);
        }
        
        public BloggerService() : 
                this(Google.Apis.Authentication.NullAuthenticator.Instance) {
        }
        
        public BloggerService(Google.Apis.Authentication.IAuthenticator authenticator) : 
                this(new Google.Apis.Discovery.DiscoveryService(new Google.Apis.Discovery.StringDiscoveryDevice(DiscoveryDocument)).GetService(BloggerService.DiscoveryVersionUsed, new Google.Apis.Discovery.FactoryParameterV1_0(new System.Uri(BloggerService.BaseUri))), authenticator) {
        }
        
        /// <summary>Sets the API-Key (or DeveloperKey) which this service uses for all requests</summary>
        public virtual string Key {
            get {
                return this.key;
            }
            set {
                this.key = value;
            }
        }
        
        public virtual Google.Apis.Requests.IRequest CreateRequest(string resource, string method) {
            Google.Apis.Requests.IRequest request = this.genericService.CreateRequest(resource, method);
            if (!string.IsNullOrEmpty(Key)) {
                request = request.WithKey(this.Key);
            }
            return request.WithAuthentication(authenticator);
        }
        
        public virtual void RegisterSerializer(Google.Apis.ISerializer serializer) {
            genericService.Serializer = serializer;
        }
        
        public virtual string SerializeObject(object obj) {
            return genericService.SerializeRequest(obj);
        }
        
        public virtual T DeserializeResponse<T>(Google.Apis.Requests.IResponse response)
         {
            return genericService.DeserializeResponse<T>(response);
        }
        
        /// <summary>A list of all OAuth2.0 scopes. Each of these scopes relates to a permission or group of permissions that different methods of this API may need.</summary>
        public enum Scopes {
            
            /// <summary>Manage your Blogger account</summary>
            [Google.Apis.Util.StringValueAttribute("https://www.googleapis.com/auth/blogger")]
            Blogger,
        }
    }
    
    public class BlogsResource {
        
        private Google.Apis.Discovery.IRequestProvider service;
        
        private const string Resource = "blogs";
        
        public BlogsResource(BloggerService service) {
            this.service = service;
        }
        
        /// <summary>Gets one blog by id.</summary>
        /// <param name="blogId">Required - The ID of the blog to get.</param>
        public virtual GetRequest Get(string blogId) {
            return new GetRequest(service, blogId);
        }
        
        public class GetRequest : Google.Apis.Requests.ServiceRequest<Google.Apis.Blogger.v2.Data.Blog> {
            
            private string blogId;
            
            public GetRequest(Google.Apis.Discovery.IRequestProvider service, string blogId) : 
                    base(service) {
                this.blogId = blogId;
            }
            
            /// <summary>The ID of the blog to get.</summary>
            [Google.Apis.Util.RequestParameterAttribute("blogId")]
            public virtual string BlogId {
                get {
                    return this.blogId;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "blogs";
                }
            }
            
            protected override string MethodName {
                get {
                    return "get";
                }
            }
        }
    }
    
    public class CommentsResource {
        
        private Google.Apis.Discovery.IRequestProvider service;
        
        private const string Resource = "comments";
        
        public CommentsResource(BloggerService service) {
            this.service = service;
        }
        
        /// <summary>Gets one comment by id.</summary>
        /// <param name="blogId">Required - ID of the blog to containing the comment.</param>
        /// <param name="postId">Required - ID of the post to fetch posts from.</param>
        /// <param name="commentId">Required - The ID of the comment to get.</param>
        public virtual GetRequest Get(string blogId, string postId, string commentId) {
            return new GetRequest(service, blogId, postId, commentId);
        }
        
        /// <summary>Retrieves the comments for a blog, possibly filtered.</summary>
        /// <param name="blogId">Required - ID of the blog to fetch comments from.</param>
        /// <param name="postId">Required - ID of the post to fetch posts from.</param>
        public virtual ListRequest List(string blogId, string postId) {
            return new ListRequest(service, blogId, postId);
        }
        
        public class GetRequest : Google.Apis.Requests.ServiceRequest<Google.Apis.Blogger.v2.Data.Comment> {
            
            private string blogId;
            
            private string commentId;
            
            private string postId;
            
            public GetRequest(Google.Apis.Discovery.IRequestProvider service, string blogId, string postId, string commentId) : 
                    base(service) {
                this.blogId = blogId;
                this.postId = postId;
                this.commentId = commentId;
            }
            
            /// <summary>ID of the blog to containing the comment.</summary>
            [Google.Apis.Util.RequestParameterAttribute("blogId")]
            public virtual string BlogId {
                get {
                    return this.blogId;
                }
            }
            
            /// <summary>The ID of the comment to get.</summary>
            [Google.Apis.Util.RequestParameterAttribute("commentId")]
            public virtual string CommentId {
                get {
                    return this.commentId;
                }
            }
            
            /// <summary>ID of the post to fetch posts from.</summary>
            [Google.Apis.Util.RequestParameterAttribute("postId")]
            public virtual string PostId {
                get {
                    return this.postId;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "comments";
                }
            }
            
            protected override string MethodName {
                get {
                    return "get";
                }
            }
        }
        
        public class ListRequest : Google.Apis.Requests.ServiceRequest<Google.Apis.Blogger.v2.Data.CommentList> {
            
            private string blogId;
            
            private System.Boolean? fetchBodies;
            
            private System.Int64? maxResults;
            
            private string pageToken;
            
            private string postId;
            
            private string startDate;
            
            public ListRequest(Google.Apis.Discovery.IRequestProvider service, string blogId, string postId) : 
                    base(service) {
                this.blogId = blogId;
                this.postId = postId;
            }
            
            /// <summary>ID of the blog to fetch comments from.</summary>
            [Google.Apis.Util.RequestParameterAttribute("blogId")]
            public virtual string BlogId {
                get {
                    return this.blogId;
                }
            }
            
            /// <summary>Whether the body content of the comments is included.</summary>
            [Google.Apis.Util.RequestParameterAttribute("fetchBodies")]
            public virtual System.Boolean? FetchBodies {
                get {
                    return this.fetchBodies;
                }
                set {
                    this.fetchBodies = value;
                }
            }
            
            /// <summary>Maximum number of comments to include in the result.</summary>
            [Google.Apis.Util.RequestParameterAttribute("maxResults")]
            public virtual System.Int64? MaxResults {
                get {
                    return this.maxResults;
                }
                set {
                    this.maxResults = value;
                }
            }
            
            /// <summary>Continuation token if request is paged.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken")]
            public virtual string PageToken {
                get {
                    return this.pageToken;
                }
                set {
                    this.pageToken = value;
                }
            }
            
            /// <summary>ID of the post to fetch posts from.</summary>
            [Google.Apis.Util.RequestParameterAttribute("postId")]
            public virtual string PostId {
                get {
                    return this.postId;
                }
            }
            
            /// <summary>Earliest date of comment to fetch.</summary>
            [Google.Apis.Util.RequestParameterAttribute("startDate")]
            public virtual string StartDate {
                get {
                    return this.startDate;
                }
                set {
                    this.startDate = value;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "comments";
                }
            }
            
            protected override string MethodName {
                get {
                    return "list";
                }
            }
        }
    }
    
    public class PagesResource {
        
        private Google.Apis.Discovery.IRequestProvider service;
        
        private const string Resource = "pages";
        
        public PagesResource(BloggerService service) {
            this.service = service;
        }
        
        /// <summary>Gets one blog page by id.</summary>
        /// <param name="blogId">Required - ID of the blog containing the page.</param>
        /// <param name="pageId">Required - The ID of the page to get.</param>
        public virtual GetRequest Get(string blogId, string pageId) {
            return new GetRequest(service, blogId, pageId);
        }
        
        /// <summary>Retrieves pages for a blog, possibly filtered.</summary>
        /// <param name="blogId">Required - ID of the blog to fetch pages from.</param>
        public virtual ListRequest List(string blogId) {
            return new ListRequest(service, blogId);
        }
        
        public class GetRequest : Google.Apis.Requests.ServiceRequest<Google.Apis.Blogger.v2.Data.Page> {
            
            private string blogId;
            
            private string pageId;
            
            public GetRequest(Google.Apis.Discovery.IRequestProvider service, string blogId, string pageId) : 
                    base(service) {
                this.blogId = blogId;
                this.pageId = pageId;
            }
            
            /// <summary>ID of the blog containing the page.</summary>
            [Google.Apis.Util.RequestParameterAttribute("blogId")]
            public virtual string BlogId {
                get {
                    return this.blogId;
                }
            }
            
            /// <summary>The ID of the page to get.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageId")]
            public virtual string PageId {
                get {
                    return this.pageId;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "pages";
                }
            }
            
            protected override string MethodName {
                get {
                    return "get";
                }
            }
        }
        
        public class ListRequest : Google.Apis.Requests.ServiceRequest<Google.Apis.Blogger.v2.Data.PageList> {
            
            private string blogId;
            
            private System.Boolean? fetchBodies;
            
            public ListRequest(Google.Apis.Discovery.IRequestProvider service, string blogId) : 
                    base(service) {
                this.blogId = blogId;
            }
            
            /// <summary>ID of the blog to fetch pages from.</summary>
            [Google.Apis.Util.RequestParameterAttribute("blogId")]
            public virtual string BlogId {
                get {
                    return this.blogId;
                }
            }
            
            /// <summary>Whether to retrieve the Page bodies.</summary>
            [Google.Apis.Util.RequestParameterAttribute("fetchBodies")]
            public virtual System.Boolean? FetchBodies {
                get {
                    return this.fetchBodies;
                }
                set {
                    this.fetchBodies = value;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "pages";
                }
            }
            
            protected override string MethodName {
                get {
                    return "list";
                }
            }
        }
    }
    
    public class PostsResource {
        
        private Google.Apis.Discovery.IRequestProvider service;
        
        private const string Resource = "posts";
        
        public PostsResource(BloggerService service) {
            this.service = service;
        }
        
        /// <summary>Get a post by id.</summary>
        /// <param name="blogId">Required - ID of the blog to fetch the post from.</param>
        /// <param name="postId">Required - The ID of the post</param>
        public virtual GetRequest Get(string blogId, string postId) {
            return new GetRequest(service, blogId, postId);
        }
        
        /// <summary>Retrieves a list of posts, possibly filtered.</summary>
        /// <param name="blogId">Required - ID of the blog to fetch posts from.</param>
        public virtual ListRequest List(string blogId) {
            return new ListRequest(service, blogId);
        }
        
        public class GetRequest : Google.Apis.Requests.ServiceRequest<Google.Apis.Blogger.v2.Data.Post> {
            
            private string blogId;
            
            private string postId;
            
            public GetRequest(Google.Apis.Discovery.IRequestProvider service, string blogId, string postId) : 
                    base(service) {
                this.blogId = blogId;
                this.postId = postId;
            }
            
            /// <summary>ID of the blog to fetch the post from.</summary>
            [Google.Apis.Util.RequestParameterAttribute("blogId")]
            public virtual string BlogId {
                get {
                    return this.blogId;
                }
            }
            
            /// <summary>The ID of the post</summary>
            [Google.Apis.Util.RequestParameterAttribute("postId")]
            public virtual string PostId {
                get {
                    return this.postId;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "posts";
                }
            }
            
            protected override string MethodName {
                get {
                    return "get";
                }
            }
        }
        
        public class ListRequest : Google.Apis.Requests.ServiceRequest<Google.Apis.Blogger.v2.Data.PostList> {
            
            private string blogId;
            
            private System.Boolean? fetchBodies;
            
            private System.Int64? maxResults;
            
            private string pageToken;
            
            private string startDate;
            
            public ListRequest(Google.Apis.Discovery.IRequestProvider service, string blogId) : 
                    base(service) {
                this.blogId = blogId;
            }
            
            /// <summary>ID of the blog to fetch posts from.</summary>
            [Google.Apis.Util.RequestParameterAttribute("blogId")]
            public virtual string BlogId {
                get {
                    return this.blogId;
                }
            }
            
            /// <summary>Whether the body content of posts is included.</summary>
            [Google.Apis.Util.RequestParameterAttribute("fetchBodies")]
            public virtual System.Boolean? FetchBodies {
                get {
                    return this.fetchBodies;
                }
                set {
                    this.fetchBodies = value;
                }
            }
            
            /// <summary>Maximum number of posts to fetch.</summary>
            [Google.Apis.Util.RequestParameterAttribute("maxResults")]
            public virtual System.Int64? MaxResults {
                get {
                    return this.maxResults;
                }
                set {
                    this.maxResults = value;
                }
            }
            
            /// <summary>Continuation token if the request is paged.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken")]
            public virtual string PageToken {
                get {
                    return this.pageToken;
                }
                set {
                    this.pageToken = value;
                }
            }
            
            /// <summary>Earliest post date to fetch.</summary>
            [Google.Apis.Util.RequestParameterAttribute("startDate")]
            public virtual string StartDate {
                get {
                    return this.startDate;
                }
                set {
                    this.startDate = value;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "posts";
                }
            }
            
            protected override string MethodName {
                get {
                    return "list";
                }
            }
        }
    }
    
    public class UsersResource {
        
        private Google.Apis.Discovery.IRequestProvider service;
        
        private const string Resource = "users";
        
        private BlogsResource blogs;
        
        public UsersResource(BloggerService service) {
            this.service = service;
            this.blogs = new BlogsResource(service);
        }
        
        public virtual BlogsResource Blogs {
            get {
                return this.blogs;
            }
        }
        
        /// <summary>Gets one user by id.</summary>
        /// <param name="userId">Required - The ID of the user to get.</param>
        public virtual GetRequest Get(string userId) {
            return new GetRequest(service, userId);
        }
        
        public class BlogsResource {
            
            private Google.Apis.Discovery.IRequestProvider service;
            
            private const string Resource = "users.blogs";
            
            public BlogsResource(BloggerService service) {
                this.service = service;
            }
            
            /// <summary>Retrieves a list of blogs, possibly filtered.</summary>
            /// <param name="userId">Required - ID of the user whose blogs are to be fetched.</param>
            public virtual ListRequest List(string userId) {
                return new ListRequest(service, userId);
            }
            
            public class ListRequest : Google.Apis.Requests.ServiceRequest<Google.Apis.Blogger.v2.Data.BlogList> {
                
                private string userId;
                
                public ListRequest(Google.Apis.Discovery.IRequestProvider service, string userId) : 
                        base(service) {
                    this.userId = userId;
                }
                
                /// <summary>ID of the user whose blogs are to be fetched.</summary>
                [Google.Apis.Util.RequestParameterAttribute("userId")]
                public virtual string UserId {
                    get {
                        return this.userId;
                    }
                }
                
                protected override string ResourcePath {
                    get {
                        return "users.blogs";
                    }
                }
                
                protected override string MethodName {
                    get {
                        return "list";
                    }
                }
            }
        }
        
        public class GetRequest : Google.Apis.Requests.ServiceRequest<Google.Apis.Blogger.v2.Data.User> {
            
            private string userId;
            
            public GetRequest(Google.Apis.Discovery.IRequestProvider service, string userId) : 
                    base(service) {
                this.userId = userId;
            }
            
            /// <summary>The ID of the user to get.</summary>
            [Google.Apis.Util.RequestParameterAttribute("userId")]
            public virtual string UserId {
                get {
                    return this.userId;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "users";
                }
            }
            
            protected override string MethodName {
                get {
                    return "get";
                }
            }
        }
    }
    
    public partial class BloggerService {
        
        private const string Resource = "";
        
        private BlogsResource blogs;
        
        private CommentsResource comments;
        
        private PagesResource pages;
        
        private PostsResource posts;
        
        private UsersResource users;
        
        private Google.Apis.Discovery.IRequestProvider service {
            get {
                return this;
            }
        }
        
        public virtual BlogsResource Blogs {
            get {
                return this.blogs;
            }
        }
        
        public virtual CommentsResource Comments {
            get {
                return this.comments;
            }
        }
        
        public virtual PagesResource Pages {
            get {
                return this.pages;
            }
        }
        
        public virtual PostsResource Posts {
            get {
                return this.posts;
            }
        }
        
        public virtual UsersResource Users {
            get {
                return this.users;
            }
        }
    }
}
