//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4961
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Google.Apis.Orkut.v2.Data {
    using System;
    using System.Collections;
    using System.Collections.Generic;
    
    
    public class Acl {
        
        private string description;
        
        private IList<Acl.ItemsData> items;
        
        private string kind;
        
        private System.Nullable<long> totalParticipants;
        
        /// <summary>Human readable description of the access granted.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description {
            get {
                return this.description;
            }
            set {
                this.description = value;
            }
        }
        
        /// <summary>The list of ACL entries.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual IList<Acl.ItemsData> Items {
            get {
                return this.items;
            }
            set {
                this.items = value;
            }
        }
        
        /// <summary>Identifies this resource as an access control list. Value: &quot;orkut#acl&quot;</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this.kind;
            }
            set {
                this.kind = value;
            }
        }
        
        /// <summary>The total count of participants of the parent resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("totalParticipants")]
        public virtual System.Nullable<long> TotalParticipants {
            get {
                return this.totalParticipants;
            }
            set {
                this.totalParticipants = value;
            }
        }
        
        public class ItemsData {
            
            private string id;
            
            private string type;
            
            /// <summary>The ID of the entity. For entities of type &quot;person&quot; or &quot;circle&quot;, this is the ID of the resource. For other types, this will be unset.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("id")]
            public virtual string Id {
                get {
                    return this.id;
                }
                set {
                    this.id = value;
                }
            }
            
            /// <summary>The type of entity to whom access is granted.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("type")]
            public virtual string Type {
                get {
                    return this.type;
                }
                set {
                    this.type = value;
                }
            }
        }
    }
    
    public class Activity {
        
        private Acl access;
        
        private OrkutAuthorResource actor;
        
        private string id;
        
        private string kind;
        
        private IList<OrkutLinkResource> links;
        
        private Activity.ObjectData objectValue;
        
        private string published;
        
        private string title;
        
        private string updated;
        
        private string verb;
        
        [Newtonsoft.Json.JsonPropertyAttribute("access")]
        public virtual Acl Access {
            get {
                return this.access;
            }
            set {
                this.access = value;
            }
        }
        
        [Newtonsoft.Json.JsonPropertyAttribute("actor")]
        public virtual OrkutAuthorResource Actor {
            get {
                return this.actor;
            }
            set {
                this.actor = value;
            }
        }
        
        /// <summary>The ID for the activity.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id {
            get {
                return this.id;
            }
            set {
                this.id = value;
            }
        }
        
        /// <summary>The kind of activity. Always orkut#activity.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this.kind;
            }
            set {
                this.kind = value;
            }
        }
        
        /// <summary>Links to resources related to this activity.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("links")]
        public virtual IList<OrkutLinkResource> Links {
            get {
                return this.links;
            }
            set {
                this.links = value;
            }
        }
        
        /// <summary>The activity&apos;s object.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("object")]
        public virtual Activity.ObjectData Object {
            get {
                return this.objectValue;
            }
            set {
                this.objectValue = value;
            }
        }
        
        /// <summary>The time at which the activity was initially published.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("published")]
        public virtual string Published {
            get {
                return this.published;
            }
            set {
                this.published = value;
            }
        }
        
        /// <summary>Title of the activity.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("title")]
        public virtual string Title {
            get {
                return this.title;
            }
            set {
                this.title = value;
            }
        }
        
        /// <summary>The time at which the activity was last updated.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("updated")]
        public virtual string Updated {
            get {
                return this.updated;
            }
            set {
                this.updated = value;
            }
        }
        
        /// <summary>This activity&apos;s verb, indicating what action was performed. Possible values are:  
        ///- add - User added new content to profile or album, e.g. video, photo. 
        ///- post - User publish content to the stream, e.g. status, scrap. 
        ///- update - User commented on an activity. 
        ///- make-friend - User added a new friend. 
        ///- birthday - User has a birthday.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("verb")]
        public virtual string Verb {
            get {
                return this.verb;
            }
            set {
                this.verb = value;
            }
        }
        
        /// <summary>The activity&apos;s object.</summary>
        public class ObjectData {
            
            private string content;
            
            private IList<OrkutActivityobjectsResource> items;
            
            private string objectType;
            
            private ObjectData.RepliesData replies;
            
            /// <summary>The HTML-formatted content, suitable for display. When updating an activity&apos;s content, post the changes to this property, using the value of originalContent as a starting point. If the update is successful, the server adds HTML formatting and responds with this formatted content.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("content")]
            public virtual string Content {
                get {
                    return this.content;
                }
                set {
                    this.content = value;
                }
            }
            
            /// <summary>The list of additional items.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("items")]
            public virtual IList<OrkutActivityobjectsResource> Items {
                get {
                    return this.items;
                }
                set {
                    this.items = value;
                }
            }
            
            /// <summary>The type of the object affected by the activity. Clients can use this information to style the rendered activity object differently depending on the content.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("objectType")]
            public virtual string ObjectType {
                get {
                    return this.objectType;
                }
                set {
                    this.objectType = value;
                }
            }
            
            /// <summary>Comments in reply to this activity.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("replies")]
            public virtual ObjectData.RepliesData Replies {
                get {
                    return this.replies;
                }
                set {
                    this.replies = value;
                }
            }
            
            /// <summary>Comments in reply to this activity.</summary>
            public class RepliesData {
                
                private IList<Comment> items;
                
                private string totalItems;
                
                private string url;
                
                /// <summary>The list of comments.</summary>
                [Newtonsoft.Json.JsonPropertyAttribute("items")]
                public virtual IList<Comment> Items {
                    get {
                        return this.items;
                    }
                    set {
                        this.items = value;
                    }
                }
                
                /// <summary>Total number of comments.</summary>
                [Newtonsoft.Json.JsonPropertyAttribute("totalItems")]
                public virtual string TotalItems {
                    get {
                        return this.totalItems;
                    }
                    set {
                        this.totalItems = value;
                    }
                }
                
                /// <summary>URL for the collection of comments in reply to this activity.</summary>
                [Newtonsoft.Json.JsonPropertyAttribute("url")]
                public virtual string Url {
                    get {
                        return this.url;
                    }
                    set {
                        this.url = value;
                    }
                }
            }
        }
    }
    
    public class ActivityList : Google.Apis.Requests.IDirectResponseSchema {
        
        private IList<Activity> items;
        
        private string kind;
        
        private string nextPageToken;
        
        private Google.Apis.Requests.RequestError error;
        
        private string eTag;
        
        /// <summary>List of activities retrieved.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual IList<Activity> Items {
            get {
                return this.items;
            }
            set {
                this.items = value;
            }
        }
        
        /// <summary>Identifies this resource as a collection of activities. Value: &quot;orkut#activityList&quot;</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this.kind;
            }
            set {
                this.kind = value;
            }
        }
        
        /// <summary>The value of pageToken query parameter in activities.list request to get the next page, if there are more to retrieve.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken {
            get {
                return this.nextPageToken;
            }
            set {
                this.nextPageToken = value;
            }
        }
        
        [Newtonsoft.Json.JsonPropertyAttribute("error")]
        public virtual Google.Apis.Requests.RequestError Error {
            get {
                return this.error;
            }
            set {
                this.error = value;
            }
        }
        
        public virtual string ETag {
            get {
                return this.eTag;
            }
            set {
                this.eTag = value;
            }
        }
    }
    
    public class Badge : Google.Apis.Requests.IDirectResponseSchema {
        
        private string badgeLargeLogo;
        
        private string badgeSmallLogo;
        
        private string caption;
        
        private string description;
        
        private string id;
        
        private string kind;
        
        private string sponsorLogo;
        
        private string sponsorName;
        
        private string sponsorUrl;
        
        private Google.Apis.Requests.RequestError error;
        
        private string eTag;
        
        /// <summary>The URL for the 64x64 badge logo.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("badgeLargeLogo")]
        public virtual string BadgeLargeLogo {
            get {
                return this.badgeLargeLogo;
            }
            set {
                this.badgeLargeLogo = value;
            }
        }
        
        /// <summary>The URL for the 24x24 badge logo.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("badgeSmallLogo")]
        public virtual string BadgeSmallLogo {
            get {
                return this.badgeSmallLogo;
            }
            set {
                this.badgeSmallLogo = value;
            }
        }
        
        /// <summary>The name of the badge, suitable for display.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("caption")]
        public virtual string Caption {
            get {
                return this.caption;
            }
            set {
                this.caption = value;
            }
        }
        
        /// <summary>The description for the badge, suitable for display.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description {
            get {
                return this.description;
            }
            set {
                this.description = value;
            }
        }
        
        /// <summary>The unique ID for the badge.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id {
            get {
                return this.id;
            }
            set {
                this.id = value;
            }
        }
        
        /// <summary>Identifies this resource as a badge. Value: &quot;orkut#badge&quot;</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this.kind;
            }
            set {
                this.kind = value;
            }
        }
        
        /// <summary>The URL for the 32x32 badge sponsor logo.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sponsorLogo")]
        public virtual string SponsorLogo {
            get {
                return this.sponsorLogo;
            }
            set {
                this.sponsorLogo = value;
            }
        }
        
        /// <summary>The name of the badge sponsor, suitable for display.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sponsorName")]
        public virtual string SponsorName {
            get {
                return this.sponsorName;
            }
            set {
                this.sponsorName = value;
            }
        }
        
        /// <summary>The URL for the badge sponsor.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sponsorUrl")]
        public virtual string SponsorUrl {
            get {
                return this.sponsorUrl;
            }
            set {
                this.sponsorUrl = value;
            }
        }
        
        [Newtonsoft.Json.JsonPropertyAttribute("error")]
        public virtual Google.Apis.Requests.RequestError Error {
            get {
                return this.error;
            }
            set {
                this.error = value;
            }
        }
        
        public virtual string ETag {
            get {
                return this.eTag;
            }
            set {
                this.eTag = value;
            }
        }
    }
    
    public class BadgeList : Google.Apis.Requests.IDirectResponseSchema {
        
        private IList<Badge> items;
        
        private string kind;
        
        private Google.Apis.Requests.RequestError error;
        
        private string eTag;
        
        /// <summary>List of badges retrieved.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual IList<Badge> Items {
            get {
                return this.items;
            }
            set {
                this.items = value;
            }
        }
        
        /// <summary>Identifies this resource as a collection of badges. Value: &quot;orkut#badgeList&quot;</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this.kind;
            }
            set {
                this.kind = value;
            }
        }
        
        [Newtonsoft.Json.JsonPropertyAttribute("error")]
        public virtual Google.Apis.Requests.RequestError Error {
            get {
                return this.error;
            }
            set {
                this.error = value;
            }
        }
        
        public virtual string ETag {
            get {
                return this.eTag;
            }
            set {
                this.eTag = value;
            }
        }
    }
    
    public class Comment : Google.Apis.Requests.IDirectResponseSchema {
        
        private OrkutAuthorResource actor;
        
        private string content;
        
        private string id;
        
        private Comment.InReplyToData inReplyTo;
        
        private string kind;
        
        private IList<OrkutLinkResource> links;
        
        private string published;
        
        private Google.Apis.Requests.RequestError error;
        
        private string eTag;
        
        [Newtonsoft.Json.JsonPropertyAttribute("actor")]
        public virtual OrkutAuthorResource Actor {
            get {
                return this.actor;
            }
            set {
                this.actor = value;
            }
        }
        
        /// <summary>The content of the comment in text/html</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("content")]
        public virtual string Content {
            get {
                return this.content;
            }
            set {
                this.content = value;
            }
        }
        
        /// <summary>The unique ID for the comment.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id {
            get {
                return this.id;
            }
            set {
                this.id = value;
            }
        }
        
        /// <summary>Link to the original activity where this comment was posted.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("inReplyTo")]
        public virtual Comment.InReplyToData InReplyTo {
            get {
                return this.inReplyTo;
            }
            set {
                this.inReplyTo = value;
            }
        }
        
        /// <summary>Identifies this resource as a comment. Value: &quot;orkut#comment&quot;</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this.kind;
            }
            set {
                this.kind = value;
            }
        }
        
        /// <summary>List of resources for the comment.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("links")]
        public virtual IList<OrkutLinkResource> Links {
            get {
                return this.links;
            }
            set {
                this.links = value;
            }
        }
        
        /// <summary>The time the comment was initially published, in RFC 3339 format.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("published")]
        public virtual string Published {
            get {
                return this.published;
            }
            set {
                this.published = value;
            }
        }
        
        [Newtonsoft.Json.JsonPropertyAttribute("error")]
        public virtual Google.Apis.Requests.RequestError Error {
            get {
                return this.error;
            }
            set {
                this.error = value;
            }
        }
        
        public virtual string ETag {
            get {
                return this.eTag;
            }
            set {
                this.eTag = value;
            }
        }
        
        /// <summary>Link to the original activity where this comment was posted.</summary>
        public class InReplyToData {
            
            private string href;
            
            private string refValue;
            
            private string rel;
            
            private string source;
            
            private string type;
            
            /// <summary>Link to the post on activity stream being commented.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("href")]
            public virtual string Href {
                get {
                    return this.href;
                }
                set {
                    this.href = value;
                }
            }
            
            /// <summary>Unique identifier of the post on activity stream being commented.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("ref")]
            public virtual string Ref {
                get {
                    return this.refValue;
                }
                set {
                    this.refValue = value;
                }
            }
            
            /// <summary>Relationship between the comment and the post on activity stream being commented. Always inReplyTo.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("rel")]
            public virtual string Rel {
                get {
                    return this.rel;
                }
                set {
                    this.rel = value;
                }
            }
            
            /// <summary>URL of the source of the post in the activity stream identified by inReplyTo.ref. [not yet implemented].</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("source")]
            public virtual string Source {
                get {
                    return this.source;
                }
                set {
                    this.source = value;
                }
            }
            
            /// <summary>Type of the post on activity stream being commented. Always text/html.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("type")]
            public virtual string Type {
                get {
                    return this.type;
                }
                set {
                    this.type = value;
                }
            }
        }
    }
    
    public class CommentList : Google.Apis.Requests.IDirectResponseSchema {
        
        private IList<Comment> items;
        
        private string kind;
        
        private string nextPageToken;
        
        private string previousPageToken;
        
        private Google.Apis.Requests.RequestError error;
        
        private string eTag;
        
        /// <summary>List of comments retrieved.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual IList<Comment> Items {
            get {
                return this.items;
            }
            set {
                this.items = value;
            }
        }
        
        /// <summary>Identifies this resource as a collection of comments. Value: &quot;orkut#commentList&quot;</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this.kind;
            }
            set {
                this.kind = value;
            }
        }
        
        /// <summary>The value of pageToken query parameter in comments.list request to get the next page, if there are more to retrieve.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken {
            get {
                return this.nextPageToken;
            }
            set {
                this.nextPageToken = value;
            }
        }
        
        /// <summary>The value of pageToken query parameter in comments.list request to get the previous page, if there are more to retrieve.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("previousPageToken")]
        public virtual string PreviousPageToken {
            get {
                return this.previousPageToken;
            }
            set {
                this.previousPageToken = value;
            }
        }
        
        [Newtonsoft.Json.JsonPropertyAttribute("error")]
        public virtual Google.Apis.Requests.RequestError Error {
            get {
                return this.error;
            }
            set {
                this.error = value;
            }
        }
        
        public virtual string ETag {
            get {
                return this.eTag;
            }
            set {
                this.eTag = value;
            }
        }
    }
    
    public class Counters : Google.Apis.Requests.IDirectResponseSchema {
        
        private IList<OrkutCounterResource> items;
        
        private string kind;
        
        private Google.Apis.Requests.RequestError error;
        
        private string eTag;
        
        /// <summary>List of counters retrieved.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual IList<OrkutCounterResource> Items {
            get {
                return this.items;
            }
            set {
                this.items = value;
            }
        }
        
        /// <summary>Identifies this resource as a collection of counters. Value: &quot;orkut#counters&quot;</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this.kind;
            }
            set {
                this.kind = value;
            }
        }
        
        [Newtonsoft.Json.JsonPropertyAttribute("error")]
        public virtual Google.Apis.Requests.RequestError Error {
            get {
                return this.error;
            }
            set {
                this.error = value;
            }
        }
        
        public virtual string ETag {
            get {
                return this.eTag;
            }
            set {
                this.eTag = value;
            }
        }
    }
    
    public class OrkutActivityobjectsResource {
        
        private string content;
        
        private string displayName;
        
        private string id;
        
        private IList<OrkutLinkResource> links;
        
        private string objectType;
        
        private OrkutActivitypersonResource person;
        
        /// <summary>The HTML-formatted content, suitable for display. When updating an activity&apos;s content, post the changes to this property, using the value of originalContent as a starting point. If the update is successful, the server adds HTML formatting and responds with this formatted content.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("content")]
        public virtual string Content {
            get {
                return this.content;
            }
            set {
                this.content = value;
            }
        }
        
        /// <summary>The title of the object.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("displayName")]
        public virtual string DisplayName {
            get {
                return this.displayName;
            }
            set {
                this.displayName = value;
            }
        }
        
        /// <summary>The ID for the object.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id {
            get {
                return this.id;
            }
            set {
                this.id = value;
            }
        }
        
        /// <summary>Links to other resources related to this object.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("links")]
        public virtual IList<OrkutLinkResource> Links {
            get {
                return this.links;
            }
            set {
                this.links = value;
            }
        }
        
        /// <summary>The object type.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("objectType")]
        public virtual string ObjectType {
            get {
                return this.objectType;
            }
            set {
                this.objectType = value;
            }
        }
        
        [Newtonsoft.Json.JsonPropertyAttribute("person")]
        public virtual OrkutActivitypersonResource Person {
            get {
                return this.person;
            }
            set {
                this.person = value;
            }
        }
    }
    
    public class OrkutActivitypersonResource {
        
        private string birthday;
        
        private string gender;
        
        private string id;
        
        private OrkutActivitypersonResource.ImageData image;
        
        private OrkutActivitypersonResource.NameData name;
        
        private string url;
        
        /// <summary>The person&apos;s date of birth, represented as YYYY-MM-DD.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("birthday")]
        public virtual string Birthday {
            get {
                return this.birthday;
            }
            set {
                this.birthday = value;
            }
        }
        
        /// <summary>The person&apos;s gender. Values include &quot;male&quot;, &quot;female&quot;, and &quot;other&quot;.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("gender")]
        public virtual string Gender {
            get {
                return this.gender;
            }
            set {
                this.gender = value;
            }
        }
        
        /// <summary>The person&apos;s opensocial ID.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id {
            get {
                return this.id;
            }
            set {
                this.id = value;
            }
        }
        
        /// <summary>The person&apos;s profile photo. This is adapted from Google+ and was originaly introduced as extra OpenSocial convenience fields.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("image")]
        public virtual OrkutActivitypersonResource.ImageData Image {
            get {
                return this.image;
            }
            set {
                this.image = value;
            }
        }
        
        /// <summary>An object that encapsulates the individual components of a person&apos;s name.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual OrkutActivitypersonResource.NameData Name {
            get {
                return this.name;
            }
            set {
                this.name = value;
            }
        }
        
        /// <summary>The person&apos;s profile url. This is adapted from Google+ and was originaly introduced as extra OpenSocial convenience fields.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("url")]
        public virtual string Url {
            get {
                return this.url;
            }
            set {
                this.url = value;
            }
        }
        
        /// <summary>The person&apos;s profile photo. This is adapted from Google+ and was originaly introduced as extra OpenSocial convenience fields.</summary>
        public class ImageData {
            
            private string url;
            
            /// <summary>The URL of the person&apos;s profile photo.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("url")]
            public virtual string Url {
                get {
                    return this.url;
                }
                set {
                    this.url = value;
                }
            }
        }
        
        /// <summary>An object that encapsulates the individual components of a person&apos;s name.</summary>
        public class NameData {
            
            private string familyName;
            
            private string givenName;
            
            /// <summary>The family name (last name) of this person.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("familyName")]
            public virtual string FamilyName {
                get {
                    return this.familyName;
                }
                set {
                    this.familyName = value;
                }
            }
            
            /// <summary>The given name (first name) of this person.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("givenName")]
            public virtual string GivenName {
                get {
                    return this.givenName;
                }
                set {
                    this.givenName = value;
                }
            }
        }
    }
    
    public class OrkutAuthorResource {
        
        private string displayName;
        
        private string id;
        
        private OrkutAuthorResource.ImageData image;
        
        private string url;
        
        /// <summary>The name of the author, suitable for display.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("displayName")]
        public virtual string DisplayName {
            get {
                return this.displayName;
            }
            set {
                this.displayName = value;
            }
        }
        
        /// <summary>Unique identifier of the person who posted the comment. This is the person&apos;s OpenSocial ID.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id {
            get {
                return this.id;
            }
            set {
                this.id = value;
            }
        }
        
        /// <summary>Image data about the actor.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("image")]
        public virtual OrkutAuthorResource.ImageData Image {
            get {
                return this.image;
            }
            set {
                this.image = value;
            }
        }
        
        /// <summary>The URL of the author who posted the comment [not yet implemented]</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("url")]
        public virtual string Url {
            get {
                return this.url;
            }
            set {
                this.url = value;
            }
        }
        
        /// <summary>Image data about the actor.</summary>
        public class ImageData {
            
            private string url;
            
            /// <summary>A URL that points to a thumbnail photo of the author.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("url")]
            public virtual string Url {
                get {
                    return this.url;
                }
                set {
                    this.url = value;
                }
            }
        }
    }
    
    public class OrkutCounterResource {
        
        private string name;
        
        private System.Nullable<long> total;
        
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name {
            get {
                return this.name;
            }
            set {
                this.name = value;
            }
        }
        
        [Newtonsoft.Json.JsonPropertyAttribute("total")]
        public virtual System.Nullable<long> Total {
            get {
                return this.total;
            }
            set {
                this.total = value;
            }
        }
    }
    
    /// <summary>Links to resources related to the parent object.</summary>
    public class OrkutLinkResource {
        
        private string href;
        
        private string rel;
        
        private string title;
        
        private string type;
        
        /// <summary>URL of the link.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("href")]
        public virtual string Href {
            get {
                return this.href;
            }
            set {
                this.href = value;
            }
        }
        
        /// <summary>Relation between the resurce and the parent object.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("rel")]
        public virtual string Rel {
            get {
                return this.rel;
            }
            set {
                this.rel = value;
            }
        }
        
        /// <summary>Title of the link.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("title")]
        public virtual string Title {
            get {
                return this.title;
            }
            set {
                this.title = value;
            }
        }
        
        /// <summary>Media type of the link.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("type")]
        public virtual string Type {
            get {
                return this.type;
            }
            set {
                this.type = value;
            }
        }
    }
    
    public class Visibility : Google.Apis.Requests.IDirectResponseSchema {
        
        private string kind;
        
        private string visibility;
        
        private Google.Apis.Requests.RequestError error;
        
        private string eTag;
        
        /// <summary>Identifies this resource as a visibility item. Value: &quot;orkut#visibility&quot;</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this.kind;
            }
            set {
                this.kind = value;
            }
        }
        
        /// <summary>The visibility of the resource. Possible values are:  
        ///- default: not hidden by the user 
        ///- hidden: hidden</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("visibility")]
        public virtual string VisibilityValue {
            get {
                return this.visibility;
            }
            set {
                this.visibility = value;
            }
        }
        
        [Newtonsoft.Json.JsonPropertyAttribute("error")]
        public virtual Google.Apis.Requests.RequestError Error {
            get {
                return this.error;
            }
            set {
                this.error = value;
            }
        }
        
        public virtual string ETag {
            get {
                return this.eTag;
            }
            set {
                this.eTag = value;
            }
        }
    }
}
namespace Google.Apis.Orkut.v2 {
    using System;
    using System.IO;
    using System.Collections.Generic;
    using Google.Apis;
    using Google.Apis.Discovery;
    
    
    public partial class OrkutService : Google.Apis.Discovery.IRequestProvider {
        
        private Google.Apis.Discovery.IService genericService;
        
        private Google.Apis.Authentication.IAuthenticator authenticator;
        
        private const string DiscoveryDocument = "{\"kind\":\"discovery#restDescription\",\"id\":\"orkut:v2\",\"name\":\"orkut\",\"version\":\"v2\"" +
            ",\"title\":\"Orkut API\",\"description\":\"Lets you manage activities, comments and bad" +
            "ges in orkut. More stuff coming in time.\",\"icons\":{\"x16\":\"http://www.google.com/" +
            "images/icons/product/orkut-16.png\",\"x32\":\"http://www.google.com/images/icons/pro" +
            "duct/orkut-32.png\"},\"documentationLink\":\"http://code.google.com/apis/orkut/v2/re" +
            "ference.html\",\"labels\":[\"labs\"],\"protocol\":\"rest\",\"basePath\":\"/orkut/v2/\",\"param" +
            "eters\":{\"alt\":{\"type\":\"string\",\"description\":\"Data format for the response.\",\"de" +
            "fault\":\"json\",\"enum\":[\"json\"],\"enumDescriptions\":[\"Responses with Content-Type o" +
            "f application/json\"],\"location\":\"query\"},\"fields\":{\"type\":\"string\",\"description\"" +
            ":\"Selector specifying which fields to include in a partial response.\",\"location\"" +
            ":\"query\"},\"key\":{\"type\":\"string\",\"description\":\"API key. Your API key identifies" +
            " your project and provides you with API access, quota, and reports. Required unl" +
            "ess you provide an OAuth 2.0 token.\",\"location\":\"query\"},\"oauth_token\":{\"type\":\"" +
            "string\",\"description\":\"OAuth 2.0 token for the current user.\",\"location\":\"query\"" +
            "},\"prettyPrint\":{\"type\":\"boolean\",\"description\":\"Returns response with indentati" +
            "ons and line breaks.\",\"default\":\"true\",\"location\":\"query\"},\"userIp\":{\"type\":\"str" +
            "ing\",\"description\":\"IP address of the site where the request originates. Use thi" +
            "s if you want to enforce per-user limits.\",\"location\":\"query\"}},\"auth\":{\"oauth2\"" +
            ":{\"scopes\":{\"https://www.googleapis.com/auth/orkut\":{\"description\":\"Manage your " +
            "Orkut activity\"},\"https://www.googleapis.com/auth/orkut.readonly\":{\"description\"" +
            ":\"View your Orkut data\"}}}},\"schemas\":{\"Acl\":{\"id\":\"Acl\",\"type\":\"object\",\"proper" +
            "ties\":{\"description\":{\"type\":\"string\",\"description\":\"Human readable description " +
            "of the access granted.\"},\"items\":{\"type\":\"array\",\"description\":\"The list of ACL " +
            "entries.\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"string\",\"descript" +
            "ion\":\"The ID of the entity. For entities of type \\\"person\\\" or \\\"circle\\\", this " +
            "is the ID of the resource. For other types, this will be unset.\"},\"type\":{\"type\"" +
            ":\"string\",\"description\":\"The type of entity to whom access is granted.\"}}}},\"kin" +
            "d\":{\"type\":\"string\",\"description\":\"Identifies this resource as an access control" +
            " list. Value: \\\"orkut#acl\\\"\",\"default\":\"orkut#acl\"},\"totalParticipants\":{\"type\":" +
            "\"integer\",\"description\":\"The total count of participants of the parent resource." +
            "\",\"format\":\"int32\"}}},\"Activity\":{\"id\":\"Activity\",\"type\":\"object\",\"properties\":{" +
            "\"access\":{\"$ref\":\"Acl\",\"description\":\"Identifies who has access to see this acti" +
            "vity.\"},\"actor\":{\"$ref\":\"OrkutAuthorResource\",\"description\":\"The person who perf" +
            "ormed the activity.\"},\"id\":{\"type\":\"string\",\"description\":\"The ID for the activi" +
            "ty.\"},\"kind\":{\"type\":\"string\",\"description\":\"The kind of activity. Always orkut#" +
            "activity.\",\"default\":\"orkut#activity\"},\"links\":{\"type\":\"array\",\"description\":\"Li" +
            "nks to resources related to this activity.\",\"items\":{\"$ref\":\"OrkutLinkResource\"}" +
            "},\"object\":{\"type\":\"object\",\"description\":\"The activity\'s object.\",\"properties\":" +
            "{\"content\":{\"type\":\"string\",\"description\":\"The HTML-formatted content, suitable " +
            "for display. When updating an activity\'s content, post the changes to this prope" +
            "rty, using the value of originalContent as a starting point. If the update is su" +
            "ccessful, the server adds HTML formatting and responds with this formatted conte" +
            "nt.\"},\"items\":{\"type\":\"array\",\"description\":\"The list of additional items.\",\"ite" +
            "ms\":{\"$ref\":\"OrkutActivityobjectsResource\"}},\"objectType\":{\"type\":\"string\",\"desc" +
            "ription\":\"The type of the object affected by the activity. Clients can use this " +
            "information to style the rendered activity object differently depending on the c" +
            "ontent.\"},\"replies\":{\"type\":\"object\",\"description\":\"Comments in reply to this ac" +
            "tivity.\",\"properties\":{\"items\":{\"type\":\"array\",\"description\":\"The list of commen" +
            "ts.\",\"items\":{\"$ref\":\"Comment\"}},\"totalItems\":{\"type\":\"string\",\"description\":\"To" +
            "tal number of comments.\",\"format\":\"uint64\"},\"url\":{\"type\":\"string\",\"description\"" +
            ":\"URL for the collection of comments in reply to this activity.\"}}}}},\"published" +
            "\":{\"type\":\"string\",\"description\":\"The time at which the activity was initially p" +
            "ublished.\",\"format\":\"date-time\"},\"title\":{\"type\":\"string\",\"description\":\"Title o" +
            "f the activity.\"},\"updated\":{\"type\":\"string\",\"description\":\"The time at which th" +
            "e activity was last updated.\",\"format\":\"date-time\"},\"verb\":{\"type\":\"string\",\"des" +
            "cription\":\"This activity\'s verb, indicating what action was performed. Possible " +
            "values are:  \\n- add - User added new content to profile or album, e.g. video, p" +
            "hoto. \\n- post - User publish content to the stream, e.g. status, scrap. \\n- upd" +
            "ate - User commented on an activity. \\n- make-friend - User added a new friend. " +
            "\\n- birthday - User has a birthday.\"}}},\"ActivityList\":{\"id\":\"ActivityList\",\"typ" +
            "e\":\"object\",\"properties\":{\"items\":{\"type\":\"array\",\"description\":\"List of activit" +
            "ies retrieved.\",\"items\":{\"$ref\":\"Activity\"}},\"kind\":{\"type\":\"string\",\"descriptio" +
            "n\":\"Identifies this resource as a collection of activities. Value: \\\"orkut#activ" +
            "ityList\\\"\",\"default\":\"orkut#activityList\"},\"nextPageToken\":{\"type\":\"string\",\"des" +
            "cription\":\"The value of pageToken query parameter in activities.list request to " +
            "get the next page, if there are more to retrieve.\"}}},\"Badge\":{\"id\":\"Badge\",\"typ" +
            "e\":\"object\",\"properties\":{\"badgeLargeLogo\":{\"type\":\"string\",\"description\":\"The U" +
            "RL for the 64x64 badge logo.\"},\"badgeSmallLogo\":{\"type\":\"string\",\"description\":\"" +
            "The URL for the 24x24 badge logo.\"},\"caption\":{\"type\":\"string\",\"description\":\"Th" +
            "e name of the badge, suitable for display.\"},\"description\":{\"type\":\"string\",\"des" +
            "cription\":\"The description for the badge, suitable for display.\"},\"id\":{\"type\":\"" +
            "string\",\"description\":\"The unique ID for the badge.\",\"format\":\"int64\"},\"kind\":{\"" +
            "type\":\"string\",\"description\":\"Identifies this resource as a badge. Value: \\\"orku" +
            "t#badge\\\"\",\"default\":\"orkut#badge\"},\"sponsorLogo\":{\"type\":\"string\",\"description\"" +
            ":\"The URL for the 32x32 badge sponsor logo.\"},\"sponsorName\":{\"type\":\"string\",\"de" +
            "scription\":\"The name of the badge sponsor, suitable for display.\"},\"sponsorUrl\":" +
            "{\"type\":\"string\",\"description\":\"The URL for the badge sponsor.\"}}},\"BadgeList\":{" +
            "\"id\":\"BadgeList\",\"type\":\"object\",\"properties\":{\"items\":{\"type\":\"array\",\"descript" +
            "ion\":\"List of badges retrieved.\",\"items\":{\"$ref\":\"Badge\"}},\"kind\":{\"type\":\"strin" +
            "g\",\"description\":\"Identifies this resource as a collection of badges. Value: \\\"o" +
            "rkut#badgeList\\\"\",\"default\":\"orkut#badgeList\"}}},\"Comment\":{\"id\":\"Comment\",\"type" +
            "\":\"object\",\"properties\":{\"actor\":{\"$ref\":\"OrkutAuthorResource\",\"description\":\"Th" +
            "e person who posted the comment.\"},\"content\":{\"type\":\"string\",\"description\":\"The" +
            " content of the comment in text/html\"},\"id\":{\"type\":\"string\",\"description\":\"The " +
            "unique ID for the comment.\"},\"inReplyTo\":{\"type\":\"object\",\"description\":\"Link to" +
            " the original activity where this comment was posted.\",\"properties\":{\"href\":{\"ty" +
            "pe\":\"string\",\"description\":\"Link to the post on activity stream being commented." +
            "\"},\"ref\":{\"type\":\"string\",\"description\":\"Unique identifier of the post on activi" +
            "ty stream being commented.\"},\"rel\":{\"type\":\"string\",\"description\":\"Relationship " +
            "between the comment and the post on activity stream being commented. Always inRe" +
            "plyTo.\",\"default\":\"inReplyTo\"},\"source\":{\"type\":\"string\",\"description\":\"URL of t" +
            "he source of the post in the activity stream identified by inReplyTo.ref. [not y" +
            "et implemented].\"},\"type\":{\"type\":\"string\",\"description\":\"Type of the post on ac" +
            "tivity stream being commented. Always text/html.\"}}},\"kind\":{\"type\":\"string\",\"de" +
            "scription\":\"Identifies this resource as a comment. Value: \\\"orkut#comment\\\"\",\"de" +
            "fault\":\"orkut#comment\"},\"links\":{\"type\":\"array\",\"description\":\"List of resources" +
            " for the comment.\",\"items\":{\"$ref\":\"OrkutLinkResource\"}},\"published\":{\"type\":\"st" +
            "ring\",\"description\":\"The time the comment was initially published, in RFC 3339 f" +
            "ormat.\",\"format\":\"date-time\"}}},\"CommentList\":{\"id\":\"CommentList\",\"type\":\"object" +
            "\",\"properties\":{\"items\":{\"type\":\"array\",\"description\":\"List of comments retrieve" +
            "d.\",\"items\":{\"$ref\":\"Comment\"}},\"kind\":{\"type\":\"string\",\"description\":\"Identifie" +
            "s this resource as a collection of comments. Value: \\\"orkut#commentList\\\"\",\"defa" +
            "ult\":\"orkut#commentList\"},\"nextPageToken\":{\"type\":\"string\",\"description\":\"The va" +
            "lue of pageToken query parameter in comments.list request to get the next page, " +
            "if there are more to retrieve.\"},\"previousPageToken\":{\"type\":\"string\",\"descripti" +
            "on\":\"The value of pageToken query parameter in comments.list request to get the " +
            "previous page, if there are more to retrieve.\"}}},\"Counters\":{\"id\":\"Counters\",\"t" +
            "ype\":\"object\",\"properties\":{\"items\":{\"type\":\"array\",\"description\":\"List of count" +
            "ers retrieved.\",\"items\":{\"$ref\":\"OrkutCounterResource\"}},\"kind\":{\"type\":\"string\"" +
            ",\"description\":\"Identifies this resource as a collection of counters. Value: \\\"o" +
            "rkut#counters\\\"\",\"default\":\"orkut#counters\"}}},\"OrkutActivityobjectsResource\":{\"" +
            "id\":\"OrkutActivityobjectsResource\",\"type\":\"object\",\"properties\":{\"content\":{\"typ" +
            "e\":\"string\",\"description\":\"The HTML-formatted content, suitable for display. Whe" +
            "n updating an activity\'s content, post the changes to this property, using the v" +
            "alue of originalContent as a starting point. If the update is successful, the se" +
            "rver adds HTML formatting and responds with this formatted content.\"},\"displayNa" +
            "me\":{\"type\":\"string\",\"description\":\"The title of the object.\"},\"id\":{\"type\":\"str" +
            "ing\",\"description\":\"The ID for the object.\"},\"links\":{\"type\":\"array\",\"descriptio" +
            "n\":\"Links to other resources related to this object.\",\"items\":{\"$ref\":\"OrkutLink" +
            "Resource\"}},\"objectType\":{\"type\":\"string\",\"description\":\"The object type.\"},\"per" +
            "son\":{\"$ref\":\"OrkutActivitypersonResource\",\"description\":\"The person who is rela" +
            "ted with this activity, e.g. an Added User.\"}}},\"OrkutActivitypersonResource\":{\"" +
            "id\":\"OrkutActivitypersonResource\",\"type\":\"object\",\"properties\":{\"birthday\":{\"typ" +
            "e\":\"string\",\"description\":\"The person\'s date of birth, represented as YYYY-MM-DD" +
            ".\"},\"gender\":{\"type\":\"string\",\"description\":\"The person\'s gender. Values include" +
            " \\\"male\\\", \\\"female\\\", and \\\"other\\\".\"},\"id\":{\"type\":\"string\",\"description\":\"The" +
            " person\'s opensocial ID.\"},\"image\":{\"type\":\"object\",\"description\":\"The person\'s " +
            "profile photo. This is adapted from Google+ and was originaly introduced as extr" +
            "a OpenSocial convenience fields.\",\"properties\":{\"url\":{\"type\":\"string\",\"descript" +
            "ion\":\"The URL of the person\'s profile photo.\"}}},\"name\":{\"type\":\"object\",\"descri" +
            "ption\":\"An object that encapsulates the individual components of a person\'s name" +
            ".\",\"properties\":{\"familyName\":{\"type\":\"string\",\"description\":\"The family name (l" +
            "ast name) of this person.\"},\"givenName\":{\"type\":\"string\",\"description\":\"The give" +
            "n name (first name) of this person.\"}}},\"url\":{\"type\":\"string\",\"description\":\"Th" +
            "e person\'s profile url. This is adapted from Google+ and was originaly introduce" +
            "d as extra OpenSocial convenience fields.\"}}},\"OrkutAuthorResource\":{\"id\":\"Orkut" +
            "AuthorResource\",\"type\":\"object\",\"properties\":{\"displayName\":{\"type\":\"string\",\"de" +
            "scription\":\"The name of the author, suitable for display.\"},\"id\":{\"type\":\"string" +
            "\",\"description\":\"Unique identifier of the person who posted the comment. This is" +
            " the person\'s OpenSocial ID.\"},\"image\":{\"type\":\"object\",\"description\":\"Image dat" +
            "a about the actor.\",\"properties\":{\"url\":{\"type\":\"string\",\"description\":\"A URL th" +
            "at points to a thumbnail photo of the author.\"}}},\"url\":{\"type\":\"string\",\"descri" +
            "ption\":\"The URL of the author who posted the comment [not yet implemented]\"}}},\"" +
            "OrkutCounterResource\":{\"id\":\"OrkutCounterResource\",\"type\":\"object\",\"properties\":" +
            "{\"name\":{\"type\":\"string\"},\"total\":{\"type\":\"integer\",\"format\":\"int32\"}}},\"OrkutLi" +
            "nkResource\":{\"id\":\"OrkutLinkResource\",\"type\":\"object\",\"description\":\"Links to re" +
            "sources related to the parent object.\",\"properties\":{\"href\":{\"type\":\"string\",\"de" +
            "scription\":\"URL of the link.\"},\"rel\":{\"type\":\"string\",\"description\":\"Relation be" +
            "tween the resurce and the parent object.\"},\"title\":{\"type\":\"string\",\"description" +
            "\":\"Title of the link.\"},\"type\":{\"type\":\"string\",\"description\":\"Media type of the" +
            " link.\"}}},\"Visibility\":{\"id\":\"Visibility\",\"type\":\"object\",\"properties\":{\"kind\":" +
            "{\"type\":\"string\",\"description\":\"Identifies this resource as a visibility item. V" +
            "alue: \\\"orkut#visibility\\\"\",\"default\":\"orkut#visibility\"},\"visibility\":{\"type\":\"" +
            "string\",\"description\":\"The visibility of the resource. Possible values are:  \\n-" +
            " default: not hidden by the user \\n- hidden: hidden\"}}}},\"resources\":{\"acl\":{\"me" +
            "thods\":{\"delete\":{\"id\":\"orkut.acl.delete\",\"path\":\"activities/{activityId}/acl/{u" +
            "serId}\",\"httpMethod\":\"DELETE\",\"description\":\"Excludes an element from the ACL of" +
            " the activity.\",\"parameters\":{\"activityId\":{\"type\":\"string\",\"description\":\"ID of" +
            " the activity.\",\"required\":true,\"location\":\"path\"},\"userId\":{\"type\":\"string\",\"de" +
            "scription\":\"ID of the user to be removed from the activity.\",\"required\":true,\"lo" +
            "cation\":\"path\"}},\"parameterOrder\":[\"activityId\",\"userId\"],\"scopes\":[\"https://www" +
            ".googleapis.com/auth/orkut\"]}}},\"activities\":{\"methods\":{\"delete\":{\"id\":\"orkut.a" +
            "ctivities.delete\",\"path\":\"activities/{activityId}\",\"httpMethod\":\"DELETE\",\"descri" +
            "ption\":\"Deletes an existing activity, if the access controls allow it.\",\"paramet" +
            "ers\":{\"activityId\":{\"type\":\"string\",\"description\":\"ID of the activity to remove." +
            "\",\"required\":true,\"location\":\"path\"}},\"parameterOrder\":[\"activityId\"],\"scopes\":[" +
            "\"https://www.googleapis.com/auth/orkut\"]},\"list\":{\"id\":\"orkut.activities.list\",\"" +
            "path\":\"people/{userId}/activities/{collection}\",\"httpMethod\":\"GET\",\"description\"" +
            ":\"Retrieves a list of activities.\",\"parameters\":{\"collection\":{\"type\":\"string\",\"" +
            "description\":\"The collection of activities to list.\",\"required\":true,\"enum\":[\"al" +
            "l\",\"scraps\",\"stream\"],\"enumDescriptions\":[\"All activities created by the specifi" +
            "ed user that the authenticated user is authorized to view.\",\"The specified user\'" +
            "s scrapbook.\",\"The specified user\'s stream feed, intended for consumption. This " +
            "includes activities posted by people that the user is following, and activities " +
            "in which the user has been mentioned.\"],\"location\":\"path\"},\"hl\":{\"type\":\"string\"" +
            ",\"description\":\"Specifies the interface language (host language) of your user in" +
            "terface.\",\"location\":\"query\"},\"maxResults\":{\"type\":\"integer\",\"description\":\"The " +
            "maximum number of activities to include in the response.\",\"format\":\"uint32\",\"min" +
            "imum\":\"1\",\"maximum\":\"100\",\"location\":\"query\"},\"pageToken\":{\"type\":\"string\",\"desc" +
            "ription\":\"A continuation token that allows pagination.\",\"location\":\"query\"},\"use" +
            "rId\":{\"type\":\"string\",\"description\":\"The ID of the user whose activities will be" +
            " listed. Can be me to refer to the viewer (i.e. the authenticated user).\",\"requi" +
            "red\":true,\"location\":\"path\"}},\"parameterOrder\":[\"userId\",\"collection\"],\"response" +
            "\":{\"$ref\":\"ActivityList\"},\"scopes\":[\"https://www.googleapis.com/auth/orkut\",\"htt" +
            "ps://www.googleapis.com/auth/orkut.readonly\"]}}},\"activityVisibility\":{\"methods\"" +
            ":{\"get\":{\"id\":\"orkut.activityVisibility.get\",\"path\":\"activities/{activityId}/vis" +
            "ibility\",\"httpMethod\":\"GET\",\"description\":\"Gets the visibility of an existing ac" +
            "tivity.\",\"parameters\":{\"activityId\":{\"type\":\"string\",\"description\":\"ID of the ac" +
            "tivity to get the visibility.\",\"required\":true,\"location\":\"path\"}},\"parameterOrd" +
            "er\":[\"activityId\"],\"response\":{\"$ref\":\"Visibility\"},\"scopes\":[\"https://www.googl" +
            "eapis.com/auth/orkut\",\"https://www.googleapis.com/auth/orkut.readonly\"]},\"patch\"" +
            ":{\"id\":\"orkut.activityVisibility.patch\",\"path\":\"activities/{activityId}/visibili" +
            "ty\",\"httpMethod\":\"PATCH\",\"description\":\"Updates the visibility of an existing ac" +
            "tivity. This method supports patch semantics.\",\"parameters\":{\"activityId\":{\"type" +
            "\":\"string\",\"description\":\"ID of the activity.\",\"required\":true,\"location\":\"path\"" +
            "}},\"parameterOrder\":[\"activityId\"],\"request\":{\"$ref\":\"Visibility\"},\"response\":{\"" +
            "$ref\":\"Visibility\"},\"scopes\":[\"https://www.googleapis.com/auth/orkut\"]},\"update\"" +
            ":{\"id\":\"orkut.activityVisibility.update\",\"path\":\"activities/{activityId}/visibil" +
            "ity\",\"httpMethod\":\"PUT\",\"description\":\"Updates the visibility of an existing act" +
            "ivity.\",\"parameters\":{\"activityId\":{\"type\":\"string\",\"description\":\"ID of the act" +
            "ivity.\",\"required\":true,\"location\":\"path\"}},\"parameterOrder\":[\"activityId\"],\"req" +
            "uest\":{\"$ref\":\"Visibility\"},\"response\":{\"$ref\":\"Visibility\"},\"scopes\":[\"https://" +
            "www.googleapis.com/auth/orkut\"]}}},\"badges\":{\"methods\":{\"get\":{\"id\":\"orkut.badge" +
            "s.get\",\"path\":\"people/{userId}/badges/{badgeId}\",\"httpMethod\":\"GET\",\"description" +
            "\":\"Retrieves a badge from a user.\",\"parameters\":{\"badgeId\":{\"type\":\"string\",\"des" +
            "cription\":\"The ID of the badge that will be retrieved.\",\"required\":true,\"format\"" +
            ":\"int64\",\"location\":\"path\"},\"userId\":{\"type\":\"string\",\"description\":\"The ID of t" +
            "he user whose badges will be listed. Can be me to refer to caller.\",\"required\":t" +
            "rue,\"location\":\"path\"}},\"parameterOrder\":[\"userId\",\"badgeId\"],\"response\":{\"$ref\"" +
            ":\"Badge\"},\"scopes\":[\"https://www.googleapis.com/auth/orkut\",\"https://www.googlea" +
            "pis.com/auth/orkut.readonly\"]},\"list\":{\"id\":\"orkut.badges.list\",\"path\":\"people/{" +
            "userId}/badges\",\"httpMethod\":\"GET\",\"description\":\"Retrieves the list of visible " +
            "badges of a user.\",\"parameters\":{\"userId\":{\"type\":\"string\",\"description\":\"The id" +
            " of the user whose badges will be listed. Can be me to refer to caller.\",\"requir" +
            "ed\":true,\"location\":\"path\"}},\"parameterOrder\":[\"userId\"],\"response\":{\"$ref\":\"Bad" +
            "geList\"},\"scopes\":[\"https://www.googleapis.com/auth/orkut\",\"https://www.googleap" +
            "is.com/auth/orkut.readonly\"]}}},\"comments\":{\"methods\":{\"delete\":{\"id\":\"orkut.com" +
            "ments.delete\",\"path\":\"comments/{commentId}\",\"httpMethod\":\"DELETE\",\"description\":" +
            "\"Deletes an existing comment.\",\"parameters\":{\"commentId\":{\"type\":\"string\",\"descr" +
            "iption\":\"ID of the comment to remove.\",\"required\":true,\"location\":\"path\"}},\"para" +
            "meterOrder\":[\"commentId\"],\"scopes\":[\"https://www.googleapis.com/auth/orkut\"]},\"g" +
            "et\":{\"id\":\"orkut.comments.get\",\"path\":\"comments/{commentId}\",\"httpMethod\":\"GET\"," +
            "\"description\":\"Retrieves an existing comment.\",\"parameters\":{\"commentId\":{\"type\"" +
            ":\"string\",\"description\":\"ID of the comment to get.\",\"required\":true,\"location\":\"" +
            "path\"},\"hl\":{\"type\":\"string\",\"description\":\"Specifies the interface language (ho" +
            "st language) of your user interface.\",\"location\":\"query\"}},\"parameterOrder\":[\"co" +
            "mmentId\"],\"response\":{\"$ref\":\"Comment\"},\"scopes\":[\"https://www.googleapis.com/au" +
            "th/orkut\",\"https://www.googleapis.com/auth/orkut.readonly\"]},\"insert\":{\"id\":\"ork" +
            "ut.comments.insert\",\"path\":\"activities/{activityId}/comments\",\"httpMethod\":\"POST" +
            "\",\"description\":\"Inserts a new comment to an activity.\",\"parameters\":{\"activityI" +
            "d\":{\"type\":\"string\",\"description\":\"The ID of the activity to contain the new com" +
            "ment.\",\"required\":true,\"location\":\"path\"}},\"parameterOrder\":[\"activityId\"],\"requ" +
            "est\":{\"$ref\":\"Comment\"},\"response\":{\"$ref\":\"Comment\"},\"scopes\":[\"https://www.goo" +
            "gleapis.com/auth/orkut\"]},\"list\":{\"id\":\"orkut.comments.list\",\"path\":\"activities/" +
            "{activityId}/comments\",\"httpMethod\":\"GET\",\"description\":\"Retrieves a list of com" +
            "ments, possibly filtered.\",\"parameters\":{\"activityId\":{\"type\":\"string\",\"descript" +
            "ion\":\"The ID of the activity containing the comments.\",\"required\":true,\"location" +
            "\":\"path\"},\"hl\":{\"type\":\"string\",\"description\":\"Specifies the interface language " +
            "(host language) of your user interface.\",\"location\":\"query\"},\"maxResults\":{\"type" +
            "\":\"integer\",\"description\":\"The maximum number of activities to include in the re" +
            "sponse.\",\"format\":\"uint32\",\"minimum\":\"1\",\"location\":\"query\"},\"orderBy\":{\"type\":\"" +
            "string\",\"description\":\"Sort search results.\",\"default\":\"descending\",\"enum\":[\"asc" +
            "ending\",\"descending\"],\"enumDescriptions\":[\"Use ascending sort order.\",\"Use desce" +
            "nding sort order.\"],\"location\":\"query\"},\"pageToken\":{\"type\":\"string\",\"descriptio" +
            "n\":\"A continuation token that allows pagination.\",\"location\":\"query\"}},\"paramete" +
            "rOrder\":[\"activityId\"],\"response\":{\"$ref\":\"CommentList\"},\"scopes\":[\"https://www." +
            "googleapis.com/auth/orkut\",\"https://www.googleapis.com/auth/orkut.readonly\"]}}}," +
            "\"counters\":{\"methods\":{\"list\":{\"id\":\"orkut.counters.list\",\"path\":\"people/{userId" +
            "}/counters\",\"httpMethod\":\"GET\",\"description\":\"Retrieves the counters of an user." +
            "\",\"parameters\":{\"userId\":{\"type\":\"string\",\"description\":\"The ID of the user whos" +
            "e counters will be listed. Can be me to refer to caller.\",\"required\":true,\"locat" +
            "ion\":\"path\"}},\"parameterOrder\":[\"userId\"],\"response\":{\"$ref\":\"Counters\"},\"scopes" +
            "\":[\"https://www.googleapis.com/auth/orkut\"]}}}}}";
        
        private const string Version = "v2";
        
        private const string Name = "orkut";
        
        private const string BaseUri = "https://www.googleapis.com/orkut/v2/";
        
        private const Google.Apis.Discovery.DiscoveryVersion DiscoveryVersionUsed = Google.Apis.Discovery.DiscoveryVersion.Version_1_0;
        
        private string key;
        
        protected OrkutService(Google.Apis.Discovery.IService genericService, Google.Apis.Authentication.IAuthenticator authenticator) {
            this.genericService = genericService;
            this.authenticator = authenticator;
            this.acl = new AclResource(this);
            this.activities = new ActivitiesResource(this);
            this.activityVisibility = new ActivityVisibilityResource(this);
            this.badges = new BadgesResource(this);
            this.comments = new CommentsResource(this);
            this.counters = new CountersResource(this);
        }
        
        public OrkutService() : 
                this(Google.Apis.Authentication.NullAuthenticator.Instance) {
        }
        
        public OrkutService(Google.Apis.Authentication.IAuthenticator authenticator) : 
                this(new Google.Apis.Discovery.DiscoveryService(new Google.Apis.Discovery.StringDiscoveryDevice(DiscoveryDocument)).GetService(OrkutService.DiscoveryVersionUsed, new Google.Apis.Discovery.FactoryParameterV1_0(new System.Uri(OrkutService.BaseUri))), authenticator) {
        }
        
        /// <summary>Sets the API-Key (or DeveloperKey) which this service uses for all requests</summary>
        public virtual string Key {
            get {
                return this.key;
            }
            set {
                this.key = value;
            }
        }
        
        public virtual Google.Apis.Requests.IRequest CreateRequest(string resource, string method) {
            Google.Apis.Requests.IRequest request = this.genericService.CreateRequest(resource, method);
            if (!string.IsNullOrEmpty(Key)) {
                request = request.WithKey(this.Key);
            }
            return request.WithAuthentication(authenticator);
        }
        
        public virtual void RegisterSerializer(Google.Apis.ISerializer serializer) {
            genericService.Serializer = serializer;
        }
        
        public virtual string SerializeObject(object obj) {
            return genericService.SerializeRequest(obj);
        }
        
        public virtual T DeserializeResponse<T>(Google.Apis.Requests.IResponse response)
         {
            return genericService.DeserializeResponse<T>(response);
        }
        
        /// <summary>A list of all OAuth2.0 scopes. Each of these scopes relates to a permission or group of permissions that different methods of this API may need.</summary>
        public enum Scopes {
            
            /// <summary>Manage your Orkut activity</summary>
            [Google.Apis.Util.StringValueAttribute("https://www.googleapis.com/auth/orkut")]
            Orkut,
            
            /// <summary>View your Orkut data</summary>
            [Google.Apis.Util.StringValueAttribute("https://www.googleapis.com/auth/orkut.readonly")]
            OrkutReadonly,
        }
    }
    
    public class AclResource {
        
        private Google.Apis.Discovery.IRequestProvider service;
        
        private const string Resource = "acl";
        
        public AclResource(OrkutService service) {
            this.service = service;
        }
        
        /// <summary>Excludes an element from the ACL of the activity.</summary>
        /// <param name="activityId">Required - ID of the activity.</param>
        /// <param name="userId">Required - ID of the user to be removed from the activity.</param>
        public virtual DeleteRequest Delete(string activityId, string userId) {
            return new DeleteRequest(service, activityId, userId);
        }
        
        public class DeleteRequest : Google.Apis.Requests.ServiceRequest<string> {
            
            private string activityId;
            
            private string userId;
            
            public DeleteRequest(Google.Apis.Discovery.IRequestProvider service, string activityId, string userId) : 
                    base(service) {
                this.activityId = activityId;
                this.userId = userId;
            }
            
            /// <summary>ID of the activity.</summary>
            [Google.Apis.Util.RequestParameterAttribute("activityId")]
            public virtual string ActivityId {
                get {
                    return this.activityId;
                }
            }
            
            /// <summary>ID of the user to be removed from the activity.</summary>
            [Google.Apis.Util.RequestParameterAttribute("userId")]
            public virtual string UserId {
                get {
                    return this.userId;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "acl";
                }
            }
            
            protected override string MethodName {
                get {
                    return "delete";
                }
            }
        }
    }
    
    public class ActivitiesResource {
        
        private Google.Apis.Discovery.IRequestProvider service;
        
        private const string Resource = "activities";
        
        public ActivitiesResource(OrkutService service) {
            this.service = service;
        }
        
        /// <summary>Deletes an existing activity, if the access controls allow it.</summary>
        /// <param name="activityId">Required - ID of the activity to remove.</param>
        public virtual DeleteRequest Delete(string activityId) {
            return new DeleteRequest(service, activityId);
        }
        
        /// <summary>Retrieves a list of activities.</summary>
        /// <param name="userId">Required - The ID of the user whose activities will be listed. Can be me to refer to the viewer (i.e. the authenticated user).</param>
        /// <param name="collection">Required - Must be one of the following values [all, scraps, stream] - The collection of activities to list.</param>
        public virtual ListRequest List(string userId, Collection collection) {
            return new ListRequest(service, userId, collection);
        }
        
        /// <summary>The collection of activities to list.</summary>
        [System.ComponentModel.TypeConverterAttribute(typeof(Google.Apis.Util.EnumStringValueTypeConverter))]
        public enum Collection {
            
            /// <summary>All activities created by the specified user that the authenticated user is authorized to view.</summary>
            [Google.Apis.Util.StringValueAttribute("all")]
            All,
            
            /// <summary>The specified user&apos;s scrapbook.</summary>
            [Google.Apis.Util.StringValueAttribute("scraps")]
            Scraps,
            
            /// <summary>The specified user&apos;s stream feed, intended for consumption. This includes activities posted by people that the user is following, and activities in which the user has been mentioned.</summary>
            [Google.Apis.Util.StringValueAttribute("stream")]
            Stream,
        }
        
        public class DeleteRequest : Google.Apis.Requests.ServiceRequest<string> {
            
            private string activityId;
            
            public DeleteRequest(Google.Apis.Discovery.IRequestProvider service, string activityId) : 
                    base(service) {
                this.activityId = activityId;
            }
            
            /// <summary>ID of the activity to remove.</summary>
            [Google.Apis.Util.RequestParameterAttribute("activityId")]
            public virtual string ActivityId {
                get {
                    return this.activityId;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "activities";
                }
            }
            
            protected override string MethodName {
                get {
                    return "delete";
                }
            }
        }
        
        public class ListRequest : Google.Apis.Requests.ServiceRequest<Google.Apis.Orkut.v2.Data.ActivityList> {
            
            private Collection collection;
            
            private string hl;
            
            private System.Int64? maxResults;
            
            private string pageToken;
            
            private string userId;
            
            public ListRequest(Google.Apis.Discovery.IRequestProvider service, string userId, Collection collection) : 
                    base(service) {
                this.userId = userId;
                this.collection = collection;
            }
            
            /// <summary>The collection of activities to list.</summary>
            [Google.Apis.Util.RequestParameterAttribute("collection")]
            public virtual Collection Collection {
                get {
                    return this.collection;
                }
            }
            
            /// <summary>Specifies the interface language (host language) of your user interface.</summary>
            [Google.Apis.Util.RequestParameterAttribute("hl")]
            public virtual string Hl {
                get {
                    return this.hl;
                }
                set {
                    this.hl = value;
                }
            }
            
            /// <summary>The maximum number of activities to include in the response.</summary>
            [Google.Apis.Util.RequestParameterAttribute("maxResults")]
            public virtual System.Int64? MaxResults {
                get {
                    return this.maxResults;
                }
                set {
                    this.maxResults = value;
                }
            }
            
            /// <summary>A continuation token that allows pagination.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken")]
            public virtual string PageToken {
                get {
                    return this.pageToken;
                }
                set {
                    this.pageToken = value;
                }
            }
            
            /// <summary>The ID of the user whose activities will be listed. Can be me to refer to the viewer (i.e. the authenticated user).</summary>
            [Google.Apis.Util.RequestParameterAttribute("userId")]
            public virtual string UserId {
                get {
                    return this.userId;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "activities";
                }
            }
            
            protected override string MethodName {
                get {
                    return "list";
                }
            }
        }
    }
    
    public class ActivityVisibilityResource {
        
        private Google.Apis.Discovery.IRequestProvider service;
        
        private const string Resource = "activityVisibility";
        
        public ActivityVisibilityResource(OrkutService service) {
            this.service = service;
        }
        
        /// <summary>Gets the visibility of an existing activity.</summary>
        /// <param name="activityId">Required - ID of the activity to get the visibility.</param>
        public virtual GetRequest Get(string activityId) {
            return new GetRequest(service, activityId);
        }
        
        /// <summary>Updates the visibility of an existing activity. This method supports patch semantics.</summary>
        /// <param name="activityId">Required - ID of the activity.</param>
        public virtual PatchRequest Patch(Google.Apis.Orkut.v2.Data.Visibility body, string activityId) {
            return new PatchRequest(service, body, activityId);
        }
        
        /// <summary>Updates the visibility of an existing activity.</summary>
        /// <param name="activityId">Required - ID of the activity.</param>
        public virtual UpdateRequest Update(Google.Apis.Orkut.v2.Data.Visibility body, string activityId) {
            return new UpdateRequest(service, body, activityId);
        }
        
        public class GetRequest : Google.Apis.Requests.ServiceRequest<Google.Apis.Orkut.v2.Data.Visibility> {
            
            private string activityId;
            
            public GetRequest(Google.Apis.Discovery.IRequestProvider service, string activityId) : 
                    base(service) {
                this.activityId = activityId;
            }
            
            /// <summary>ID of the activity to get the visibility.</summary>
            [Google.Apis.Util.RequestParameterAttribute("activityId")]
            public virtual string ActivityId {
                get {
                    return this.activityId;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "activityVisibility";
                }
            }
            
            protected override string MethodName {
                get {
                    return "get";
                }
            }
        }
        
        public class PatchRequest : Google.Apis.Requests.ServiceRequest<Google.Apis.Orkut.v2.Data.Visibility> {
            
            private string activityId;
            
            private Google.Apis.Orkut.v2.Data.Visibility bodyValue;
            
            public PatchRequest(Google.Apis.Discovery.IRequestProvider service, Google.Apis.Orkut.v2.Data.Visibility body, string activityId) : 
                    base(service) {
                this.Body = body;
                this.activityId = activityId;
            }
            
            /// <summary>ID of the activity.</summary>
            [Google.Apis.Util.RequestParameterAttribute("activityId")]
            public virtual string ActivityId {
                get {
                    return this.activityId;
                }
            }
            
            /// <summary>Gets/Sets the Body of this Request.</summary>
            public virtual Google.Apis.Orkut.v2.Data.Visibility Body {
                get {
                    return this.bodyValue;
                }
                set {
                    this.bodyValue = value;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "activityVisibility";
                }
            }
            
            protected override string MethodName {
                get {
                    return "patch";
                }
            }
            
            protected override object GetBody() {
                return this.Body;
            }
        }
        
        public class UpdateRequest : Google.Apis.Requests.ServiceRequest<Google.Apis.Orkut.v2.Data.Visibility> {
            
            private string activityId;
            
            private Google.Apis.Orkut.v2.Data.Visibility bodyValue;
            
            public UpdateRequest(Google.Apis.Discovery.IRequestProvider service, Google.Apis.Orkut.v2.Data.Visibility body, string activityId) : 
                    base(service) {
                this.Body = body;
                this.activityId = activityId;
            }
            
            /// <summary>ID of the activity.</summary>
            [Google.Apis.Util.RequestParameterAttribute("activityId")]
            public virtual string ActivityId {
                get {
                    return this.activityId;
                }
            }
            
            /// <summary>Gets/Sets the Body of this Request.</summary>
            public virtual Google.Apis.Orkut.v2.Data.Visibility Body {
                get {
                    return this.bodyValue;
                }
                set {
                    this.bodyValue = value;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "activityVisibility";
                }
            }
            
            protected override string MethodName {
                get {
                    return "update";
                }
            }
            
            protected override object GetBody() {
                return this.Body;
            }
        }
    }
    
    public class BadgesResource {
        
        private Google.Apis.Discovery.IRequestProvider service;
        
        private const string Resource = "badges";
        
        public BadgesResource(OrkutService service) {
            this.service = service;
        }
        
        /// <summary>Retrieves a badge from a user.</summary>
        /// <param name="userId">Required - The ID of the user whose badges will be listed. Can be me to refer to caller.</param>
        /// <param name="badgeId">Required - The ID of the badge that will be retrieved.</param>
        public virtual GetRequest Get(string userId, string badgeId) {
            return new GetRequest(service, userId, badgeId);
        }
        
        /// <summary>Retrieves the list of visible badges of a user.</summary>
        /// <param name="userId">Required - The id of the user whose badges will be listed. Can be me to refer to caller.</param>
        public virtual ListRequest List(string userId) {
            return new ListRequest(service, userId);
        }
        
        public class GetRequest : Google.Apis.Requests.ServiceRequest<Google.Apis.Orkut.v2.Data.Badge> {
            
            private string badgeId;
            
            private string userId;
            
            public GetRequest(Google.Apis.Discovery.IRequestProvider service, string userId, string badgeId) : 
                    base(service) {
                this.userId = userId;
                this.badgeId = badgeId;
            }
            
            /// <summary>The ID of the badge that will be retrieved.</summary>
            [Google.Apis.Util.RequestParameterAttribute("badgeId")]
            public virtual string BadgeId {
                get {
                    return this.badgeId;
                }
            }
            
            /// <summary>The ID of the user whose badges will be listed. Can be me to refer to caller.</summary>
            [Google.Apis.Util.RequestParameterAttribute("userId")]
            public virtual string UserId {
                get {
                    return this.userId;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "badges";
                }
            }
            
            protected override string MethodName {
                get {
                    return "get";
                }
            }
        }
        
        public class ListRequest : Google.Apis.Requests.ServiceRequest<Google.Apis.Orkut.v2.Data.BadgeList> {
            
            private string userId;
            
            public ListRequest(Google.Apis.Discovery.IRequestProvider service, string userId) : 
                    base(service) {
                this.userId = userId;
            }
            
            /// <summary>The id of the user whose badges will be listed. Can be me to refer to caller.</summary>
            [Google.Apis.Util.RequestParameterAttribute("userId")]
            public virtual string UserId {
                get {
                    return this.userId;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "badges";
                }
            }
            
            protected override string MethodName {
                get {
                    return "list";
                }
            }
        }
    }
    
    public class CommentsResource {
        
        private Google.Apis.Discovery.IRequestProvider service;
        
        private const string Resource = "comments";
        
        public CommentsResource(OrkutService service) {
            this.service = service;
        }
        
        /// <summary>Deletes an existing comment.</summary>
        /// <param name="commentId">Required - ID of the comment to remove.</param>
        public virtual DeleteRequest Delete(string commentId) {
            return new DeleteRequest(service, commentId);
        }
        
        /// <summary>Retrieves an existing comment.</summary>
        /// <param name="commentId">Required - ID of the comment to get.</param>
        public virtual GetRequest Get(string commentId) {
            return new GetRequest(service, commentId);
        }
        
        /// <summary>Inserts a new comment to an activity.</summary>
        /// <param name="activityId">Required - The ID of the activity to contain the new comment.</param>
        public virtual InsertRequest Insert(Google.Apis.Orkut.v2.Data.Comment body, string activityId) {
            return new InsertRequest(service, body, activityId);
        }
        
        /// <summary>Retrieves a list of comments, possibly filtered.</summary>
        /// <param name="activityId">Required - The ID of the activity containing the comments.</param>
        public virtual ListRequest List(string activityId) {
            return new ListRequest(service, activityId);
        }
        
        /// <summary>Sort search results.</summary>
        [System.ComponentModel.TypeConverterAttribute(typeof(Google.Apis.Util.EnumStringValueTypeConverter))]
        public enum OrderBy {
            
            /// <summary>Use ascending sort order.</summary>
            [Google.Apis.Util.StringValueAttribute("ascending")]
            Ascending,
            
            /// <summary>Use descending sort order.</summary>
            [Google.Apis.Util.StringValueAttribute("descending")]
            Descending,
        }
        
        public class DeleteRequest : Google.Apis.Requests.ServiceRequest<string> {
            
            private string commentId;
            
            public DeleteRequest(Google.Apis.Discovery.IRequestProvider service, string commentId) : 
                    base(service) {
                this.commentId = commentId;
            }
            
            /// <summary>ID of the comment to remove.</summary>
            [Google.Apis.Util.RequestParameterAttribute("commentId")]
            public virtual string CommentId {
                get {
                    return this.commentId;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "comments";
                }
            }
            
            protected override string MethodName {
                get {
                    return "delete";
                }
            }
        }
        
        public class GetRequest : Google.Apis.Requests.ServiceRequest<Google.Apis.Orkut.v2.Data.Comment> {
            
            private string commentId;
            
            private string hl;
            
            public GetRequest(Google.Apis.Discovery.IRequestProvider service, string commentId) : 
                    base(service) {
                this.commentId = commentId;
            }
            
            /// <summary>ID of the comment to get.</summary>
            [Google.Apis.Util.RequestParameterAttribute("commentId")]
            public virtual string CommentId {
                get {
                    return this.commentId;
                }
            }
            
            /// <summary>Specifies the interface language (host language) of your user interface.</summary>
            [Google.Apis.Util.RequestParameterAttribute("hl")]
            public virtual string Hl {
                get {
                    return this.hl;
                }
                set {
                    this.hl = value;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "comments";
                }
            }
            
            protected override string MethodName {
                get {
                    return "get";
                }
            }
        }
        
        public class InsertRequest : Google.Apis.Requests.ServiceRequest<Google.Apis.Orkut.v2.Data.Comment> {
            
            private string activityId;
            
            private Google.Apis.Orkut.v2.Data.Comment bodyValue;
            
            public InsertRequest(Google.Apis.Discovery.IRequestProvider service, Google.Apis.Orkut.v2.Data.Comment body, string activityId) : 
                    base(service) {
                this.Body = body;
                this.activityId = activityId;
            }
            
            /// <summary>The ID of the activity to contain the new comment.</summary>
            [Google.Apis.Util.RequestParameterAttribute("activityId")]
            public virtual string ActivityId {
                get {
                    return this.activityId;
                }
            }
            
            /// <summary>Gets/Sets the Body of this Request.</summary>
            public virtual Google.Apis.Orkut.v2.Data.Comment Body {
                get {
                    return this.bodyValue;
                }
                set {
                    this.bodyValue = value;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "comments";
                }
            }
            
            protected override string MethodName {
                get {
                    return "insert";
                }
            }
            
            protected override object GetBody() {
                return this.Body;
            }
        }
        
        public class ListRequest : Google.Apis.Requests.ServiceRequest<Google.Apis.Orkut.v2.Data.CommentList> {
            
            private string activityId;
            
            private string hl;
            
            private System.Int64? maxResults;
            
            private OrderBy? orderBy;
            
            private string pageToken;
            
            public ListRequest(Google.Apis.Discovery.IRequestProvider service, string activityId) : 
                    base(service) {
                this.activityId = activityId;
            }
            
            /// <summary>The ID of the activity containing the comments.</summary>
            [Google.Apis.Util.RequestParameterAttribute("activityId")]
            public virtual string ActivityId {
                get {
                    return this.activityId;
                }
            }
            
            /// <summary>Specifies the interface language (host language) of your user interface.</summary>
            [Google.Apis.Util.RequestParameterAttribute("hl")]
            public virtual string Hl {
                get {
                    return this.hl;
                }
                set {
                    this.hl = value;
                }
            }
            
            /// <summary>The maximum number of activities to include in the response.</summary>
            [Google.Apis.Util.RequestParameterAttribute("maxResults")]
            public virtual System.Int64? MaxResults {
                get {
                    return this.maxResults;
                }
                set {
                    this.maxResults = value;
                }
            }
            
            /// <summary>Sort search results.</summary>
            [Google.Apis.Util.RequestParameterAttribute("orderBy")]
            public virtual OrderBy? OrderBy {
                get {
                    return this.orderBy;
                }
                set {
                    this.orderBy = value;
                }
            }
            
            /// <summary>A continuation token that allows pagination.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken")]
            public virtual string PageToken {
                get {
                    return this.pageToken;
                }
                set {
                    this.pageToken = value;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "comments";
                }
            }
            
            protected override string MethodName {
                get {
                    return "list";
                }
            }
        }
    }
    
    public class CountersResource {
        
        private Google.Apis.Discovery.IRequestProvider service;
        
        private const string Resource = "counters";
        
        public CountersResource(OrkutService service) {
            this.service = service;
        }
        
        /// <summary>Retrieves the counters of an user.</summary>
        /// <param name="userId">Required - The ID of the user whose counters will be listed. Can be me to refer to caller.</param>
        public virtual ListRequest List(string userId) {
            return new ListRequest(service, userId);
        }
        
        public class ListRequest : Google.Apis.Requests.ServiceRequest<Google.Apis.Orkut.v2.Data.Counters> {
            
            private string userId;
            
            public ListRequest(Google.Apis.Discovery.IRequestProvider service, string userId) : 
                    base(service) {
                this.userId = userId;
            }
            
            /// <summary>The ID of the user whose counters will be listed. Can be me to refer to caller.</summary>
            [Google.Apis.Util.RequestParameterAttribute("userId")]
            public virtual string UserId {
                get {
                    return this.userId;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "counters";
                }
            }
            
            protected override string MethodName {
                get {
                    return "list";
                }
            }
        }
    }
    
    public partial class OrkutService {
        
        private const string Resource = "";
        
        private AclResource acl;
        
        private ActivitiesResource activities;
        
        private ActivityVisibilityResource activityVisibility;
        
        private BadgesResource badges;
        
        private CommentsResource comments;
        
        private CountersResource counters;
        
        private Google.Apis.Discovery.IRequestProvider service {
            get {
                return this;
            }
        }
        
        public virtual AclResource Acl {
            get {
                return this.acl;
            }
        }
        
        public virtual ActivitiesResource Activities {
            get {
                return this.activities;
            }
        }
        
        public virtual ActivityVisibilityResource ActivityVisibility {
            get {
                return this.activityVisibility;
            }
        }
        
        public virtual BadgesResource Badges {
            get {
                return this.badges;
            }
        }
        
        public virtual CommentsResource Comments {
            get {
                return this.comments;
            }
        }
        
        public virtual CountersResource Counters {
            get {
                return this.counters;
            }
        }
    }
}
